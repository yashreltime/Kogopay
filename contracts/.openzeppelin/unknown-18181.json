{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xEE7d48B22aEBD4e7A58BD6686032E39252447245",
    "txHash": "0x5a7f08376e028a27af5813d2228b808a3ebaa522d6ea1583b236eeb74ece4bed"
  },
  "proxies": [
    {
      "address": "0xc9B1B5792cF4B50BB18Fe59203B25F7A633be283",
      "txHash": "0x5dd8002e8bbfdb58cd7e6f3dbf778a0ca723d03559bae6c98dad2faf843ce0ae",
      "kind": "transparent"
    },
    {
      "address": "0xd920DeCcaf0E40abd495375dcE271460d91ff157",
      "txHash": "0x485ff2d53714bb436523c9ffe3c9b45cfc0be3a98074bba3d2a5af23291c8f72",
      "kind": "transparent"
    },
    {
      "address": "0xD2CBd3D7eB856bCF8d864A2D3984F37c8eD29172",
      "txHash": "0x543e4d51cee33e43f5c51bcb8204aa5bf22aae85a07dfb795e610dde15b654a1",
      "kind": "transparent"
    },
    {
      "address": "0x9C5Ce6f92C0a8a549121E74aCeDEA87a51e8880f",
      "txHash": "0xd53540036b7295ca3bbb49b08054b41b22ba34e6397853f6120c02bcc707ec09",
      "kind": "transparent"
    },
    {
      "address": "0xBcd3eE26cAda45491CeDfE75644c4362ace231b5",
      "txHash": "0x49a13095f15abd1d11dd0db80b16805381b4dd86067300d4744c7aa4346a28bc",
      "kind": "transparent"
    },
    {
      "address": "0x0b9b8A960bF7075eA89702b1aFe45c6fa8cc4a2d",
      "txHash": "0xf4154d3f095bc76d91a30f4e6e2d424c8378b7dee1047efe3050c77a53a2dda3",
      "kind": "transparent"
    },
    {
      "address": "0xe2cDf65d361d8Ac6049a053302A5F47FA5Ad63AF",
      "txHash": "0xcf9893ea9fb92e42f266a0b2e0f5f64461f5eeca65c4dd5de2dfa1bc992e4eb1",
      "kind": "transparent"
    },
    {
      "address": "0xC74ba7aA54d6F43cbC6b15E356756E296fcfDC71",
      "txHash": "0x62adee34d0aab5d30f08f1374814de02e39532972f1f74a182ff0abca888da49",
      "kind": "transparent"
    },
    {
      "address": "0x58f48763b931029EBd2453815d79fB8CbC581683",
      "txHash": "0x66496a2a8a953822ffb5c9edd4b9246b3302f610b12e129012f2ee6d0d60527f",
      "kind": "transparent"
    },
    {
      "address": "0xE79587e4b7A55fd78692f4C593bd45Fad1338a6B",
      "txHash": "0xf7ec58bb0087c913ca04c5e57e1c858b8050bb247f7fb16f14999fe264a2566f",
      "kind": "transparent"
    },
    {
      "address": "0xDF87Ad110604b56889a5B23100Ae17e7b8496B9f",
      "txHash": "0x9dd2414ad448a8af120671ffbcbe91219837c24909e79f8d2b940b71d86068c0",
      "kind": "transparent"
    },
    {
      "address": "0xaB656F8D9591AF1B158E3ff3E5b2a2A21c3ce1eD",
      "txHash": "0xb72a8de2196d305608a04118059909efeafe56b19e64340043f1d10125354866",
      "kind": "transparent"
    },
    {
      "address": "0x6306aa213FA676807D9574Edc2400B4977C9E308",
      "txHash": "0x61ca812681f633e52227f8d58146aa1dfb864033cfa6e0d596718d00d53dd472",
      "kind": "transparent"
    },
    {
      "address": "0x1bde60a8F3cD69b53B00d34B0dB9f09b81c78f82",
      "txHash": "0xf5d61179b52c85a849437a76f85559511f0a76b652f41eaf3999499f69b15967",
      "kind": "transparent"
    },
    {
      "address": "0x5d7243a3FC5256422e7B67b0709D85b6cd850059",
      "txHash": "0xcfd972f08cb1e50beaa3e91db21f99468d9f46c9819892948781742a5369c044",
      "kind": "transparent"
    },
    {
      "address": "0xb1f63fDc8bE5572a6CeA7bC763E89Cb77113C6e2",
      "txHash": "0xfed1fefe6e21ebd660f4c23a4e1c808b5c852b0b530b1f7990825bfb361ec2ee",
      "kind": "transparent"
    },
    {
      "address": "0x0B7A01611A88D1E30A6368ad66452875F81d56b2",
      "txHash": "0xc753c50a49536f12642adbef25b1436dfe12d69570abb7ebca89fed0ebc04aae",
      "kind": "transparent"
    },
    {
      "address": "0x02088811E4d6ff34401Ae1C245d1031618545B95",
      "txHash": "0x122c1c9ab8587ed552c4153449fd2c1967c5458caa87d5a904cc43d0a41cbe84",
      "kind": "transparent"
    },
    {
      "address": "0xda751Af53fF3265D8b4b1d99A165364556cf4b4c",
      "txHash": "0xa4c096624a676fd1c896b99ae7efac2ee229d3afd585143b9cd548d12e1768aa",
      "kind": "transparent"
    },
    {
      "address": "0xDE6a78a29F937F73EfcD8551D048f4a743f9D051",
      "txHash": "0x9abb368491acaec023ced4dab627983b33e0eb81eb27a207cc7d19f0d3ebf58b",
      "kind": "transparent"
    },
    {
      "address": "0x3Caf092071BE130364Ebf234371975dfb053cC91",
      "txHash": "0x66710b83108a314f16fd0d9ac0a9008b1aa32e4065964029546e00deca97a5ba",
      "kind": "transparent"
    },
    {
      "address": "0xadFAD6E83604c583824afFd025e4d109A3B44d59",
      "txHash": "0x7bc24400db30ae860aa129e5e8d59b1e1681e774205bcbc0761251a9f6a265a5",
      "kind": "transparent"
    },
    {
      "address": "0x2F6A9e1A2f148d97E225009F30c0285210434B25",
      "txHash": "0xbe49e5d32246da7dbb7a12f46f85d9f748342e753b233f7d767da5ac3e919a5f",
      "kind": "transparent"
    },
    {
      "address": "0x22Bad2889Af4b2e630B3e68cc9Bc33afF9270b17",
      "txHash": "0xc0c6cb7f9b05dfe1dc1b7aab0aad378143d7a98be96db85d5b4fffeaba587d68",
      "kind": "transparent"
    },
    {
      "address": "0xe965C693B567dfde81be3c9BE22983Cfcfc978cb",
      "txHash": "0x0bcd5eab567903622ea9ef6a20965501799987a053e1871ffec4067ffefb12d0",
      "kind": "transparent"
    },
    {
      "address": "0xA960b2C55B98aE50d76D95E3aBf218D2db50A7De",
      "txHash": "0x678d7ed736bf6196b64ebef422e170590999296f3b3931a5c005f4dad2bfc49f",
      "kind": "transparent"
    },
    {
      "address": "0xbAF843275a34d98e633c7555e1A6C2bd6d192ee9",
      "txHash": "0x099166c57a3879d396de41c28cf5dd0997a72327aa0cf202825e1cdcbf0a8177",
      "kind": "transparent"
    },
    {
      "address": "0x990cBd0F34bb1194387837c2579E89E409916018",
      "txHash": "0xf806c88dc6df657b95e0655f44f3ac0462d94d634819a94d93d86e1ddd20cf76",
      "kind": "transparent"
    },
    {
      "address": "0x935102484327ec17217ac052830083824fE5B71E",
      "txHash": "0x60dd024d64c2f061b66507eba533b45dd30041bb88302774d93e90d21df39d3c",
      "kind": "transparent"
    },
    {
      "address": "0x20cfB60949B78FEe9C64C632A665D07A268Ec300",
      "txHash": "0x951ddd0b51872d13bd5ac40ee1011382ce4de826e158ed39b6d5811aef6c2eb3",
      "kind": "transparent"
    },
    {
      "address": "0xC27Ca3DC5591ff62F696E2AED6eec4549D3582b6",
      "txHash": "0x2d06c8db0d92188802ea1a15b3bcbd38fa73ae4a4342ca66a9654449caa51165",
      "kind": "transparent"
    },
    {
      "address": "0x2cE8E761327da36c9d2D9D97A7b06E0A40295013",
      "txHash": "0xfc4a7e13dc0da23d01c2df5373138912cebbda0939a2381dc7db50ec26d85ced",
      "kind": "transparent"
    },
    {
      "address": "0x242a710EE23e0382C8173beaA804B87dB814bE38",
      "txHash": "0xd14656fa5b189c1381902ad6348987f97db475ba36f00d224fffa7e0a76684a0",
      "kind": "transparent"
    },
    {
      "address": "0xb47bFf7a5873Dec989E847dacf95a44c88eFFCC9",
      "txHash": "0x1ff5ddafcfa655f1f73067696efb8d4c630983d66f2c1bc6b6adbe6ffde79094",
      "kind": "transparent"
    },
    {
      "address": "0x392004c91BB2635dDdf844667993B619ac3cF0e0",
      "txHash": "0x7a2953a9a5b9c17651488dc5acb6ceddda87bb947c6f882619d3fef9cbb2594a",
      "kind": "transparent"
    },
    {
      "address": "0xecaE22BDc6Ea7e09E8f3779a82c4eA318fb59915",
      "txHash": "0x71b07a2c8d5c067b86abcd698faa127b2f2e638313dc72c2aa3a908a79d690c3",
      "kind": "transparent"
    },
    {
      "address": "0x13AB6905EDD07029E13EeB0465512820514FAdE6",
      "txHash": "0x2f6fe3c774106b3622b3709ed967e015c27402418b9b9d67ac9cb149350a6d47",
      "kind": "transparent"
    },
    {
      "address": "0xd881939aDe0966436A463A40d31f6CA2AB8eBEDE",
      "txHash": "0xfb741b677005dabc729ac38af927ef7172dbe25bf6fbccd1bfe9c28fcd80eb0c",
      "kind": "transparent"
    },
    {
      "address": "0x56691CD315D6c57D2dA1EB6f419858CBb6E2e41D",
      "txHash": "0xf2a7ce0229ad98165c98c2e31add0e366b13a42b94ea0b51c3fcb5d037ee1c68",
      "kind": "transparent"
    },
    {
      "address": "0x4A552B36de999Dd4090A05bA90dA0a41cF86dd24",
      "txHash": "0x9239496fece72963c4183b3ff4afcae09cf369bf052e097056a0f0742ac5ca4b",
      "kind": "transparent"
    },
    {
      "address": "0xb5757E191DDb122394baA9464c2cc697A710ab88",
      "txHash": "0xb6d78cfd03ad7f73a5c85b0a6c5307019e2b57e8d79283c1cf2a563ab08860ab",
      "kind": "transparent"
    },
    {
      "address": "0x822A37712176C5F25a8BD98e844CdB9d2E402d56",
      "txHash": "0x297b8af00d09e2fc9f8a6cacbefa17aaec825ac49fb8f691fa3666abc4668d0a",
      "kind": "transparent"
    },
    {
      "address": "0xcc8e24C8f3Ad81201981aBF9Ab42c18b59D86C75",
      "txHash": "0x968ef6080cd863ab17fc9486af06048416ba001e909814127d66f78b99f7a296",
      "kind": "beacon"
    },
    {
      "address": "0xd6453D954087d72ec08dA512aCe2fe9089648e13",
      "txHash": "0x7d4611ff01f07c4afd674c4477c4679207d0196b8e094ffcfcfec24b631279b7",
      "kind": "transparent"
    },
    {
      "address": "0x8Bf078834aF20eDC3c1265f4bAb495f41785C930",
      "txHash": "0xf2d38a3b036d86c101be0126fd618e87f42ca207c019acdd70d68200095049e9",
      "kind": "beacon"
    },
    {
      "address": "0x0E6550AeC0C94593558A99eb8adEB9fd5233BbA4",
      "txHash": "0x77213a57d04ade7357a21198f9d079ca3fed7cdc845922beda1b9418d73e9030",
      "kind": "transparent"
    },
    {
      "address": "0xDB25A0aE77753876846c6b2Afa28e337405ff96F",
      "txHash": "0xa9dcb5a434c717256755e91fa7632fd2be663421b9ecc959021e615d49b84fbc",
      "kind": "transparent"
    },
    {
      "address": "0x0F7474d4be3C318e6059EC6fa0d8Ee89203F2355",
      "txHash": "0x7480d9d8bb7e62511a77eb46e9b39dbb2bce24ab5b346e3ff50b861c5ce0619d",
      "kind": "transparent"
    },
    {
      "address": "0x17dDA74c722e11C8b0f1B72760c1138898f813f4",
      "txHash": "0xe6afbbb2631b5839b4e19a993c231f79b1f14d7807190fe00d53548ff1624809",
      "kind": "transparent"
    },
    {
      "address": "0x1ACAc69b19F5014AD0E5a6C783Db986Bbcc4CcD4",
      "txHash": "0x434237f2fbcc29979f1e9fe003d0a0a21259689495aed37432ea07d4da7dc424",
      "kind": "transparent"
    },
    {
      "address": "0x44017473f0EB80184ca79aFC9b13D69D76a81b41",
      "txHash": "0xf9b13e2bebc4b6ca3212ee9d6926578a3990bf14d613549b86d94003e289bbc2",
      "kind": "transparent"
    },
    {
      "address": "0x5cBc7328e87c2E67D56E2dEb25Ea802A3d9E803a",
      "txHash": "0xb3a609f7bc04a50f35ddbead33554875dde63259b10851465196223ffda206d5",
      "kind": "transparent"
    },
    {
      "address": "0x79F3e911d4c5d7Cbb5B089aB51Ab9d50C56f873F",
      "txHash": "0xcc716b9303a4ae690040d2787b2c7b5c4032f2e527d1f8d743538b244a3d3442",
      "kind": "transparent"
    },
    {
      "address": "0x73B7840179653882D7B96003c3D25f30e608C9e6",
      "txHash": "0x862f4a5e326b5620a650157671cac5d0f96166c311727c05b32d2fbad77f3ef3",
      "kind": "transparent"
    },
    {
      "address": "0x31630F638441e255a83f2aA5956d1d86711336B8",
      "txHash": "0xec1eaa1f072dd769933a770fef235b5921ac83c01ac4ff887ef547d851fbe222",
      "kind": "transparent"
    },
    {
      "address": "0xdB0D4B6e29D6d21d4525B3C451b37E802dC9d744",
      "txHash": "0x3317c97862dc6252a12743926ab7894a05aca77404d3f954f6189bf98e2d7b86",
      "kind": "transparent"
    },
    {
      "address": "0x12f7B2DF71A531f0E40D78cA73D08AfbA0cD5db4",
      "txHash": "0xaf8dcc5c1010b1ce5bedabaca6df0727b748b51d3563df450321333325d5b3ab",
      "kind": "transparent"
    },
    {
      "address": "0xe14A421889d17D7ca3d238C5cA161048576e330f",
      "txHash": "0x45125ac046b30f7f9e584f60cfffb92dd609f71d83753a679920e573cc57e86b",
      "kind": "transparent"
    },
    {
      "address": "0x9CF56BF837c2a002aA078e3eA45226a75dF08b3d",
      "txHash": "0x079ab3fc6d5fa98023f4493385b2eddcdad3ed51aca1f987e1efaca722cbd4f0",
      "kind": "transparent"
    },
    {
      "address": "0x6ff4Df1be6dbb8a4df273CFaFf8Ddb0E30eA9e14",
      "txHash": "0x2ee3a4f4d1dc871901741a49b622666cae35cec9d6bd6ac9630abfea786b7335",
      "kind": "transparent"
    },
    {
      "address": "0xF7e5ea1B4e824624BB5d5417baE0Ffa543091363",
      "txHash": "0x58d7f36a92d4c84b5bf18b107557ff3f706a34b63c78a4ba60389dbff2cea4dc",
      "kind": "transparent"
    },
    {
      "address": "0x0e412AA546F88E4BCb12d7AAdbFa3bb9624D89d1",
      "txHash": "0x421fefb606d6958644c58fcc4d6deb4145ce166e177811df9e13a25fb0e1552f",
      "kind": "transparent"
    },
    {
      "address": "0x85C6b16ED25201B9BFa3fE5F3bC7869187AfE5a3",
      "txHash": "0x5a6871793984026401d1e838366ac69acf175c98af045f344991361dde25209d",
      "kind": "transparent"
    },
    {
      "address": "0x51386FbB8F40521ca485bc677D3274AbcFc39908",
      "txHash": "0x797d4181d978d489a95fc331ca362ec13712426804946bb67e2bb8a388ac8463",
      "kind": "transparent"
    },
    {
      "address": "0xc437c881FD1e8E05E95c2638Aa59080001E00f49",
      "txHash": "0x7f4dbca4517f7b115f7f8cb4226b8fc8bf9628e0fc7dd4b69114b51da4fbe4e9",
      "kind": "transparent"
    },
    {
      "address": "0x8003144F76534d0e7076dBC4fBAF22f600457dFb",
      "txHash": "0x2533deb026d91e70528c4aa50946f37e91bc337d64dd08b99627f040653f3e97",
      "kind": "transparent"
    },
    {
      "address": "0xb9FF78958C5f9Bcd37D5b72b6C567c4f60F7095E",
      "txHash": "0xe8660f07c4d3edde5adf639566c9f86ae9b4697b8891c35be14e8fc29216f91e",
      "kind": "transparent"
    },
    {
      "address": "0x07c0795f18Df8de13229145c557ec1bE77199d81",
      "txHash": "0xf0133bfea7182d7aa385ef9712b34f9ece3f72e8b791e3525b5e5d48433b5aa2",
      "kind": "transparent"
    },
    {
      "address": "0x6554f458cfbaC222C6572A1839fE10d88798827B",
      "txHash": "0xad3313b67515f1e6b39c98af5c846fc7b1d8a9398c627f0f268c04156dfed9ea",
      "kind": "transparent"
    },
    {
      "address": "0x031e2F54dbC8F40B7c90273EEfF546F2A778dD46",
      "txHash": "0x6742f70062587594627b6bde451b37b738099f53416ac5c7441a80ed109e229a",
      "kind": "transparent"
    },
    {
      "address": "0x5699CAC6E940A15B1886244808D396825a271D31",
      "txHash": "0x8aac46b260a3ee96aa50050d90cb06ac26bb8cd0234913801816139c017c9312",
      "kind": "transparent"
    },
    {
      "address": "0xc0ef36D64a2eF0DA494b8b4Ac989C46F6ACFDAe7",
      "txHash": "0xf2180809d796c90d590b515169c057ceddb7098a2320dfcde63e18fba8da2014",
      "kind": "transparent"
    },
    {
      "address": "0x924FA2385c28d4626B2005daD856Aa4deaAc1Ec6",
      "txHash": "0xb1581445a76c143b19814e9b89d941173dab3a0c3ef4c649b0576306aa72a269",
      "kind": "transparent"
    },
    {
      "address": "0x709AF043AA03a39840C4c14D52b8D2d2307F4eC1",
      "txHash": "0x77ec535a5e0db4963d3f47054c39f5053d407cfa05c8703925496481bdc86a33",
      "kind": "transparent"
    },
    {
      "address": "0x81cb46161FcEe6d508939F2721Ca627bB512ca6d",
      "txHash": "0xcf788ee8bda917962149193ccaf96f206d5ccd334f8fdcf191b2d4cf6df68374",
      "kind": "transparent"
    },
    {
      "address": "0x8931299c0756e6cF8dE19ed91453C925a432DB29",
      "txHash": "0x5385bb11a7af21687319c37c44c44d568bf18cf5ee7ab4195acdcbed3cd3aa85",
      "kind": "transparent"
    },
    {
      "address": "0xD053d1Ef03A9c855B7d109E8D926Ecd52fa69Eb1",
      "txHash": "0xe7b84be6e221636689b24cdafdc44d764a10aa692dce25cad287a95612e5ac19",
      "kind": "transparent"
    },
    {
      "address": "0x41ae3697f11f08Dbb8f96A6F48F2cF14FBdfFb08",
      "txHash": "0xa0d8eed66d43c1a9a7d60f96d7451c23a80b0f8b6d881c023463cb1e85f07b34",
      "kind": "transparent"
    },
    {
      "address": "0x2BCAb97100ed7288B90Ea50F8CB8eD4B85848A29",
      "txHash": "0x51737d0e5815b31fbe642eef0659c808c350ef7180048dc80624e7e727c95f22",
      "kind": "transparent"
    },
    {
      "address": "0x5498F47BD633ee7a5F1e76DBdBEfb877ba5E26ad",
      "txHash": "0x02166422d9b4c9f3028f4ab51a2db3dd146257f65242c9fb41ed9daee434fa46",
      "kind": "transparent"
    },
    {
      "address": "0x39b003395cCa60D70Ea64fF0130B735142D58124",
      "txHash": "0x63692bb2d5eab1b62e56eeac83314f8d8af2478e6bbfbaff0554918687d30337",
      "kind": "transparent"
    },
    {
      "address": "0x80588C8e27a23F665AE8990cadD48CD551F1dD12",
      "txHash": "0xa6070e80f38864048a64e0e58d8d30e52e7113a7ecb0f7f390e166ae2c4f2795",
      "kind": "transparent"
    },
    {
      "address": "0x0234CFf6DAdBD69D3a65ab1C444aE1d96006eAb4",
      "txHash": "0x64f4aba2f764f3643dc8dbc46d0ebcb81ae11d5dcfe80043b4df19e758f19afa",
      "kind": "transparent"
    },
    {
      "address": "0x8c965050C1A0FFCfB3d0F64B7231754abB2d2256",
      "txHash": "0x6f0e4259d59d6fb568a8954e1c29dc8685c3f62c6b58dee6a79d2a0c5fab0884",
      "kind": "transparent"
    },
    {
      "address": "0x81829626EC1628Cb5A4B9FAd5c39f120ddfAcd07",
      "txHash": "0xce0583c4fd9bd4f1f2854eb9dc9132cfcace62f20c14245abd0c89aee0358b20",
      "kind": "transparent"
    },
    {
      "address": "0x6EE0352355A7724040be79CDF717b5401425c704",
      "txHash": "0xa8c59b576ee819f253c5b3b4bb2462c55ffbbe5f334ec28ee40c8648c7ca5135",
      "kind": "transparent"
    },
    {
      "address": "0x95dc0cE9BEDc2E9b18b27a58e9c6e5371C750857",
      "txHash": "0xbce5798fee9342e27b9e05228a0e6659d2be4e2d4de474e33c497ec766ba8927",
      "kind": "transparent"
    },
    {
      "address": "0x39d1E927381492ff3546bE959Db97E7fb0624E89",
      "txHash": "0xefd038fbb8c788c794d1c47822cc5b4b966127bcf66550c31af172688ddc71a5",
      "kind": "transparent"
    },
    {
      "address": "0x5C20c2134428fD03828E79fA3Ce34D3824EB6Ed4",
      "txHash": "0x6fbb4359a2c378588ba28c7ff9c1902c18f32e84aec4c7895182a58e72f9f9d1",
      "kind": "transparent"
    },
    {
      "address": "0x93f798b633BD80f9E50d87e300357C8644922A41",
      "txHash": "0x9e3a0ea72189e3c94b438039fba1da011bf5ff1265c9590678263105487e700b",
      "kind": "transparent"
    },
    {
      "address": "0xB49978bB70020529B4016a2C8BaD7B0ED6B6BEAB",
      "txHash": "0x78ee649d2d54ba8a710e16f3f14653e867726f4bae3979749a4d7310326c986e",
      "kind": "transparent"
    },
    {
      "address": "0x548310CF7Fa2Cc67aA744B44606369700AAB754c",
      "txHash": "0x755b1cece3c36eb177f93fbc54472c46c8b2c1c076e77d1f23c6ab2a5dec3c1d",
      "kind": "transparent"
    },
    {
      "address": "0x917725b11ce89538e33eFB27B687AACf0D9ac330",
      "txHash": "0x910113f806044cd5688fa4af904c497d95d07aa1b6bbaf6c7d0c49affc33496e",
      "kind": "transparent"
    },
    {
      "address": "0x0081adB3e7fA189b74E15A349fbc748158ca43f6",
      "txHash": "0x9ad98583853d70651c769dd0733727415eb84d7001181d2b482fe4c8b3dd8254",
      "kind": "transparent"
    },
    {
      "address": "0x92A38388606888d006c21804d2C7F8164D830584",
      "txHash": "0x5215516f228f80f9f7aef9b822065193781b0ff38a782e53e82fbba291e7fdcc",
      "kind": "transparent"
    },
    {
      "address": "0xB1e9e98780dbc0A3F258f8118a936c7c68cd84C0",
      "txHash": "0xbad7c685af320e568cfd4153fdce47bfa269913bdd5e5f21bd3ff6bf445a4f10",
      "kind": "transparent"
    },
    {
      "address": "0xa427616589424e6FcB157fBDcFB0BDfAc1D7cEC6",
      "txHash": "0x2976edd3cb0e384ad0e0c63e43a2fc0e7a7d09cb1a051664653372a5ef64d9a5",
      "kind": "transparent"
    },
    {
      "address": "0xE8F307dC6d1A477C03D40c2ed4Eb43f0044773D6",
      "txHash": "0x54e28c0d47ee5a2a8952e81ca60c7e7d63b9610d820cc630238ec2032603124f",
      "kind": "transparent"
    },
    {
      "address": "0xaff7EbAa41b181Cce741FD34e1f0806fCcE9cff3",
      "txHash": "0x9a21c574acd47a454c7e1ce76466ad42461cf10375c417e3c48f8888907e7cb7",
      "kind": "transparent"
    },
    {
      "address": "0x92729eeE056D7F78b13d0e84b7109B5d3aE4f3B0",
      "txHash": "0x3dd948cc35fc90fdbff74b97bd7a8defd963efeb740e9472f5c7cbede4bcf7e7",
      "kind": "transparent"
    },
    {
      "address": "0xa3fdbE1CDd78EFd02a47623039A685c7c95F7070",
      "txHash": "0x41fbdaea7db7124ec9c4b5a45508030d1e4ced02290cc148ce08623a21589a76",
      "kind": "transparent"
    },
    {
      "address": "0x6348Be78d5829426Cb494Aa253d686a67997E370",
      "txHash": "0xb554e45e0af352e7eeb9034c621a2b6ee1245bdd893b07b336d1d215cb38222f",
      "kind": "transparent"
    },
    {
      "address": "0x724F9BDC8f4e1986eF843632B6D9498f8De768dc",
      "txHash": "0x98a21840fb2dccbf29d4d020fca5043d2b558ff5dae13a16427b0393869e8f23",
      "kind": "transparent"
    },
    {
      "address": "0x2a27ce8Cad643AbC85097e773Fd67ED3113E8D47",
      "txHash": "0x9ef30708d4c61e13b4706bb3760ee3482f9b69314d2d5f30a94cf36040a266e6",
      "kind": "transparent"
    },
    {
      "address": "0x32F6cfdDf15a0955d5068ea1B4442B13E9CC21a5",
      "txHash": "0x8298914ab6799be8c11f77578733f1df6830baa596dcd527d630d6a366eaae86",
      "kind": "transparent"
    },
    {
      "address": "0x82826b8F375F56Ae07E736741892eC79e6FCBe9B",
      "txHash": "0x9e307668b5a6d7cb04f4acb380297c7dc7a227997a6b8082d6f418dde9db3192",
      "kind": "transparent"
    },
    {
      "address": "0xd696CC08A5bad4B9Eca1ae362E3a08c41e5e7c8e",
      "txHash": "0xe4277c10f83e6cf019419400d1ef3ac5235fe1e8238deedf42f774048c4865ef",
      "kind": "transparent"
    },
    {
      "address": "0xf18734D791ab37a7a729aDb60aC51Df0b7A1DfcD",
      "txHash": "0x3f1914a4a661c9cae30b42ce0360d7c8c98b5e5efc7335e7994bc02e53580c78",
      "kind": "transparent"
    },
    {
      "address": "0x0fE632101600513359156112289508a7800E1e04",
      "txHash": "0x6fd052d89daa78c68c7bda4bebe5166151437ff0f115d36027c8b47164a61994",
      "kind": "transparent"
    },
    {
      "address": "0x935fF85B414B9a9B9C0C63070B7743Fbf0Fb34FE",
      "txHash": "0x03f3af7e3fac9aaad1ae424242f1c01b5ed7eeca7a1b0cef629cc1745ff6bd0a",
      "kind": "transparent"
    },
    {
      "address": "0xdF17E45Df45c9AF3Bc3D56b593aBf05FfE2c6A1b",
      "txHash": "0xef4fd28f048bba92ce187db8f09a6670c6ba2f3d23435b50c20b0b15659b225f",
      "kind": "transparent"
    },
    {
      "address": "0x2057d903933Ec94166E42F9bC096110a0B54b923",
      "txHash": "0xc290c7c94fe605411d0e8bcc015fdca922036cdabdfc949e571d69e585c45d79",
      "kind": "transparent"
    },
    {
      "address": "0x1557DC1e2328c440170Ea7f761B5b87a1BE45eE9",
      "txHash": "0xd4d7a6747bfdd8a12372404ee4c1edd99a9c8ebcf076ec3605c75dd9565d220a",
      "kind": "transparent"
    },
    {
      "address": "0xF475CaDE2516ca3D4798Ab3f762F1eA6E22C85Fe",
      "txHash": "0x81c3f216ae9b589c1c36c7b1fa53b1b1f4564a4434254b9ebdcbe9e16bbf432f",
      "kind": "transparent"
    },
    {
      "address": "0x4E7B60cb86bcD894614F88F9651aFDfA209E814B",
      "txHash": "0xf15b3ab962552d212aeaf69411abbaff02ea2b231c15810285fbbc2e8f3d4a94",
      "kind": "transparent"
    },
    {
      "address": "0xC508472978cd14A874A3407181cF6D43E77e2d1f",
      "txHash": "0x2bfd932779b883a765a31b6ea372be57940ed971d7931aeedc28ce848831c904",
      "kind": "transparent"
    },
    {
      "address": "0xcB89475649272805ed252a659269454fAB23BF02",
      "txHash": "0xefe52e4736523e0c5a916e888473f0fafcaf2b5f688388321961f02ef613bd2a",
      "kind": "transparent"
    },
    {
      "address": "0x3a42B7857a160190a02Fd9d07B8b3C3577865967",
      "txHash": "0x4018f2b1efe99e4667583c77df1c0882cab18eead422b2ead8c66f8fef93ea0d",
      "kind": "transparent"
    },
    {
      "address": "0xEa73c35B54EE5AaAC6C5062c5a9ecf2107D43AAd",
      "txHash": "0x5036a719b80b914268502a6a911837ab517aa88bbbcc1bdccc1c97bae14e59d6",
      "kind": "transparent"
    },
    {
      "address": "0x665f6E2dB30b27728765eE5852842fd271eea4fd",
      "txHash": "0x68e0e9d0728895cdd5b936784d3ed88e12c61d14cfc61e92a48961e147e5942b",
      "kind": "transparent"
    },
    {
      "address": "0xDB7941b5E7c1b1Fc6E074E9d578a66336C39038a",
      "txHash": "0x1920549f3a9e0227b47a3b795eaa4f6f19dfd8e677836e6406c291de89f82a2f",
      "kind": "transparent"
    },
    {
      "address": "0x64fC4C7E809e8a6580C45EbB40f097c1D091D5ab",
      "txHash": "0xe03018ecc800d225faecd36a3f53bfb47805ab795fb330bdf06b69931624ef73",
      "kind": "transparent"
    },
    {
      "address": "0xa30Fbd206486277222a2eBfd092610EcD7989C36",
      "txHash": "0x85c90bf3f984444fc4df480a8b4bf2835ccbc8c38f9e1d1cede1a1dc1a0ff6ee",
      "kind": "transparent"
    },
    {
      "address": "0xbBc18Add820e9722D30445a09566981D903918FA",
      "txHash": "0xc27277474ec80aa19653c090d1e241acce8f25238bd6c05034b02965e9423a1f",
      "kind": "transparent"
    },
    {
      "address": "0x8DfA26392131BFc2b3D36D9B4FF8C8A478Df846B",
      "txHash": "0xd24da04723dd7ce95ab26bf96777d8787af60ace372ea695d67d4fc2293320a0",
      "kind": "transparent"
    },
    {
      "address": "0x8B5191a2819DC753f905295e0Fc6bf54B4B049A9",
      "txHash": "0xbf949cf0cc87f5dbf7e48e01138719f15498ce49b1aa74f2fc3417475482b8ad",
      "kind": "transparent"
    },
    {
      "address": "0x4B079F3DBB83eB4322aA6d4a5f71acb2FD147eb3",
      "txHash": "0xe30007922c0ee9d50bea37ffd422b2f20af3cd98a861ee4aefcdf6cfaa0d66e6",
      "kind": "transparent"
    },
    {
      "address": "0x1367aAFaF868cACbDc979701C0270003516e094A",
      "txHash": "0xd7f90c3562dec037dae0ac15fc61868cc9166d8dfdbfe394c1a900c5fed63f08",
      "kind": "transparent"
    },
    {
      "address": "0x1f2bbd19eb27Da7DfeBA5764E57E923E926FcbD0",
      "txHash": "0xeaa401deadd812f086b894055905f762dc6537ae7557f503c8fcf548113c12fc",
      "kind": "transparent"
    },
    {
      "address": "0x5772460B3106634f5260BAf0a4f5561A8Db9d230",
      "txHash": "0xe6c26f30fa1b0a4f4a88ccf3235ed9c6674518991024a81289226dc448dba7e7",
      "kind": "transparent"
    },
    {
      "address": "0x7222581B358c0276E13464779AC0827A13881C24",
      "txHash": "0x70c336ee8210506cd29a7c4d8f069947e4253e6f128a2ce7b89062f4a27ddd29",
      "kind": "transparent"
    },
    {
      "address": "0x0170090700674e59688a5dC11b6723C519C1aA03",
      "txHash": "0x14efb02479086e8a14accca1886c11d97c9de436885c37c462d8b280a972f252",
      "kind": "transparent"
    },
    {
      "address": "0x20D986D159038Ef343c0cCcED235ff5794F75c63",
      "txHash": "0xb7788be042fef974754eada7d6d915842056c81c0366579c96d487b670c73c12",
      "kind": "transparent"
    },
    {
      "address": "0x511f00db3543Ea72068b35B5c19B3faA46DBdAc4",
      "txHash": "0x4dc639fa8a4dee72c5209398075e8d2d0871ed55000c0b44607b8e369b6276cf",
      "kind": "transparent"
    },
    {
      "address": "0x79208fa66CcEe888F39F984e1836E3d6A56A36CE",
      "txHash": "0x571af112bfb788f2c33e8dfa3cfe30d2f92ae92e84c3b8eea197b62a77dea2fb",
      "kind": "transparent"
    },
    {
      "address": "0x402620459E13500e329163C91c436B33687F9bF9",
      "txHash": "0xe727b51d3ec1fcd712a843ba5c33f2f6b14ce6d38b8c07613594e201d74cfdb0",
      "kind": "transparent"
    },
    {
      "address": "0x9B89bC0F220769880F28DEf0f9008165d5Cb2dA3",
      "txHash": "0xf6563b7afcfc4bfaf73068c71b0f28ec5a5cb208ecd53ac0e6fd9c6b138bb59f",
      "kind": "transparent"
    },
    {
      "address": "0x83324885389A79dB953e08552EA99947B387E4B7",
      "txHash": "0xcc8a0a2b554f0c7dfaec32e7c7acee56aa542dcedabb1102b3454accab57a4f3",
      "kind": "transparent"
    },
    {
      "address": "0xe190E5A960d9e9E287a9c8afc00A3936027B1ce5",
      "txHash": "0xb0d2816af086cf4b2147b3cbbe178bab421373ecb5fa00deb67afd64f6cf8bd8",
      "kind": "transparent"
    },
    {
      "address": "0xB460eD41F528a5d3889ed866D5B682c24848491F",
      "txHash": "0x81f3298fa3ee71deb4ef2e011dc9299c42cc1fa5ee17a03acd186de323c7f9b4",
      "kind": "transparent"
    },
    {
      "address": "0xCDccB02E2D78D15788390e1937eBdBcbaD03540D",
      "txHash": "0xcff9c40ca178e29abd47469d9601a619b9ead6c784f6cdb7f752f9588cc40345",
      "kind": "transparent"
    },
    {
      "address": "0x3f479635AB6661eFC9F4c03996272c3320bc8c7f",
      "txHash": "0xf3b7d8c5398528599cf7659d0170123b90aa58a43444af27bfaba40a1738c07a",
      "kind": "transparent"
    },
    {
      "address": "0xE37B6133C58dd4a75bf3211D93c9023fF7d9b266",
      "txHash": "0xd82839780d8c995439e3ce631e403fa8bd07a193cd3aade9d3f663546089b21e",
      "kind": "transparent"
    },
    {
      "address": "0x27C2BD7D02BF99CF0f83174aa9dDbc1D608f0854",
      "txHash": "0x25cdc9d552e7d853fb9234969536c883788916e039742976edf3c9c6fd358492",
      "kind": "transparent"
    },
    {
      "address": "0x8d1c0Eedc35234f804f491419fda70a5ef1a5E90",
      "txHash": "0xff433ce43f385b9760bcfcbd97bf81b067fe1870529909ab2313334fc671c4c3",
      "kind": "transparent"
    },
    {
      "address": "0x44d337Ab4388B3E32B9b7C7efC95088BE49402Dc",
      "txHash": "0x0e3315b5546fdd44af3bba821a246be002812d01ae81d39101be3eb786f9f1ef",
      "kind": "transparent"
    },
    {
      "address": "0x030FA975154a31A169436D6D25a9847668FC3620",
      "txHash": "0x77a1ecd165f9c9f62afbfe62c18690b172c56290eb1accbe9ba97e1446bf116f",
      "kind": "transparent"
    },
    {
      "address": "0x3C18261870d5AD96C1466d577AF5E57073b1281a",
      "txHash": "0x2b5a741f9367041d66b216ea6f00372c7bcacbccc458c51b6c9087704219eac4",
      "kind": "transparent"
    },
    {
      "address": "0x57599Ba6CBbEe1b6B1b79096365CADEf4f881557",
      "txHash": "0x0240b6cef867671af3adf767dc8f8760be6e819f5c854571347b8e2d5eb50b7f",
      "kind": "transparent"
    },
    {
      "address": "0xDe6aF9E27f881822007b9097B32ebC699c2C811E",
      "txHash": "0x93609cb3ab1287a90c0905e7832c21c5d344a2f6d88c08f0f0469c38dcbedadb",
      "kind": "transparent"
    },
    {
      "address": "0x31B5daEcCD4C0D7bBAB3182fe6505bDBa14fc6dE",
      "txHash": "0x0bcc8ecac008515809818f9a0f3ae24cd948b5e2463d3717c87422b1b6820eeb",
      "kind": "transparent"
    },
    {
      "address": "0x5e06201369f91cD9b64E82f6Be612B1408fbD7ED",
      "txHash": "0x0b8a0efe47da08c9eaf5435d1cca08bdd944548cbf4e36d540e6cbc00fcca545",
      "kind": "transparent"
    },
    {
      "address": "0xbC7f7F293ad13348a81842B6A6341c5BcC094b41",
      "txHash": "0xd9ee60d588ea1cdaffbbf5142fe31399cc3afe581e5479dea93c728c3cdbd959",
      "kind": "transparent"
    },
    {
      "address": "0x5df2a61474f7F77De8dB337250E17fb90bE97292",
      "txHash": "0x6ec9dfa4255b43f01d3a6b3ca3bc775043a964fcc26593a8a978500676aaa5ae",
      "kind": "transparent"
    },
    {
      "address": "0xD45a68A5752c3d80A12192f5f51198E74edD5925",
      "txHash": "0xed24805eb4f148f35892c548da9d45fa2e2c7b84287eef57315d225d12ff50d4",
      "kind": "transparent"
    },
    {
      "address": "0x9f3d0FC979D7427425a2c2218A7fD3fA38D51b50",
      "txHash": "0x1c9ef99e69c13d0a2c1a6600a7ae2f651fbd3141dc71e47b51f9f098bde2425c",
      "kind": "transparent"
    },
    {
      "address": "0x1c20000Da8857705D08D7265Bd65f72f7B65632c",
      "txHash": "0x32e9c2ff3aec007e6e2ad18ee1458f3d841dd736206cc4e393893dab15ad7a8a",
      "kind": "transparent"
    },
    {
      "address": "0x00A07e29C2211E50De64c68589D543d73943d2dc",
      "txHash": "0xde63b41671faf622af1bd50cbda75e4d98cdb21ffce13cdb5e19080664bf2264",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a6ac2ed9f02f80e444bcabc5a4d8be1ccd7d670747b3b3401742e24afdf2791a": {
      "address": "0x78A96c8275486d5763Dc1436BE826fd91B794318",
      "txHash": "0xc4adcff516a824efcf49a4c6d8ac05d330af3a6457ab627115963d1b9f88ab3d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "RTOEscrow",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)1212",
            "src": "../project:/contracts/RTOEscrow.sol:12"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)1212": {
            "label": "contract ERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c6b8bafb36429f2520e9cc168dde8d6def9ac7b085aefc89b1714a55922a93f": {
      "address": "0x2854EB40A94a7F585bcd33438063f29725040d8c",
      "txHash": "0x3f97d3f0a53fe7217a47b2df44dd74740ca1a304ff46c536015a0d39728c651c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)10100_storage))",
            "src": "../project:/contracts/Vaults.sol:9"
          },
          {
            "contract": "Vaults",
            "label": "escrowTokenAddress",
            "type": "t_contract(IEscrow)9895",
            "src": "../project:/contracts/Vaults.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)10100_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)10100_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)10100_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)9895": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b56c2ea546d0a0b68100a3df711e11e8f4ffac53ed8fd801c6758d082703ff00": {
      "address": "0x17691Fc82178108932DcA3b73E21AFc74a8891Ed",
      "txHash": "0xc91bf16103a3aee0e9a4de784e8c9a10d2ecb7a4ea5d0af4a0d76f94cb9d894d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrmanager",
            "type": "t_struct(AddrManager)2325_storage",
            "src": "../project:/contracts/ContractRegistry.sol:22"
          },
          {
            "contract": "ContractRegistry",
            "label": "DECIMALS",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:24"
          },
          {
            "contract": "ContractRegistry",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:25"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:26"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralInterestChange",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:27"
          },
          {
            "contract": "ContractRegistry",
            "label": "delayedInstalmentsCount",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:28"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrStatus",
            "type": "t_bool",
            "src": "../project:/contracts/ContractRegistry.sol:29"
          }
        ],
        "types": {
          "t_struct(AddrManager)2325_storage": {
            "label": "struct ContractRegistry.AddrManager",
            "members": [
              {
                "label": "coinContractaddr",
                "type": "t_contract(ERC20Upgradeable)1212"
              },
              {
                "label": "escrowContractAddr",
                "type": "t_contract(IEscrow)9895"
              },
              {
                "label": "vaultContractAddr",
                "type": "t_contract(Vaults)9815"
              },
              {
                "label": "proposalContractAddr",
                "type": "t_contract(ProposalRequestRegistry)8722"
              },
              {
                "label": "paymentContractAddr",
                "type": "t_contract(PaymentRegistry)4454"
              },
              {
                "label": "adminUserAddr",
                "type": "t_address"
              }
            ]
          },
          "t_contract(ERC20Upgradeable)1212": {
            "label": "contract ERC20Upgradeable"
          },
          "t_contract(IEscrow)9895": {
            "label": "contract IEscrow"
          },
          "t_contract(Vaults)9815": {
            "label": "contract Vaults"
          },
          "t_contract(ProposalRequestRegistry)8722": {
            "label": "contract ProposalRequestRegistry"
          },
          "t_contract(PaymentRegistry)4454": {
            "label": "contract PaymentRegistry"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7e046089ae4bb0bd633f6123ca725653b0060c94367d0de16af3b92d6fb08bdd": {
      "address": "0x84711de7F666c9E9F9c927Dad8D6787988D28B4b",
      "txHash": "0x70a5bd2c7b7e1ed583c200578146233d5686cec89dfa98ad083559a744c76dad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)10070_storage)",
            "src": "../project:/contracts/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)2588",
            "src": "../project:/contracts/ProposalRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)10001_storage)",
            "src": "../project:/contracts/ProposalRegistry.sol:16"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/ProposalRegistry.sol:17"
          },
          {
            "contract": "ProposalRequestRegistry",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)7156",
            "src": "../project:/contracts/ProposalRequestRegistry.sol:17"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)7156": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)2588": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)10001_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)10001_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)10011_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)10033_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)10006_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)9960"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)10021_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)9956_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)10011_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)10033_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)9970"
              }
            ]
          },
          "t_struct(DirectInfo)10006_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)9960": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)10021_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)9964"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)9956_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)9970": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "INPROGRESS",
              "REQUESTED",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)9964": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)10070_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)10070_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "applicationId",
                "type": "t_uint256"
              },
              {
                "label": "borrowRequests",
                "type": "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)10078_storage)dyn_storage)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "requestedProposals",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)10078_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IUser.BorrowRequestStruct[])"
          },
          "t_array(t_struct(BorrowRequestStruct)10078_storage)dyn_storage": {
            "label": "struct IUser.BorrowRequestStruct[]"
          },
          "t_struct(BorrowRequestStruct)10078_storage": {
            "label": "struct IUser.BorrowRequestStruct",
            "members": [
              {
                "label": "requestedUser",
                "type": "t_address"
              },
              {
                "label": "requestedDate",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(BorrowRequestState)10083"
              }
            ]
          },
          "t_enum(BorrowRequestState)10083": {
            "label": "enum IUser.BorrowRequestState",
            "members": [
              "AWAITING",
              "REJECTED",
              "ACCEPTED",
              "DELETED"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "49c531e23f320bbe84079ad288ee2142f012941721acefb350061f96ce833fa6": {
      "address": "0xE2fc201B4e26f6Fe795Ff843b8f8bE2408382766",
      "txHash": "0xc0bb0ca2dd089f2b00ac1f776370bc813335f0c5bdc5b1088c3c92488fc4db67",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistry",
            "label": "stableCoin",
            "type": "t_contract(IERC20)9874",
            "src": "../project:/contracts/PaymentRegistry.sol:19"
          },
          {
            "contract": "PaymentRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)2588",
            "src": "../project:/contracts/PaymentRegistry.sol:20"
          },
          {
            "contract": "PaymentRegistry",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)7156",
            "src": "../project:/contracts/PaymentRegistry.sol:21"
          },
          {
            "contract": "PaymentRegistry",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)9921_storage)dyn_storage)",
            "src": "../project:/contracts/PaymentRegistry.sol:23"
          },
          {
            "contract": "PaymentRegistry",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)9936_storage)",
            "src": "../project:/contracts/PaymentRegistry.sol:24"
          }
        ],
        "types": {
          "t_contract(IERC20)9874": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)2588": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)7156": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)9921_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)9921_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)9921_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)9906"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)9901"
              }
            ]
          },
          "t_enum(InstalmentType)9906": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)9901": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)9936_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)9936_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6bd1a56f85f2f937664b8c27683e305aaa056b3030d16816112f81c2b72e10a7": {
      "address": "0x8e6AFDb74201dF3114edb9Bde0eE358D5840B1E0",
      "txHash": "0x4af11a1161879cc37c357edf9ed590103d0b2040189ff1e0fef4b7fe4d0c2d9a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2653_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "JointAccount",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)1382",
            "src": "../project:/contracts/JointAccount.sol:13"
          },
          {
            "contract": "JointAccount",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/JointAccount.sol:14"
          },
          {
            "contract": "JointAccount",
            "label": "adminShareReceived",
            "type": "t_uint256",
            "src": "../project:/contracts/JointAccount.sol:15"
          },
          {
            "contract": "JointAccount",
            "label": "rootAdmin",
            "type": "t_address",
            "src": "../project:/contracts/JointAccount.sol:17"
          },
          {
            "contract": "JointAccount",
            "label": "isAccountOwner",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccount.sol:27"
          },
          {
            "contract": "JointAccount",
            "label": "accountOwners",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/JointAccount.sol:28"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)1382": {
            "label": "contract ERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2653_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2653_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2352_storage"
              }
            ]
          },
          "t_struct(Set)2352_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b5f47cdcd64a91ab5c0fd765917a840587513fba5fdf2aa6665ea8e6a932fd0b": {
      "address": "0x216846e2ca604fCEFFCC9e5d86420361de57F086",
      "txHash": "0x1f61781135d26b8ca7e85834d6e31371748d4a7335d0427e56270292b82e8fb2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2653_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "JointAccount",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)1382",
            "src": "../@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:15"
          },
          {
            "contract": "JointAccount",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:18"
          },
          {
            "contract": "JointAccount",
            "label": "adminShareReceived",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:19"
          },
          {
            "contract": "JointAccount",
            "label": "rootAdmin",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:20"
          },
          {
            "contract": "JointAccount",
            "label": "isAccountOwner",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:33"
          },
          {
            "contract": "JointAccount",
            "label": "accountOwners",
            "type": "t_array(t_address)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:34"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)1382": {
            "label": "contract ERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2653_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2653_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2352_storage"
              }
            ]
          },
          "t_struct(Set)2352_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f212d27f50a426c442b148064a1e9f116c40ba361928644b7b4fadda8a469dba": {
      "address": "0x27041CCeAAF15fF42b57FA57bDAaB32D446A30cE",
      "txHash": "0xc59dcd8f327b3bb84925922cfe1c36bf0817f20ec6090308d2854c2581a4695a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8eca3300cc76c78ef8532ad1896d9ecd3678889826a148465f7a157a21c57bd3": {
      "address": "0x9741a02f77233774c8BdA1729231Dd2b915356FB",
      "txHash": "0xb0b897b95a486d29acadd5bbb42a7b1eaa9fed6020d60e62daf697a5685651d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3b5d2be6883cd7750a9992f026ab20e1faf96195c75e2e2f4a5d48a79f75560a": {
      "address": "0xd222b393041547C4526bc679C796aa33e8dA9337",
      "txHash": "0x534f7fd45a10662d68cc13e5207b9d66a075d883a2c9bca840d30c5f9c08ff58",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8a4abe4d3c030f57a263a21fca4f3997e011024070ca023074d244062c7f2e14": {
      "address": "0xa815ddeE6a534fb2df4A30687C54384b89171Bbf",
      "txHash": "0xe4edab0bdeb92b67c63c3fa68fae8e2ce512a80c881ea36399922460dfc3105c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4d6f0be4fe8461c3b835a17ca0bb644463308ad4c9ff0ca2fe16cde1e672d5f7": {
      "address": "0x856f00eab1F629754B1C93B8aB96DECB5D9b1374",
      "txHash": "0x513c63b753df8806574405d0f4b6c9a039a203d48e4a8b7f2f2489eddd1907de",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "609b2f8cab058a6e9695ae20ac73ab6f7b8e7ca90aae33ff4a0d3ad76f2630fb": {
      "address": "0x7Fb51114DaeBD2F68f5b1E5D82b5800aa9a21d4B",
      "txHash": "0xb7801bc796e2f9521348b60f75a8be42871c9365fd76c6580fc625f8abe78d73",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3685cf9c0c32047081974f52bf306670c215d3b788638cd2d633ea617f59c2f1": {
      "address": "0x922e2A613924D75e1EE05f3AdB8e4dfe1B3aa15E",
      "txHash": "0x6fca6c2966c3e26d0a33e0c4271e55a5048fd19a2dac196e0331b667ec56afff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "427aaacb1e792077592355166d4853f92af9a70ae650056fe1d4da07bb49eee0": {
      "address": "0xd426659EC1dEE92470948C70480D2d9893A93F04",
      "txHash": "0xeb8fc80daae47eacf084da362e2c8fee6cc50dbb81cf2ba6526cc22d2219c44b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "58466a141c649af8289fb055ec0eda6305545f5ec281340a810c873d19530c37": {
      "address": "0x57b7B325A667377855531EFF4E77c54c4e7d3d48",
      "txHash": "0x26a31decd4cb4a9ace93eeac2f1d1844f4b0063cad6c82c0de2e6b234b6d0fa4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f1910ea294c2206dece473f57362a8cd6101248d48fcc765ee74a678e35d7852": {
      "address": "0x816F04334e80193D37b7A60aF15BC6A4843DEe40",
      "txHash": "0x4a4a6bfcfddc8249d8309e8551e49a9da46ccfd5d9d08b08750e26993f751dfc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fcdb8e1f230af903e8ce82c436b2a5c983ce958f86694d1c878991042664d1c1": {
      "address": "0x9c3E8542832705622b3Ca3E4810E9be98B7D8A0D",
      "txHash": "0x5ba9cf17cf4eacee5e5f1f85acdc0ca18be652909fb1c28720f7302b829dfa91",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0607646a633e4489dfdc777a9395cc2e18889149a49a2dc20ca9e1aa79baeb67": {
      "address": "0x0470861CfA923B9AdBfE5322439455C3d1905Be4",
      "txHash": "0x2ee0ef30adc356e10b223c5a015dff4f67238b70d8fe35cfb40ec6692e575585",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4a9a92f24c29a5f41c28722cd1dc97c5819994742a24d26b2b4ad463187dd4ef": {
      "address": "0xad13a663707D356BA43F1dC97A87FC4529C5E961",
      "txHash": "0xddb5fced9778b40241b6abf7588d6bb5a854fdab0cc9735f0aa6d546ed311785",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4c72a2d29ad06dc970d9d28e9dc708292cbc3f5e83ad4de35d2026f009ee2966": {
      "address": "0xa629f51e7704E32cC0DbB1efBC99Bb0b2f597A58",
      "txHash": "0x78923ec157ec7c7009b8c28e525cbfa149c42d86466bf61e8b13f8160413d22c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "89089df755d3c5e9426dfb574117e4b1cae4a88eb51325fd505192c36c6bd50e": {
      "address": "0x66Cc6703ceFc0c7B3C881A0a9a310f08d6d377FD",
      "txHash": "0x649e13aad54490d1d4d05caacf954765dfffe3d1d5489595323a89cdeb6ca14c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2653_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "JointAccount",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)1382",
            "src": "../project:/contracts/JointAccount.sol:13"
          },
          {
            "contract": "JointAccount",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/JointAccount.sol:14"
          },
          {
            "contract": "JointAccount",
            "label": "adminShareReceived",
            "type": "t_uint256",
            "src": "../project:/contracts/JointAccount.sol:15"
          },
          {
            "contract": "JointAccount",
            "label": "rootAdmin",
            "type": "t_address",
            "src": "../project:/contracts/JointAccount.sol:17"
          },
          {
            "contract": "JointAccount",
            "label": "isMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccount.sol:27"
          },
          {
            "contract": "JointAccount",
            "label": "membersList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/JointAccount.sol:28"
          },
          {
            "contract": "JointAccount",
            "label": "inviteList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/JointAccount.sol:29"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)1382": {
            "label": "contract ERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2653_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2653_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2352_storage"
              }
            ]
          },
          "t_struct(Set)2352_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "525ec854a8ad5d2a73e2c527a3736704274fdf4b1e358d2a096c6d6327b7282c": {
      "address": "0xcd2B04696a201a7cd19BE9b34e3F976aa8FCf6e6",
      "txHash": "0x91338e8546b504e7baa66b4884cf8cf1979ed85f02d06607c9bfcf334a33a222",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactoryClone",
            "label": "libraryAddress",
            "type": "t_address",
            "src": "../project:/contracts/JointAccountCreateFactoryClone.sol:11"
          },
          {
            "contract": "CreatorFactoryClone",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreateFactoryClone.sol:13"
          },
          {
            "contract": "CreatorFactoryClone",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreateFactoryClone.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ab6720bbfe4b93995dbdae6fce0af9ab2025b834f3bd96859bda0a649210890e": {
      "address": "0xe5F931Bb332785C82b2A5B5180d87355c4746fF8",
      "txHash": "0x71536223532bfc13b7172798be674292a1f012729f4cc6a4b7682a5efc4c32da",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2653_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "JointAccount",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)1382",
            "src": "../project:/contracts/JointAccount.sol:13"
          },
          {
            "contract": "JointAccount",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/JointAccount.sol:14"
          },
          {
            "contract": "JointAccount",
            "label": "adminShareReceived",
            "type": "t_uint256",
            "src": "../project:/contracts/JointAccount.sol:15"
          },
          {
            "contract": "JointAccount",
            "label": "rootAdmin",
            "type": "t_address",
            "src": "../project:/contracts/JointAccount.sol:17"
          },
          {
            "contract": "JointAccount",
            "label": "isMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccount.sol:27"
          },
          {
            "contract": "JointAccount",
            "label": "membersList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/JointAccount.sol:28"
          },
          {
            "contract": "JointAccount",
            "label": "inviteList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/JointAccount.sol:29"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)1382": {
            "label": "contract ERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2653_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2653_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2352_storage"
              }
            ]
          },
          "t_struct(Set)2352_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9ad038b351ebcac1708896deb62a0e98915ef917f5a98c1868612cf8c6fc6d44": {
      "address": "0x626F5C3Fd93e0976BAAb932d9E187f9D334465eE",
      "txHash": "0x7223353099ddddf8d9e6de8e1c48f7436be47f591a3734b7ef0591e92f348047",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2653_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "JointAccount",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)1382",
            "src": "../project:/contracts/JointAccount.sol:13"
          },
          {
            "contract": "JointAccount",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/JointAccount.sol:14"
          },
          {
            "contract": "JointAccount",
            "label": "adminShareReceived",
            "type": "t_uint256",
            "src": "../project:/contracts/JointAccount.sol:15"
          },
          {
            "contract": "JointAccount",
            "label": "rootAdmin",
            "type": "t_address",
            "src": "../project:/contracts/JointAccount.sol:17"
          },
          {
            "contract": "JointAccount",
            "label": "isMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccount.sol:27"
          },
          {
            "contract": "JointAccount",
            "label": "membersList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/JointAccount.sol:28"
          },
          {
            "contract": "JointAccount",
            "label": "inviteList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/JointAccount.sol:29"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)1382": {
            "label": "contract ERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2653_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2653_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2352_storage"
              }
            ]
          },
          "t_struct(Set)2352_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "343c24cec6e4a46d68740751ade1be50df22595549f4dd51a288c0cf70d1d1d3": {
      "address": "0x4e59F0A659C0Bd373abe578bAeaF5642414abD0f",
      "txHash": "0x5ae8a2c6e2820bf066f4ce89f075d59d802ae1f1569a82842abfc7230ece2a52",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactoryClone",
            "label": "libraryAddress",
            "type": "t_address",
            "src": "../project:/contracts/JointAccountCreateFactoryClone.sol:11"
          },
          {
            "contract": "CreatorFactoryClone",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreateFactoryClone.sol:13"
          },
          {
            "contract": "CreatorFactoryClone",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreateFactoryClone.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d1e405873a968584fa4dd68ecc21f0ab41da97a653541fe68c3bc5e9dbfdd77f": {
      "address": "0x3A4E04b320F4Ad658E4A24325A6367f8f1eD497E",
      "txHash": "0x58aba5faf7962809c876d9805b8444693b77384cf2bf06f87f9c33424ef7a522",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2653_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "JointAccountWithClone",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)1382",
            "src": "../project:/contracts/JointAccountV2.sol:13"
          },
          {
            "contract": "JointAccountWithClone",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/JointAccountV2.sol:14"
          },
          {
            "contract": "JointAccountWithClone",
            "label": "adminShareReceived",
            "type": "t_uint256",
            "src": "../project:/contracts/JointAccountV2.sol:15"
          },
          {
            "contract": "JointAccountWithClone",
            "label": "rootAdmin",
            "type": "t_address",
            "src": "../project:/contracts/JointAccountV2.sol:17"
          },
          {
            "contract": "JointAccountWithClone",
            "label": "isMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountV2.sol:27"
          },
          {
            "contract": "JointAccountWithClone",
            "label": "membersList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/JointAccountV2.sol:28"
          },
          {
            "contract": "JointAccountWithClone",
            "label": "inviteList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/JointAccountV2.sol:29"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)1382": {
            "label": "contract ERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2653_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2653_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2352_storage"
              }
            ]
          },
          "t_struct(Set)2352_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "743c99405991f08a7fdde34f54a7646dc10567da06978e056d708f73287d93b4": {
      "address": "0xbF300BEB29fA68C487FDEF672D5b36aE20Fd3160",
      "txHash": "0xef218c53abda7997876025c1851dcb3f882d00291205db52c5d98f81c87d1ba1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactoryClone",
            "label": "libraryAddress",
            "type": "t_address",
            "src": "../project:/contracts/JointAccountCreateFactoryClone.sol:11"
          },
          {
            "contract": "CreatorFactoryClone",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreateFactoryClone.sol:13"
          },
          {
            "contract": "CreatorFactoryClone",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreateFactoryClone.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "55d54f672d9a1d16238ad615afbc7528a51a487b85a82ac95a2f7516d6df7c5a": {
      "address": "0x150a7Bc74056A09E860eDf76d64844D7Cdb08932",
      "txHash": "0x93b003e5f05f0c5aac3a9e2008d21f55f5e29826b8b5ff118bbb13daf8f551fc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactoryClone",
            "label": "libraryAddress",
            "type": "t_contract(UpgradeableBeacon)3130",
            "src": "../project:/contracts/JointAccountCreateFactoryClone.sol:12"
          },
          {
            "contract": "CreatorFactoryClone",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreateFactoryClone.sol:14"
          },
          {
            "contract": "CreatorFactoryClone",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreateFactoryClone.sol:15"
          }
        ],
        "types": {
          "t_contract(UpgradeableBeacon)3130": {
            "label": "contract UpgradeableBeacon"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "04bdb6fa0eeaaa11246ffed3a798d7faa15fe201d7f099e81707e04826d11149": {
      "address": "0x318c7086b25879386Eb1601Bd6833181fAcDa07E",
      "txHash": "0x06db7f272807abda392e266cd372d685434e27d44f638e902b40290e9884d051",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2653_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "JointAccountWithClone",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)1382",
            "src": "../project:/contracts/JointAccountWithClone.sol:14"
          },
          {
            "contract": "JointAccountWithClone",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/JointAccountWithClone.sol:15"
          },
          {
            "contract": "JointAccountWithClone",
            "label": "adminShareReceived",
            "type": "t_uint256",
            "src": "../project:/contracts/JointAccountWithClone.sol:16"
          },
          {
            "contract": "JointAccountWithClone",
            "label": "rootAdmin",
            "type": "t_address",
            "src": "../project:/contracts/JointAccountWithClone.sol:18"
          },
          {
            "contract": "JointAccountWithClone",
            "label": "isMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountWithClone.sol:28"
          },
          {
            "contract": "JointAccountWithClone",
            "label": "membersList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/JointAccountWithClone.sol:29"
          },
          {
            "contract": "JointAccountWithClone",
            "label": "inviteList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/JointAccountWithClone.sol:30"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)1382": {
            "label": "contract ERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2653_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2653_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2352_storage"
              }
            ]
          },
          "t_struct(Set)2352_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "77dd081a5a9977333eadd77d99dbb5bfce1ea52269b2069945c477f36cd6436f": {
      "address": "0xBc8B4bF50ae85172e04814D9d21193A41fc5253D",
      "txHash": "0x7463c64452afa48518f3eaa2e5885d337d3c557ac67495e1f9a9f113f2e5c7c0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactoryNormal",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactoryNormal.sol:9"
          },
          {
            "contract": "CreatorFactoryNormal",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactoryNormal.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2faf5b2af77290076d1fd243987c1108a000ec2d699d1a62a4d896bc9eef295c": {
      "address": "0x5B044492aD01EE53c8233c817f06330188D7719C",
      "txHash": "0x56fac982f07aa87167f3dd9d69d606a740a368fb4c8f22b94c77bf007ed0cd91",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "JointAccountFactory",
            "label": "jointAccountBeacon",
            "type": "t_contract(JointAccountBeacon)6107",
            "src": "../project:/contracts/JointAccountFactory.sol:12"
          },
          {
            "contract": "JointAccountFactory",
            "label": "accounts",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountFactory.sol:14"
          },
          {
            "contract": "JointAccountFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountFactory.sol:15"
          }
        ],
        "types": {
          "t_contract(JointAccountBeacon)6107": {
            "label": "contract JointAccountBeacon"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d8c5728a980d85baaabb5c43167917abdc81afd3bb3aa059f936a479faab0181": {
      "address": "0x2Ce074BE570be9B8C4d6Ba23863a5c4660EADf45",
      "txHash": "0xc6f6c3beec9e473700b61edcb351740dc7903c29609e46df1c0d9fae64f7ab1d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "JointAccountFactory",
            "label": "jointAccountBeacon",
            "type": "t_contract(JointAccountBeacon)6112",
            "src": "../project:/contracts/JointAccountFactory.sol:12"
          },
          {
            "contract": "JointAccountFactory",
            "label": "accounts",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountFactory.sol:14"
          },
          {
            "contract": "JointAccountFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountFactory.sol:15"
          }
        ],
        "types": {
          "t_contract(JointAccountBeacon)6112": {
            "label": "contract JointAccountBeacon"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1cadc389ae3bf16c78ffa4d9d65af4b1930ecb1dabb73eae17f339cc09221a08": {
      "address": "0x7358b0A5Dd2Bee9DD05c14651Fe2E4aFC08874E4",
      "txHash": "0xe094cff9e4b7ac7f233166244455eb0526a7b8940d9133f58b126fe61d160bb4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "contract": "WrappedToken",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../project:/contracts/WrappedToken.sol:21"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "1c07b95297bf22f1e54f2b95e7dc3e947e0bcb4c2388bc449530141698eef31d": {
      "address": "0x505f97D82a45cB4434D1e6609Ebeeb31410F59Bf",
      "txHash": "0xfa7d616eef96ef3f7c3dc6944577f1a7b50f8a3bf6b3b21006c0894a6a559219",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "contract": "WrappedToken",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../project:/contracts/WrappedToken.sol:17"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "c187b433c180ad48f528216926db2af94246efdf63d4c44bedd0a887fa7b403f": {
      "address": "0xC7f6e7069932F5Fe5e8e3faeFB26A152bC382aaC",
      "txHash": "0xfe97db2a7f31f7c2db1e2c60b21a3e4762284ea60e5845106c0734f20c107ee0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "Swapper",
            "label": "marketRate",
            "type": "t_contract(MarketRateOracle)30580",
            "src": "../project:/contracts/swapping/Swapper.sol:15"
          },
          {
            "contract": "Swapper",
            "label": "swapFeePct",
            "type": "t_uint256",
            "src": "../project:/contracts/swapping/Swapper.sol:16"
          },
          {
            "contract": "Swapper",
            "label": "priceList",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/swapping/Swapper.sol:26"
          },
          {
            "contract": "Swapper",
            "label": "contractAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:27"
          },
          {
            "contract": "Swapper",
            "label": "adminAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:28"
          },
          {
            "contract": "Swapper",
            "label": "swapRequests",
            "type": "t_mapping(t_uint256,t_struct(SwapData)30665_storage)",
            "src": "../project:/contracts/swapping/Swapper.sol:41"
          }
        ],
        "types": {
          "t_contract(MarketRateOracle)30580": {
            "label": "contract MarketRateOracle"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(SwapData)30665_storage)": {
            "label": "mapping(uint256 => struct Swapper.SwapData)"
          },
          "t_struct(SwapData)30665_storage": {
            "label": "struct Swapper.SwapData",
            "members": [
              {
                "label": "from",
                "type": "t_address"
              },
              {
                "label": "to",
                "type": "t_address"
              },
              {
                "label": "tokenFrom",
                "type": "t_address"
              },
              {
                "label": "tokenTo",
                "type": "t_address"
              },
              {
                "label": "fromAmount",
                "type": "t_uint256"
              },
              {
                "label": "toAmount",
                "type": "t_uint256"
              },
              {
                "label": "expirationTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "claim",
                "type": "t_enum(SwapState)30676"
              }
            ]
          },
          "t_enum(SwapState)30676": {
            "label": "enum Swapper.SwapState",
            "members": [
              "INVALID",
              "OPEN",
              "CLOSED",
              "EXPIRED",
              "FAILED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bd07d8613cb761a775aa135be3610756820e350b3d2ecab73ca355939f565ce6": {
      "address": "0x6362a225bAB5461aa87d339E275b19438c22C2c5",
      "txHash": "0xb3726fee39bfc42c207a051af1edbbef04b503286de3ccd38bac3717893fe975",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "Swapper",
            "label": "marketRate",
            "type": "t_contract(MarketRateOracle)30580",
            "src": "../project:/contracts/swapping/Swapper.sol:15"
          },
          {
            "contract": "Swapper",
            "label": "swapFeePct",
            "type": "t_uint256",
            "src": "../project:/contracts/swapping/Swapper.sol:16"
          },
          {
            "contract": "Swapper",
            "label": "priceList",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/swapping/Swapper.sol:26"
          },
          {
            "contract": "Swapper",
            "label": "contractAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:27"
          },
          {
            "contract": "Swapper",
            "label": "adminAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:28"
          },
          {
            "contract": "Swapper",
            "label": "swapRequests",
            "type": "t_mapping(t_uint256,t_struct(SwapData)30665_storage)",
            "src": "../project:/contracts/swapping/Swapper.sol:41"
          }
        ],
        "types": {
          "t_contract(MarketRateOracle)30580": {
            "label": "contract MarketRateOracle"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(SwapData)30665_storage)": {
            "label": "mapping(uint256 => struct Swapper.SwapData)"
          },
          "t_struct(SwapData)30665_storage": {
            "label": "struct Swapper.SwapData",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "from",
                "type": "t_address"
              },
              {
                "label": "tokenFrom",
                "type": "t_address"
              },
              {
                "label": "tokenTo",
                "type": "t_address"
              },
              {
                "label": "fromAmount",
                "type": "t_uint256"
              },
              {
                "label": "toAmount",
                "type": "t_uint256"
              },
              {
                "label": "expirationTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "claim",
                "type": "t_enum(SwapState)30676"
              }
            ]
          },
          "t_enum(SwapState)30676": {
            "label": "enum Swapper.SwapState",
            "members": [
              "INVALID",
              "OPEN",
              "CLOSED",
              "EXPIRED",
              "FAILED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ec4841a498d20e313a2a5d2243ac114b51058cc2b932b621e4c36402742a85df": {
      "address": "0x38464EcF5Bc97d0234C00ec9B675b1d3886Bb7D2",
      "txHash": "0xb43fbd4e91140fc9e9bb28f80f276d59fcb87cb67f14f198b7cd244a15fe675a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "Swapper",
            "label": "marketRate",
            "type": "t_contract(MarketRateOracle)30580",
            "src": "../project:/contracts/swapping/Swapper.sol:15"
          },
          {
            "contract": "Swapper",
            "label": "swapFeePct",
            "type": "t_uint256",
            "src": "../project:/contracts/swapping/Swapper.sol:16"
          },
          {
            "contract": "Swapper",
            "label": "priceList",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/swapping/Swapper.sol:26"
          },
          {
            "contract": "Swapper",
            "label": "contractAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:27"
          },
          {
            "contract": "Swapper",
            "label": "adminAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:28"
          },
          {
            "contract": "Swapper",
            "label": "swapRequests",
            "type": "t_mapping(t_uint256,t_struct(SwapData)30665_storage)",
            "src": "../project:/contracts/swapping/Swapper.sol:41"
          }
        ],
        "types": {
          "t_contract(MarketRateOracle)30580": {
            "label": "contract MarketRateOracle"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(SwapData)30665_storage)": {
            "label": "mapping(uint256 => struct Swapper.SwapData)"
          },
          "t_struct(SwapData)30665_storage": {
            "label": "struct Swapper.SwapData",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "from",
                "type": "t_address"
              },
              {
                "label": "tokenFrom",
                "type": "t_address"
              },
              {
                "label": "tokenTo",
                "type": "t_address"
              },
              {
                "label": "fromAmount",
                "type": "t_uint256"
              },
              {
                "label": "toAmount",
                "type": "t_uint256"
              },
              {
                "label": "expirationTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "claim",
                "type": "t_enum(SwapState)30676"
              }
            ]
          },
          "t_enum(SwapState)30676": {
            "label": "enum Swapper.SwapState",
            "members": [
              "INVALID",
              "OPEN",
              "CLOSED",
              "EXPIRED",
              "FAILED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "38b13fc9ff672ca72d6df32f6d0138cafbf61058e438d2ee224e8701a1256860": {
      "address": "0xdB66F893aA866852bED651D49B818E5bcFCDDDe9",
      "txHash": "0x49e819c344ad1cbffcf9b03a8a230b0cade84d42566cdde1d27c986b46ba97cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "Swapper",
            "label": "marketRate",
            "type": "t_contract(MarketRateOracle)30580",
            "src": "../project:/contracts/swapping/Swapper.sol:15"
          },
          {
            "contract": "Swapper",
            "label": "swapFeePct",
            "type": "t_uint256",
            "src": "../project:/contracts/swapping/Swapper.sol:16"
          },
          {
            "contract": "Swapper",
            "label": "priceList",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/swapping/Swapper.sol:26"
          },
          {
            "contract": "Swapper",
            "label": "contractAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:27"
          },
          {
            "contract": "Swapper",
            "label": "adminAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:28"
          },
          {
            "contract": "Swapper",
            "label": "swapRequests",
            "type": "t_mapping(t_uint256,t_struct(SwapData)30665_storage)",
            "src": "../project:/contracts/swapping/Swapper.sol:41"
          }
        ],
        "types": {
          "t_contract(MarketRateOracle)30580": {
            "label": "contract MarketRateOracle"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(SwapData)30665_storage)": {
            "label": "mapping(uint256 => struct Swapper.SwapData)"
          },
          "t_struct(SwapData)30665_storage": {
            "label": "struct Swapper.SwapData",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "from",
                "type": "t_address"
              },
              {
                "label": "tokenFrom",
                "type": "t_address"
              },
              {
                "label": "tokenTo",
                "type": "t_address"
              },
              {
                "label": "fromAmount",
                "type": "t_uint256"
              },
              {
                "label": "toAmount",
                "type": "t_uint256"
              },
              {
                "label": "expirationTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "claim",
                "type": "t_enum(SwapState)30676"
              }
            ]
          },
          "t_enum(SwapState)30676": {
            "label": "enum Swapper.SwapState",
            "members": [
              "INVALID",
              "OPEN",
              "CLOSED",
              "EXPIRED",
              "FAILED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e557d6152fcab5923654fa43b47c68bb145810e259d2f433aa1878c07398e197": {
      "address": "0xD7dF91ca8Ee2F0683F4aD81F977683D12339f34F",
      "txHash": "0x290a14e02d1977fae4c2210db02afa53137617c2b285fbfcb91b40e0ad58c517",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "Swapper",
            "label": "marketRate",
            "type": "t_contract(MarketRateOracle)30580",
            "src": "../project:/contracts/swapping/Swapper.sol:15"
          },
          {
            "contract": "Swapper",
            "label": "swapFeePct",
            "type": "t_uint256",
            "src": "../project:/contracts/swapping/Swapper.sol:16"
          },
          {
            "contract": "Swapper",
            "label": "priceList",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/swapping/Swapper.sol:26"
          },
          {
            "contract": "Swapper",
            "label": "contractAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:27"
          },
          {
            "contract": "Swapper",
            "label": "adminAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:28"
          },
          {
            "contract": "Swapper",
            "label": "swapRequests",
            "type": "t_mapping(t_uint256,t_struct(SwapData)30665_storage)",
            "src": "../project:/contracts/swapping/Swapper.sol:41"
          }
        ],
        "types": {
          "t_contract(MarketRateOracle)30580": {
            "label": "contract MarketRateOracle"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(SwapData)30665_storage)": {
            "label": "mapping(uint256 => struct Swapper.SwapData)"
          },
          "t_struct(SwapData)30665_storage": {
            "label": "struct Swapper.SwapData",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "from",
                "type": "t_address"
              },
              {
                "label": "tokenFrom",
                "type": "t_address"
              },
              {
                "label": "tokenTo",
                "type": "t_address"
              },
              {
                "label": "fromAmount",
                "type": "t_uint256"
              },
              {
                "label": "toAmount",
                "type": "t_uint256"
              },
              {
                "label": "expirationTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "claim",
                "type": "t_enum(SwapState)30676"
              }
            ]
          },
          "t_enum(SwapState)30676": {
            "label": "enum Swapper.SwapState",
            "members": [
              "INVALID",
              "OPEN",
              "CLOSED",
              "EXPIRED",
              "FAILED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d3d6bc29a087bb97ec0f7771f4142a01bc17eaf871b469608820fa701a60d949": {
      "address": "0x9BA1f344DA1954A545f23701f8d3Eb18D2c774CE",
      "txHash": "0x96defd6cb46af405de341611150a40882ee86d2c1002f9a061522aebee776e3a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "Swapper",
            "label": "marketRate",
            "type": "t_contract(MarketRateOracle)30580",
            "src": "../project:/contracts/swapping/Swapper.sol:15"
          },
          {
            "contract": "Swapper",
            "label": "swapFeePct",
            "type": "t_uint256",
            "src": "../project:/contracts/swapping/Swapper.sol:16"
          },
          {
            "contract": "Swapper",
            "label": "priceList",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/swapping/Swapper.sol:26"
          },
          {
            "contract": "Swapper",
            "label": "contractAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:27"
          },
          {
            "contract": "Swapper",
            "label": "adminAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:28"
          },
          {
            "contract": "Swapper",
            "label": "swapRequests",
            "type": "t_mapping(t_uint256,t_struct(SwapData)30665_storage)",
            "src": "../project:/contracts/swapping/Swapper.sol:41"
          }
        ],
        "types": {
          "t_contract(MarketRateOracle)30580": {
            "label": "contract MarketRateOracle"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(SwapData)30665_storage)": {
            "label": "mapping(uint256 => struct Swapper.SwapData)"
          },
          "t_struct(SwapData)30665_storage": {
            "label": "struct Swapper.SwapData",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "from",
                "type": "t_address"
              },
              {
                "label": "tokenFrom",
                "type": "t_address"
              },
              {
                "label": "tokenTo",
                "type": "t_address"
              },
              {
                "label": "fromAmount",
                "type": "t_uint256"
              },
              {
                "label": "toAmount",
                "type": "t_uint256"
              },
              {
                "label": "expirationTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "claim",
                "type": "t_enum(SwapState)30676"
              }
            ]
          },
          "t_enum(SwapState)30676": {
            "label": "enum Swapper.SwapState",
            "members": [
              "INVALID",
              "OPEN",
              "CLOSED",
              "EXPIRED",
              "FAILED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "84e34eef3bfeaf8ecec006fdc7447379b0e40bc70e6f9e3d5fc85636a6491638": {
      "address": "0xDb4F1D7242E61b8Fde381d2a58e799379BAA700f",
      "txHash": "0xd14772cc21b77ae67776b520234b11851c259f5d478dc19c657fd67832bdee10",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "contract": "WrappedToken",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../project:/contracts/bridging/WrappedToken.sol:17"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "d75e6057063bae6d1ea2543b03ed2020bc58a9e4e733e380e80664851d61d296": {
      "address": "0xb261DD18E79A3f643A47489a84B3Ab2a0e2Eddf2",
      "txHash": "0x3eb350f9fd02f1899329a1f4384d8db7dad9a090ccd260402afcfa05380f6b11",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "Swapper",
            "label": "marketRate",
            "type": "t_contract(MarketRateOracle)30583",
            "src": "../project:/contracts/swapping/Swapper.sol:15"
          },
          {
            "contract": "Swapper",
            "label": "swapFeePct",
            "type": "t_uint256",
            "src": "../project:/contracts/swapping/Swapper.sol:16"
          },
          {
            "contract": "Swapper",
            "label": "priceList",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/swapping/Swapper.sol:26"
          },
          {
            "contract": "Swapper",
            "label": "contractAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:27"
          },
          {
            "contract": "Swapper",
            "label": "adminAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:28"
          },
          {
            "contract": "Swapper",
            "label": "swapRequests",
            "type": "t_mapping(t_uint256,t_struct(SwapData)30674_storage)",
            "src": "../project:/contracts/swapping/Swapper.sol:44"
          }
        ],
        "types": {
          "t_contract(MarketRateOracle)30583": {
            "label": "contract MarketRateOracle"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(SwapData)30674_storage)": {
            "label": "mapping(uint256 => struct Swapper.SwapData)"
          },
          "t_struct(SwapData)30674_storage": {
            "label": "struct Swapper.SwapData",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "from",
                "type": "t_address"
              },
              {
                "label": "tokenFrom",
                "type": "t_address"
              },
              {
                "label": "tokenTo",
                "type": "t_address"
              },
              {
                "label": "fromAmount",
                "type": "t_uint256"
              },
              {
                "label": "toAmount",
                "type": "t_uint256"
              },
              {
                "label": "expirationTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "fromTokenUnitPrice",
                "type": "t_uint256"
              },
              {
                "label": "toTokenUnitPrice",
                "type": "t_uint256"
              },
              {
                "label": "adminFee",
                "type": "t_uint256"
              },
              {
                "label": "claim",
                "type": "t_enum(SwapState)30685"
              }
            ]
          },
          "t_enum(SwapState)30685": {
            "label": "enum Swapper.SwapState",
            "members": [
              "INVALID",
              "OPEN",
              "CLOSED",
              "EXPIRED",
              "FAILED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "53b7c2c03ddcde86de8a72a45898e8939f9da7c221d0e9afb153f361fec63c60": {
      "address": "0x610371687762603021646A8F9CF3dC5991a56277",
      "txHash": "0xdcb7b0c0040910623910b39e3e856b0afee6ef0a6537fd9952324398410c73e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "Swapper",
            "label": "marketRate",
            "type": "t_contract(MarketRateOracle)30583",
            "src": "../project:/contracts/swapping/Swapper.sol:15"
          },
          {
            "contract": "Swapper",
            "label": "swapFeePct",
            "type": "t_uint256",
            "src": "../project:/contracts/swapping/Swapper.sol:16"
          },
          {
            "contract": "Swapper",
            "label": "priceList",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/swapping/Swapper.sol:26"
          },
          {
            "contract": "Swapper",
            "label": "contractAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:27"
          },
          {
            "contract": "Swapper",
            "label": "adminAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:28"
          },
          {
            "contract": "Swapper",
            "label": "swapRequests",
            "type": "t_mapping(t_uint256,t_struct(SwapData)30674_storage)",
            "src": "../project:/contracts/swapping/Swapper.sol:44"
          }
        ],
        "types": {
          "t_contract(MarketRateOracle)30583": {
            "label": "contract MarketRateOracle"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(SwapData)30674_storage)": {
            "label": "mapping(uint256 => struct Swapper.SwapData)"
          },
          "t_struct(SwapData)30674_storage": {
            "label": "struct Swapper.SwapData",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "from",
                "type": "t_address"
              },
              {
                "label": "tokenFrom",
                "type": "t_address"
              },
              {
                "label": "tokenTo",
                "type": "t_address"
              },
              {
                "label": "fromAmount",
                "type": "t_uint256"
              },
              {
                "label": "toAmount",
                "type": "t_uint256"
              },
              {
                "label": "expirationTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "fromTokenUnitPrice",
                "type": "t_uint256"
              },
              {
                "label": "toTokenUnitPrice",
                "type": "t_uint256"
              },
              {
                "label": "adminFee",
                "type": "t_uint256"
              },
              {
                "label": "claim",
                "type": "t_enum(SwapState)30685"
              }
            ]
          },
          "t_enum(SwapState)30685": {
            "label": "enum Swapper.SwapState",
            "members": [
              "INVALID",
              "OPEN",
              "CLOSED",
              "EXPIRED",
              "FAILED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ecea1cf2897333827f90565cd2dcd43cb7103c9f18b58465da4af9b64ae9ecc0": {
      "address": "0x0c764003A4F3F3641E68EE6CcAA68304348947Ae",
      "txHash": "0xb4d437dc4b25cdb374cfcd05b33fa5cd5af3f0d089100d74c1e5993a4f79fa85",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "RTOEscrow",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)3669",
            "src": "../project:/contracts/lending/RTOEscrow.sol:12"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)3669": {
            "label": "contract ERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)2355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5d5483b70242b22e98a9d4592d9ebaae4cc83e015ecaa7f8edcb6d128ce440b4": {
      "address": "0x76Fdff862Fa3e06C71a91E913AE79b9d5e13f12B",
      "txHash": "0x1fc4dc8e39508caa569f97ccdd3d79e1400f76cea69a2c9594a1eba1c389e01d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrmanager",
            "type": "t_struct(AddrManager)8420_storage",
            "src": "../project:/contracts/lending/ContractRegistry.sol:22"
          },
          {
            "contract": "ContractRegistry",
            "label": "DECIMALS",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:24"
          },
          {
            "contract": "ContractRegistry",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:25"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:26"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralInterestChange",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:27"
          },
          {
            "contract": "ContractRegistry",
            "label": "delayedInstalmentsCount",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:28"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrStatus",
            "type": "t_bool",
            "src": "../project:/contracts/lending/ContractRegistry.sol:29"
          }
        ],
        "types": {
          "t_struct(AddrManager)8420_storage": {
            "label": "struct ContractRegistry.AddrManager",
            "members": [
              {
                "label": "coinContractaddr",
                "type": "t_contract(ERC20Upgradeable)3669"
              },
              {
                "label": "escrowContractAddr",
                "type": "t_contract(IEscrow)13690"
              },
              {
                "label": "vaultContractAddr",
                "type": "t_contract(Vaults)13610"
              },
              {
                "label": "proposalContractAddr",
                "type": "t_contract(ProposalRequestRegistry)12598"
              },
              {
                "label": "paymentContractAddr",
                "type": "t_contract(PaymentRegistry)10549"
              },
              {
                "label": "adminUserAddr",
                "type": "t_address"
              }
            ]
          },
          "t_contract(ERC20Upgradeable)3669": {
            "label": "contract ERC20Upgradeable"
          },
          "t_contract(IEscrow)13690": {
            "label": "contract IEscrow"
          },
          "t_contract(Vaults)13610": {
            "label": "contract Vaults"
          },
          "t_contract(ProposalRequestRegistry)12598": {
            "label": "contract ProposalRequestRegistry"
          },
          "t_contract(PaymentRegistry)10549": {
            "label": "contract PaymentRegistry"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8a77fd4ee84d70cd11199515a3be880bc017519ea3c7f2e6bfc715b437c20b10": {
      "address": "0x763Bb6C21db5a5e298ee4930e42556731CeDe6e7",
      "txHash": "0x136132143112ef9a6adcbdb8c3fe98dc26bb2fafe6636067a0120ebcd2766de3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:13"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)13861_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)8683",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)13797_storage)",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:16"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:17"
          },
          {
            "contract": "ProposalRequestRegistry",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)11764",
            "src": "../project:/contracts/lending/ProposalRequestRegistry.sol:17"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)11764": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)8683": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)13797_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)13797_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)13807_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)13829_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)13802_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)13755"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)13817_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)13751_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)13807_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)13829_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)13764"
              }
            ]
          },
          "t_struct(DirectInfo)13802_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)13755": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)13817_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)13759"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)13751_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)13764": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)13759": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)13861_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)13861_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowRequests",
                "type": "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)13869_storage)dyn_storage)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)13869_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IUser.BorrowRequestStruct[])"
          },
          "t_array(t_struct(BorrowRequestStruct)13869_storage)dyn_storage": {
            "label": "struct IUser.BorrowRequestStruct[]"
          },
          "t_struct(BorrowRequestStruct)13869_storage": {
            "label": "struct IUser.BorrowRequestStruct",
            "members": [
              {
                "label": "requestedUser",
                "type": "t_address"
              },
              {
                "label": "requestedDate",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(BorrowRequestState)13874"
              }
            ]
          },
          "t_enum(BorrowRequestState)13874": {
            "label": "enum IUser.BorrowRequestState",
            "members": [
              "AWAITING",
              "REJECTED",
              "ACCEPTED",
              "DELETED"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "888ca4f71785565085030ddd977113c3b1dde48ec8ae597c39ed8ff88dc4a22c": {
      "address": "0x56F6524D5c6AA0fD8712B4Ed2eA495E5c4dEc2a8",
      "txHash": "0x61d5afe344e725ba5231a23eceb66c68d5b242a49badc3b6382b3b80788def49",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistry",
            "label": "stableCoin",
            "type": "t_contract(IERC20)13669",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:19"
          },
          {
            "contract": "PaymentRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)8683",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:20"
          },
          {
            "contract": "PaymentRegistry",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)11764",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:21"
          },
          {
            "contract": "PaymentRegistry",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)13716_storage)dyn_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:23"
          },
          {
            "contract": "PaymentRegistry",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)13731_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:24"
          }
        ],
        "types": {
          "t_contract(IERC20)13669": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)8683": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)11764": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)13716_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)13716_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)13716_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)13701"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)13696"
              }
            ]
          },
          "t_enum(InstalmentType)13701": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)13696": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)13731_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)13731_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5699776650cfad53b75f4e054ecea7ffbdd485e445e63566140656b7ef506ae9": {
      "address": "0xdBAe10e73b25364FE53710F830Ab1a19beeA4D2e",
      "txHash": "0xf5e0fd81795e317823965aba99fcb8d46ec636a2c7ae2ee618e34c927fa2fb4e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "JointAccountFactory",
            "label": "jointAccountBeacon",
            "type": "t_contract(JointAccountBeacon)7906",
            "src": "../project:/contracts/jointAccount/JointAccountFactory.sol:12"
          },
          {
            "contract": "JointAccountFactory",
            "label": "accounts",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/jointAccount/JointAccountFactory.sol:14"
          },
          {
            "contract": "JointAccountFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/jointAccount/JointAccountFactory.sol:15"
          }
        ],
        "types": {
          "t_contract(JointAccountBeacon)7906": {
            "label": "contract JointAccountBeacon"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c5c066a6ce39e7e0a3fafbfc7e932812065ef88ee8b2746ab139555d2591b11d": {
      "address": "0x269E29d93a68008f6dc78b00AB6a120D59DB3003",
      "txHash": "0x0c9d6e1e663ed94295f3afdf52819ca99eca294e7b8e52f388ae31278a59e114",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistry",
            "label": "stableCoin",
            "type": "t_contract(IERC20)15187",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:20"
          },
          {
            "contract": "PaymentRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)9924",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:21"
          },
          {
            "contract": "PaymentRegistry",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)13282",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:22"
          },
          {
            "contract": "PaymentRegistry",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15234_storage)dyn_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:24"
          },
          {
            "contract": "PaymentRegistry",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)15249_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:25"
          }
        ],
        "types": {
          "t_contract(IERC20)15187": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)9924": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)13282": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15234_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)15234_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)15234_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)15219"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)15214"
              }
            ]
          },
          "t_enum(InstalmentType)15219": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)15214": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)15249_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)15249_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "166e03b66c7041a308e103a545d97fefdcb2e156f1ff740f4971b5812f5e99c1": {
      "address": "0x8F3d0C28434aAdd2bd6840dDC1E92C8DDfbB0aa5",
      "txHash": "0xbbada43e590d65ea31503cc595869a9d2777a3db7edeef050f40c0098317ef22",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:13"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)16654_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)11157",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)16590_storage)",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:16"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:17"
          },
          {
            "contract": "ProposalRequestRegistry",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)14515",
            "src": "../project:/contracts/lending/ProposalRequestRegistry.sol:17"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)14515": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)11157": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)16590_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)16590_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)16600_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)16622_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)16595_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)16548"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)16610_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)16544_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)16600_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)16622_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)16557"
              }
            ]
          },
          "t_struct(DirectInfo)16595_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)16548": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)16610_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)16552"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)16544_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)16557": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)16552": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)16654_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)16654_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowRequests",
                "type": "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)16662_storage)dyn_storage)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)16662_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IUser.BorrowRequestStruct[])"
          },
          "t_array(t_struct(BorrowRequestStruct)16662_storage)dyn_storage": {
            "label": "struct IUser.BorrowRequestStruct[]"
          },
          "t_struct(BorrowRequestStruct)16662_storage": {
            "label": "struct IUser.BorrowRequestStruct",
            "members": [
              {
                "label": "requestedUser",
                "type": "t_address"
              },
              {
                "label": "requestedDate",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(BorrowRequestState)16667"
              }
            ]
          },
          "t_enum(BorrowRequestState)16667": {
            "label": "enum IUser.BorrowRequestState",
            "members": [
              "AWAITING",
              "REJECTED",
              "ACCEPTED",
              "DELETED"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a77e9818446d3fbf0e8be74b592c4cb26f7cbbb1d06cb2f622bd4bbd7cb0de9a": {
      "address": "0xe33ED0DB060af473f42590abb186D0b8c7BdAc34",
      "txHash": "0x0921950e0e6bce438ca3dd67932aa8a159c62a75c850e135d1551faa0a00cef9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15379_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:15"
          },
          {
            "contract": "Vaults",
            "label": "escrowTokenAddress",
            "type": "t_contract(IEscrow)15181",
            "src": "../project:/contracts/lending/Vaults.sol:38"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15379_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15379_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15379_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)15181": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e1aea30dad7ddfeb9f71fc0f12569fbd88ab095f5b43a96e2b6a8f4c7285f6bb": {
      "address": "0xCe3c814d619093476c94c7ed13920ad80D0A0396",
      "txHash": "0x91aec268003cd1feba5131caacdb3694c0e9f5573145994d03d7b56f01982bd2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:16"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)15361_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:17"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)9984",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:18"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)15301_storage)",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:19"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:20"
          },
          {
            "contract": "ProposalRequestRegistry",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)13143",
            "src": "../project:/contracts/lending/ProposalRequestRegistry.sol:20"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)13143": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)9984": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)15301_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)15301_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)15311_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)15333_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)15306_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)15259"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)15321_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)15255_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)15311_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)15333_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)15268"
              }
            ]
          },
          "t_struct(DirectInfo)15306_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)15259": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)15321_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)15263"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)15255_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)15268": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)15263": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)15361_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)15361_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "42a3f04fcc4c0d1aed1fa30cd8b652940bb55151bcf1945881f75c260feeab01": {
      "address": "0xCb25fDC7785dE8c397e4bbEFa4a3CF5276575805",
      "txHash": "0x54c04dbb3756d2c7c2012b4be48fa81b63de1450fda48e2be836f889378a0e74",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistry",
            "label": "stableCoin",
            "type": "t_contract(IERC20)15157",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:23"
          },
          {
            "contract": "PaymentRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)9984",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:24"
          },
          {
            "contract": "PaymentRegistry",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)13143",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:25"
          },
          {
            "contract": "PaymentRegistry",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15208_storage)dyn_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:27"
          },
          {
            "contract": "PaymentRegistry",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)15223_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:28"
          }
        ],
        "types": {
          "t_contract(IERC20)15157": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)9984": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)13143": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15208_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)15208_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)15208_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)15193"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)15188"
              }
            ]
          },
          "t_enum(InstalmentType)15193": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)15188": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)15223_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)15223_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8ed2141ccfb01f10e75b6fd905ed414ee7b61b264ebcab7bc7c90c86108aecef": {
      "address": "0x4409b7B31E67Ff15F7A84c29af3f67D3D912736c",
      "txHash": "0x639d9e9f77f0c4d00b7e636ab1f8f2d5b3f45ebcbc1f67cd86d51573a0971dbc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "RTOEscrow",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)3728",
            "src": "../project:/contracts/lending/RTOEscrow.sol:15"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)3728": {
            "label": "contract ERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)2355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a2574a1251ccaabcb3506feaa45c805b6ac2856fcd93cff1a903c94d767c4e6c": {
      "address": "0x94C59d0021D22DaDCEc1dB08aa307B15F76Af2a4",
      "txHash": "0x75510a8c104273ba0acf9f95e57251b4607ca22bd8840c5405816c7884bda560",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15506_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:16"
          },
          {
            "contract": "Vaults",
            "label": "escrowTokenAddress",
            "type": "t_contract(IEscrow)15308",
            "src": "../project:/contracts/lending/Vaults.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15506_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15506_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15506_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)15308": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3d0300bb16a3b00bac76d7fbde57bc1d8ed4bc5bffa8b84ee476edc8a7bddfff": {
      "address": "0xb13Cc7b54802fF17098a776F419eC47a75d47544",
      "txHash": "0xc68dd04ab7769b167ad7cc1352fc1f532e341db1f32d7d811551530e35d3d8b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrmanager",
            "type": "t_struct(AddrManager)9789_storage",
            "src": "../project:/contracts/lending/ContractRegistry.sol:27"
          },
          {
            "contract": "ContractRegistry",
            "label": "DECIMALS",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:29"
          },
          {
            "contract": "ContractRegistry",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:30"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:31"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralInterestChange",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:32"
          },
          {
            "contract": "ContractRegistry",
            "label": "delayedInstalmentsCount",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:33"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrStatus",
            "type": "t_bool",
            "src": "../project:/contracts/lending/ContractRegistry.sol:34"
          }
        ],
        "types": {
          "t_struct(AddrManager)9789_storage": {
            "label": "struct ContractRegistry.AddrManager",
            "members": [
              {
                "label": "coinContractaddr",
                "type": "t_contract(ERC20Upgradeable)3728"
              },
              {
                "label": "escrowContractAddr",
                "type": "t_contract(IEscrow)15308"
              },
              {
                "label": "vaultContractAddr",
                "type": "t_contract(Vaults)15189"
              },
              {
                "label": "proposalContractAddr",
                "type": "t_contract(ProposalRequestRegistry)14099"
              },
              {
                "label": "paymentContractAddr",
                "type": "t_contract(PaymentRegistry)12004"
              },
              {
                "label": "adminUserAddr",
                "type": "t_address"
              }
            ]
          },
          "t_contract(ERC20Upgradeable)3728": {
            "label": "contract ERC20Upgradeable"
          },
          "t_contract(IEscrow)15308": {
            "label": "contract IEscrow"
          },
          "t_contract(Vaults)15189": {
            "label": "contract Vaults"
          },
          "t_contract(ProposalRequestRegistry)14099": {
            "label": "contract ProposalRequestRegistry"
          },
          "t_contract(PaymentRegistry)12004": {
            "label": "contract PaymentRegistry"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "15fd605f90e4747aaebe2737c0b4305f1b24ece19018fff5b9c034cc77f0f8fa": {
      "address": "0x25928e1132F8FB03793731036BCBe9f0CC830DC1",
      "txHash": "0x2539344d5a398aeaa739b93461ff26843eed9d3517d0ac502ab493102faeb9fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:16"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)15488_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:17"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10064",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:24"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)15428_storage)",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:25"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:26"
          },
          {
            "contract": "ProposalRequestRegistry",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)13241",
            "src": "../project:/contracts/lending/ProposalRequestRegistry.sol:26"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)13241": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)10064": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)15428_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)15428_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)15438_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)15460_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)15433_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)15386"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)15448_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)15382_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)15438_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)15460_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)15395"
              }
            ]
          },
          "t_struct(DirectInfo)15433_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)15386": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)15448_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)15390"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)15382_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)15395": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)15390": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)15488_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)15488_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "79b6ce9d3fee210961b2b6ea21aef572cbfb65134bd919171566c1da2ec5806e": {
      "address": "0x10da87493852055dB8146324D6e86780487A2537",
      "txHash": "0x68c846718b633d60da9afa34975b500d50c912b94fd434c99ed8532b47af2752",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistry",
            "label": "stableCoin",
            "type": "t_contract(IERC20)15284",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:24"
          },
          {
            "contract": "PaymentRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10064",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:25"
          },
          {
            "contract": "PaymentRegistry",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)13241",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:26"
          },
          {
            "contract": "PaymentRegistry",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15335_storage)dyn_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:28"
          },
          {
            "contract": "PaymentRegistry",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)15350_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)15284": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)10064": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)13241": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15335_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)15335_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)15335_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)15320"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)15315"
              }
            ]
          },
          "t_enum(InstalmentType)15320": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)15315": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)15350_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)15350_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2b661a13852c0257e1546d76e36714347c06befb5c02fba8d07af9ce07dca98e": {
      "address": "0x394bFf5CA5F31d384c026d39306ED294B5d2F454",
      "txHash": "0x09987aa90f38bca753bf8bd225ca7afdc645b1b4ce61f8d7ac8152216c46fc8d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15501_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:16"
          },
          {
            "contract": "Vaults",
            "label": "escrowTokenAddress",
            "type": "t_address",
            "src": "../project:/contracts/lending/Vaults.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15501_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15501_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15501_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5aa7d19500c7d987a5875436229fd2d498187c8dbc9e5cc6a57eb7ca1cf20ad9": {
      "address": "0x588ac80425A8aDB4Ba07e94d5eB16a7B415D0A8e",
      "txHash": "0x536f98596a2e26499761e9ebcadbf1aec6860610b2d9dd5f90f28be0af69f493",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15501_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:16"
          },
          {
            "contract": "Vaults",
            "label": "escrowTokenAddress",
            "type": "t_address",
            "src": "../project:/contracts/lending/Vaults.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15501_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15501_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15501_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "eb0184765a743b8d739336c652dcd86efd16708d4a400986c7443b4b5a51596b": {
      "address": "0xcfd2a4b7405808f2EBAA134Fce2F1de6b28b7413",
      "txHash": "0x616dcc6fc2e70db21870305eb7a395a9bde9f8b8a0107fac84d1e336ddcffaaa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15507_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:16"
          },
          {
            "contract": "Vaults",
            "label": "escrowTokenAddress",
            "type": "t_contract(IEscrow)15309",
            "src": "../project:/contracts/lending/Vaults.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15507_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15507_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15507_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)15309": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d526f9a5cc7daf945bb8408cb674e95ba62d1c00328fd5c39506dc4aa4e791fa": {
      "address": "0xBdB72B99678091a3A82C90792A2E69F09B324fF6",
      "txHash": "0xbee267def9ac33ea7b171e1a88f438ab8b128e486a3167922c1a4e6d593c8272",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15512_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:16"
          },
          {
            "contract": "Vaults",
            "label": "escrow",
            "type": "t_contract(IEscrow)15314",
            "src": "../project:/contracts/lending/Vaults.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15512_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15512_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15512_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)15314": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e5cd1b629dfcfae4bff287b1c8659ae2f6292eaad781650ea67bde36e796a44f": {
      "address": "0x4EA21A3707483ffe67Aa6571D13b86451Ce5cd49",
      "txHash": "0x029a03fd016ac06d486876af63862a40290ed8d44a85082d143b5d73dd1786a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15522_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:16"
          },
          {
            "contract": "Vaults",
            "label": "escrow",
            "type": "t_contract(IEscrow)15324",
            "src": "../project:/contracts/lending/Vaults.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15522_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15522_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15522_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)15324": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b98bf9849789235743b135c701504981f4f729d19c11fe38f34d28232ababedf": {
      "address": "0x7f8674C35E1F593419DD7134e0275596Cf85f7b4",
      "txHash": "0x5934b5ce2a613ec53b79a685f5a4236362df0a4dd8e63d2ecb46044343220578",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15507_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:16"
          },
          {
            "contract": "Vaults",
            "label": "escrow",
            "type": "t_contract(IEscrow)15309",
            "src": "../project:/contracts/lending/Vaults.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15507_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15507_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15507_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)15309": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "18ee22abbda7c5e16ddadb14093bb2a32f46dd0acf84656576f550db5d29f910": {
      "address": "0x9979301c873505D7Dff354f63A4997Fb013ef831",
      "txHash": "0x85f5802185196b6977c6b52f02b183d8258d99be32699c815406f5faf2e6ea2c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "RTOEscrow",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)3728",
            "src": "../project:/contracts/lending/RTOEscrow.sol:17"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)3728": {
            "label": "contract ERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)2355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0dc6b33bb728572f280628ffa6a18430e08c57d28d3d7550172b0f8009d3d049": {
      "address": "0xB46fF91f019CB03CDC8Ad0DD395AbFD1b63a81F2",
      "txHash": "0x4472e94c5e489907fe2d1afc2370b9f5668be1d0020f636f1acc81474acff40c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)23607_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:18"
          },
          {
            "contract": "Vaults",
            "label": "escrow",
            "type": "t_contract(IEscrow)23409",
            "src": "../project:/contracts/lending/Vaults.sol:41"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)23607_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)23607_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)23607_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)23409": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "01f34ee23ccca94bc1861fc043e99887c068f083f6a52443a90696e1cadf24ae": {
      "address": "0xaB31bF21fB9Cc26Ba5bB201050Af0f605f3702bF",
      "txHash": "0x509bc5a5dcb30e72f2c4d6a617265f190c174215f914909722efbcae2cf31f5f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)23542_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:18"
          },
          {
            "contract": "Vaults",
            "label": "escrow",
            "type": "t_contract(RTOEscrow)22453",
            "src": "../project:/contracts/lending/Vaults.sol:41"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)23542_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)23542_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)23542_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(RTOEscrow)22453": {
            "label": "contract RTOEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "10a17c6f0ecdd10e710c5bb86fa4d066855a85ec848d2c63b3f89573349708d4": {
      "address": "0xbEAEc46f254c22b3408625C7D873C906891a9e68",
      "txHash": "0xc96f043ab9fc844ea7f52d929f6f5da2169c12e4e04da4cad85332b922862d0b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15496_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:16"
          },
          {
            "contract": "Vaults",
            "label": "escrow",
            "type": "t_contract(RTOEscrow)14371",
            "src": "../project:/contracts/lending/Vaults.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15496_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15496_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15496_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(RTOEscrow)14371": {
            "label": "contract RTOEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "57b03324b41e252ea9ae9e0d723a77930996a0b4aff945d806b825aefd57ad0e": {
      "address": "0x28F0362D0B7459810eb6018CEEB2488522347677",
      "txHash": "0xd546476e740c4fd33405ec381b51e89c8cd71fbf885859b56f74ec15abf66e14",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15505_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:16"
          },
          {
            "contract": "Vaults",
            "label": "escrowTokenAddress",
            "type": "t_contract(IEscrow)15307",
            "src": "../project:/contracts/lending/Vaults.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15505_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15505_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15505_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)15307": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "39f8b9ae90e353b0ea4979fbbbd203f7409115b8ee4d832d08014ed7d736119a": {
      "address": "0x4594F50C4F496dcE3b80AD302B44B75F6B452A0C",
      "txHash": "0xe0c9a2755d3e18f2b159ddab655917def6a68dce9c1d0c85e62b28da577db4bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "RTOEscrow",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)3728",
            "src": "../project:/contracts/lending/RTOEscrow.sol:15"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)3728": {
            "label": "contract ERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)2355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "67474eb83b89f79c632e1a6d486d1eeaf4a579b5d2b85559b4faeb30f5f64a76": {
      "address": "0xA3F69AfaaD52c8e16A2D8Dd5A732e00889828d11",
      "txHash": "0xb656cf916e4eeab3e7b6204e4f4c037e9572cead76dc342cb77ef1a74e7a3e27",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15360_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:16"
          },
          {
            "contract": "Vaults",
            "label": "escrow",
            "type": "t_contract(IEscrow)15162",
            "src": "../project:/contracts/lending/Vaults.sol:43"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15360_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15360_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15360_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)15162": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c892ae836349d0239237d6249e0a51cde8372f1649dc4315e38f29460fda418d": {
      "address": "0x26853f9b00a5f04e34374654103A5c2898bDEcC3",
      "txHash": "0xbed906669a6b4a2cca75ac9e9bf75be9a99ebe7a04266d9c9e30ee7779bccc26",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrmanager",
            "type": "t_struct(AddrManager)9767_storage",
            "src": "../project:/contracts/lending/ContractRegistry.sol:27"
          },
          {
            "contract": "ContractRegistry",
            "label": "DECIMALS",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:29"
          },
          {
            "contract": "ContractRegistry",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:30"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:31"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralInterestChange",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:32"
          },
          {
            "contract": "ContractRegistry",
            "label": "delayedInstalmentsCount",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:33"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrStatus",
            "type": "t_bool",
            "src": "../project:/contracts/lending/ContractRegistry.sol:34"
          }
        ],
        "types": {
          "t_struct(AddrManager)9767_storage": {
            "label": "struct ContractRegistry.AddrManager",
            "members": [
              {
                "label": "coinContractaddr",
                "type": "t_contract(ERC20Upgradeable)3728"
              },
              {
                "label": "escrowContractAddr",
                "type": "t_contract(IEscrow)15162"
              },
              {
                "label": "vaultContractAddr",
                "type": "t_contract(Vaults)15043"
              },
              {
                "label": "proposalContractAddr",
                "type": "t_contract(ProposalRequestRegistry)13986"
              },
              {
                "label": "paymentContractAddr",
                "type": "t_contract(PaymentRegistry)11971"
              },
              {
                "label": "adminUserAddr",
                "type": "t_address"
              }
            ]
          },
          "t_contract(ERC20Upgradeable)3728": {
            "label": "contract ERC20Upgradeable"
          },
          "t_contract(IEscrow)15162": {
            "label": "contract IEscrow"
          },
          "t_contract(Vaults)15043": {
            "label": "contract Vaults"
          },
          "t_contract(ProposalRequestRegistry)13986": {
            "label": "contract ProposalRequestRegistry"
          },
          "t_contract(PaymentRegistry)11971": {
            "label": "contract PaymentRegistry"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "71ce621075b386080c40e5dbb4c1c98287b1898f4020457ce9935b31415cdfc0": {
      "address": "0x95bff6280e9a0937e41885759ca38441ec19DC81",
      "txHash": "0x3e13f1e3c2b0588c194043c03af5c594697694c45697fe96eddd51fb2014f88c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)21872_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:22"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)21812_storage)",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:23"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:24"
          },
          {
            "contract": "ProposalRequestRegistry",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)14842",
            "src": "../project:/contracts/lending/ProposalRequestRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)14842": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)21812_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)21812_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)21822_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)21844_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)21817_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)21770"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)21832_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)21766_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)21822_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)21844_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)21779"
              }
            ]
          },
          "t_struct(DirectInfo)21817_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)21770": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)21832_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)21774"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)21766_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)21779": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)21774": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)21872_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)21872_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d8296a2378ddbb388589aeb180650cd07f31753cad8f3a53b9054dd423a637b4": {
      "address": "0x180BCD3b16d05DC9f6c143f19609B8fe22268956",
      "txHash": "0x1c1abfcf57b7f4882ce1b4963e1844762eff3fb079dd189f6122850f8699b4d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistry",
            "label": "stableCoin",
            "type": "t_contract(IERC20)15138",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:24"
          },
          {
            "contract": "PaymentRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:25"
          },
          {
            "contract": "PaymentRegistry",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)13164",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:26"
          },
          {
            "contract": "PaymentRegistry",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15189_storage)dyn_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:28"
          },
          {
            "contract": "PaymentRegistry",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)15204_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)15138": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)13164": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15189_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)15189_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)15189_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)15174"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)15169"
              }
            ]
          },
          "t_enum(InstalmentType)15174": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)15169": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)15204_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)15204_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c6bce3c05a297dc926a041812f5b9f0c941a0d3dbf9a65fd91ed19cab7694516": {
      "address": "0xfEF430cD91b9f82A816a48C248678344ce242589",
      "txHash": "0x6d62d822f11a49fa5a1fc5eac24a3a2e585f5b258178f29047063de49b491cb4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistryV2",
            "label": "stableCoin",
            "type": "t_contract(IERC20)16518",
            "src": "../project:/contracts/lending/PaymentRegistryV2.sol:24"
          },
          {
            "contract": "PaymentRegistryV2",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/PaymentRegistryV2.sol:25"
          },
          {
            "contract": "PaymentRegistryV2",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)14544",
            "src": "../project:/contracts/lending/PaymentRegistryV2.sol:26"
          },
          {
            "contract": "PaymentRegistryV2",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)16569_storage)dyn_storage)",
            "src": "../project:/contracts/lending/PaymentRegistryV2.sol:28"
          },
          {
            "contract": "PaymentRegistryV2",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)16584_storage)",
            "src": "../project:/contracts/lending/PaymentRegistryV2.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)16518": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)14544": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)16569_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)16569_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)16569_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)16554"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)16549"
              }
            ]
          },
          "t_enum(InstalmentType)16554": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)16549": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)16584_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)16584_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "31315a4b6a0021fcdec1572e6766ab7f1d90f8bd61963dfebc7821c0968ae3d1": {
      "address": "0x88b172857318b2b7a0dce6C3B558b61fC466A7Ae",
      "txHash": "0x22c097b10da1ee7f905f333b5c9f8bb37a8b2f7c991b7510482babb1d3e6dfda",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)17535_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:17"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)17475_storage)",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:18"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:19"
          },
          {
            "contract": "ProposalRequestRegistryV2",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)14541",
            "src": "../project:/contracts/lending/ProposalRequestRegistryV2.sol:23"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)14541": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)17475_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)17475_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)17485_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)17507_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)17480_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)17433"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)17495_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)17429_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)17485_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)17507_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)17442"
              }
            ]
          },
          "t_struct(DirectInfo)17480_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)17433": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)17495_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)17437"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)17429_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)17442": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)17437": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)17535_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)17535_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2a73b1c4e31bf18f494d1c36b028f56534e5de658968a425b8d9b06d02bb3900": {
      "address": "0x2DCb8D54a7f33d7aE1a5CA399Bfce05176A118B7",
      "txHash": "0x74f3b9b1a306df54fbaa97385b6811ac1927de2571ce499eb2ee3e9e1a6375eb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)21872_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistryV2",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/ProposalRegistryV2Dev.sol:22"
          },
          {
            "contract": "ProposalRegistryV2",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)21812_storage)",
            "src": "../project:/contracts/lending/ProposalRegistryV2Dev.sol:23"
          },
          {
            "contract": "ProposalRegistryV2",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistryV2Dev.sol:24"
          },
          {
            "contract": "ProposalRequestRegistryV3",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistryV2)16023",
            "src": "../project:/contracts/lending/ProposalRequestRegistryV3Dev.sol:23"
          }
        ],
        "types": {
          "t_contract(ProposalRegistryV2)16023": {
            "label": "contract ProposalRegistryV2"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)21812_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)21812_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)21822_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)21844_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)21817_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)21770"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)21832_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)21766_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)21822_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)21844_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)21779"
              }
            ]
          },
          "t_struct(DirectInfo)21817_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)21770": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)21832_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)21774"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)21766_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)21779": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)21774": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)21872_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)21872_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c500b60a0a61f1678972eab07a262fe72b5f22d8e741d8f80c5bd4796330f9af": {
      "address": "0x6eBC73025C1F6F6025A93D00E5371b8bEA59783B",
      "txHash": "0xfd07d057a619b7b1002b4544b8459f3258bbe94764a77c3702f18832bee77217",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)23899_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistryV3",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/ProposalRegistryV3Dev.sol:22"
          },
          {
            "contract": "ProposalRegistryV3",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)23839_storage)",
            "src": "../project:/contracts/lending/ProposalRegistryV3Dev.sol:23"
          },
          {
            "contract": "ProposalRegistryV3",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistryV3Dev.sol:24"
          },
          {
            "contract": "ProposalRequestRegistryV4",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistryV3)17228",
            "src": "../project:/contracts/lending/ProposalRequestRegistryV4Dev.sol:23"
          }
        ],
        "types": {
          "t_contract(ProposalRegistryV3)17228": {
            "label": "contract ProposalRegistryV3"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)23839_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)23839_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)23849_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)23871_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)23844_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)23797"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)23859_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)23793_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)23849_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)23871_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)23806"
              }
            ]
          },
          "t_struct(DirectInfo)23844_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)23797": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)23859_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)23801"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)23793_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)23806": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)23801": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)23899_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)23899_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a812f23520ee8464c3c88a7eebb31f04cf94913845eaf2d20a96622362053c95": {
      "address": "0xdBc020c8B1C780e5FAD63C126f978AE9ff7F924D",
      "txHash": "0x8dc5a6fe884a278773e8191768540e717cf39a097a8a40aa167b7eb9cd0743f0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)25912_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistryV4",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/ProposalRegistryV4Dev.sol:22"
          },
          {
            "contract": "ProposalRegistryV4",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)25852_storage)",
            "src": "../project:/contracts/lending/ProposalRegistryV4Dev.sol:23"
          },
          {
            "contract": "ProposalRegistryV4",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistryV4Dev.sol:24"
          },
          {
            "contract": "ProposalRequestRegistryV5",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistryV4)18433",
            "src": "../project:/contracts/lending/ProposalRequestRegistryV5Dev.sol:23"
          }
        ],
        "types": {
          "t_contract(ProposalRegistryV4)18433": {
            "label": "contract ProposalRegistryV4"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)25852_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)25852_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)25862_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)25884_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)25857_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)25810"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)25872_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)25806_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)25862_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)25884_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)25819"
              }
            ]
          },
          "t_struct(DirectInfo)25857_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)25810": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)25872_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)25814"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)25806_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)25819": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)25814": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)25912_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)25912_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "46de0b4875b244c4bea51327843c0edc0561563f88e3adb0e77cc2ecff1a5473": {
      "address": "0xd886E62fe53BE61e358a27Da833A59dc30e6Dd01",
      "txHash": "0xd297f2c4868d80ce7804d690350436fddc489e28dd53cc0d418f9f4274a71267",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)27922_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistryV5",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/ProposalRegistryV5Dev.sol:22"
          },
          {
            "contract": "ProposalRegistryV5",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)27862_storage)",
            "src": "../project:/contracts/lending/ProposalRegistryV5Dev.sol:23"
          },
          {
            "contract": "ProposalRegistryV5",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistryV5Dev.sol:24"
          },
          {
            "contract": "ProposalRequestRegistryV6",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistryV5)19624",
            "src": "../project:/contracts/lending/ProposalRequestRegistryV6Dev.sol:23"
          }
        ],
        "types": {
          "t_contract(ProposalRegistryV5)19624": {
            "label": "contract ProposalRegistryV5"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)27862_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)27862_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)27872_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)27894_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)27867_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)27820"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)27882_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)27816_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)27872_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)27894_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)27829"
              }
            ]
          },
          "t_struct(DirectInfo)27867_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)27820": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)27882_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)27824"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)27816_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)27829": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)27824": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)27922_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)27922_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "82fea1cfd7d13527069656f2884378fcaa2b4d04e2ec4ddfe861198f2092ce46": {
      "address": "0x8C456fD505150db30b27BFe5f6245139379fb886",
      "txHash": "0x7b270789d14f76026cf0b95e8650de857e05c7108dd264db5f08d10d3a466dd7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)27922_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistryV6",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/ProposalRegistryV6Dev.sol:22"
          },
          {
            "contract": "ProposalRegistryV6",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)27862_storage)",
            "src": "../project:/contracts/lending/ProposalRegistryV6Dev.sol:23"
          },
          {
            "contract": "ProposalRegistryV6",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistryV6Dev.sol:24"
          },
          {
            "contract": "ProposalRequestRegistryV7",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistryV6)20812",
            "src": "../project:/contracts/lending/ProposalRequestRegistryV7Dev.sol:23"
          }
        ],
        "types": {
          "t_contract(ProposalRegistryV6)20812": {
            "label": "contract ProposalRegistryV6"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)27862_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)27862_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)27872_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)27894_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)27867_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)27820"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)27882_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)27816_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)27872_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)27894_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)27829"
              }
            ]
          },
          "t_struct(DirectInfo)27867_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)27820": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)27882_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)27824"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)27816_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)27829": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)27824": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)27922_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)27922_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
