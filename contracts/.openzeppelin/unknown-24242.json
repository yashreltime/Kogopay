{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xd6453D954087d72ec08dA512aCe2fe9089648e13",
    "txHash": "0xeea8ad329f1c7cd89e066bcb74572f4cca65642cdbdcfe90f1dfe514a9c6e24e"
  },
  "proxies": [
    {
      "address": "0x318c7086b25879386Eb1601Bd6833181fAcDa07E",
      "txHash": "0xce6acb5a7aa6a811301ed3d451c4315b22bd086434c95d9e96e7b432af19e808",
      "kind": "transparent"
    },
    {
      "address": "0x0E6550AeC0C94593558A99eb8adEB9fd5233BbA4",
      "txHash": "0x253c953df89003eac4465f84babf62c3a18aab68f88b05395c87318a54169583",
      "kind": "transparent"
    },
    {
      "address": "0x5B044492aD01EE53c8233c817f06330188D7719C",
      "txHash": "0xc09195e5f6ef17e4866a30910ef44401fb081ded183c30890af6e7dce03316a5",
      "kind": "transparent"
    },
    {
      "address": "0x2b77d84Ac19c59042a4939D1894d21A47012aFe6",
      "txHash": "0xb2d3e3d4184157b1ac5d2bf8eefce001d1fbfef970f3e5a8fa86de287ac2f235",
      "kind": "transparent"
    },
    {
      "address": "0x7358b0A5Dd2Bee9DD05c14651Fe2E4aFC08874E4",
      "txHash": "0xc334ab7de661ca2f94d10389b178cba2aebc0f90ae4d370db5f210c20048c9dd",
      "kind": "transparent"
    },
    {
      "address": "0xb4F0062226f84d1a054527B3fAF75942705c7A26",
      "txHash": "0x505a3d929a1edc2f70826304d58ee33072d80fbd7ab20087ec5d1d7d8b76326d",
      "kind": "transparent"
    },
    {
      "address": "0x74b48E4aa2693e6c8cDAe200F83Ee5e9926FC5cc",
      "txHash": "0x0342a3fd969bd883b06276e0001cc8ba39c09c3df8ed415ca7ab0cfa34083f7b",
      "kind": "transparent"
    },
    {
      "address": "0x67804c804e32280f1E16144e365E3c7bD7635738",
      "txHash": "0xd2c34b9982962162709d4df3298e0b768a5033ab305114fc3fc5907d609fd2ca",
      "kind": "transparent"
    },
    {
      "address": "0xeF7415103652688d1Dfc3815F7A1Ab729A6049Ed",
      "txHash": "0x7c1f571d629b535348345bd9f2046d89f2c4fa133638f7bc21e3e679122c2116",
      "kind": "transparent"
    },
    {
      "address": "0x57b7B325A667377855531EFF4E77c54c4e7d3d48",
      "txHash": "0x6383e0bb1e3e29ca1a1976ffd7c8e3afeaa6520e122e7d7220085d62476d7479",
      "kind": "transparent"
    },
    {
      "address": "0x3067Da6cc8C46b567a7823BA5ddF08A4d26de8c3",
      "txHash": "0x22909efc64a90eddef6ea6aa0d3fac8c2ca2aab216d8575dc4b1352c23ea1981",
      "kind": "transparent"
    },
    {
      "address": "0xb1685d9b427aD6293C69Fd324b3f529a40DAd2c6",
      "txHash": "0x3129fdb52d1b51f1735c7df1787e48ab66eb5a40e61d77b270e4efb847bc2c6b",
      "kind": "transparent"
    },
    {
      "address": "0xc0ef36D64a2eF0DA494b8b4Ac989C46F6ACFDAe7",
      "txHash": "0x29470d5082c1c71bb8ba42770c1e7244c008335b41f63f8c07030a39193bed16",
      "kind": "transparent"
    },
    {
      "address": "0x747f1c5456ca8Af70b8E56ca15283ba156C49457",
      "txHash": "0xb24e2f9d41612338b698b1b953809fefe77937813bd33467bf4bfabd1ae48638",
      "kind": "transparent"
    },
    {
      "address": "0x746F98d9531B7d742dC976584d73774Ceef7C550",
      "txHash": "0x8f17210478d2f66939d32342366d357d5b3fb5006492cbadbef831b7f1b6a91a",
      "kind": "transparent"
    },
    {
      "address": "0xb261DD18E79A3f643A47489a84B3Ab2a0e2Eddf2",
      "txHash": "0x6532a4b4efc0ede3daf7488405f0f48af2b2ab939bcfe247d2ef0ec1f1cd366c",
      "kind": "transparent"
    },
    {
      "address": "0x34Fed5896e0c18B167353A2f2AD2aef023328176",
      "txHash": "0x065e6e974d50efe68e50b6cf65fba73408d071ff27bf764ebce957ed1e7362f7",
      "kind": "transparent"
    },
    {
      "address": "0x709AF043AA03a39840C4c14D52b8D2d2307F4eC1",
      "txHash": "0xe830bbe4fde494fd28a58a243d981b44ed29fe11dd38e67b4bc46fdf2f60f740",
      "kind": "transparent"
    },
    {
      "address": "0x0F7474d4be3C318e6059EC6fa0d8Ee89203F2355",
      "kind": "transparent"
    },
    {
      "address": "0x763Bb6C21db5a5e298ee4930e42556731CeDe6e7",
      "txHash": "0x4f705f499d5ab72a1f99fdc8b31c16b8ee8d4e809d57cb76b99cd6ab390467b7",
      "kind": "transparent"
    },
    {
      "address": "0xC55E3aE2ae00e9294C28e7A02ba1Db649fcbC3C5",
      "txHash": "0xf95dbc5a8a9f4e9dd8f97f1b822744cd69448cc46d36e59a58f6bea68297041a",
      "kind": "transparent"
    },
    {
      "address": "0x2BCAb97100ed7288B90Ea50F8CB8eD4B85848A29",
      "txHash": "0x5bcfd370cdd88061863472f9951f0e1994a798e0b6f55421fb4c2dfa00d676a7",
      "kind": "transparent"
    },
    {
      "address": "0x5498F47BD633ee7a5F1e76DBdBEfb877ba5E26ad",
      "txHash": "0xed42fbe36e0355e9990e6451658f257e1ab1a304658dafe198e5108ee34f85da",
      "kind": "transparent"
    },
    {
      "address": "0xA35f262e35CBa54EaFd4EA55325b2A50aDd163AB",
      "txHash": "0x0a15ce20b2cda9028d79d3939202b58d0cda684415bba66f1b84cb3f3ce726c4",
      "kind": "transparent"
    },
    {
      "address": "0x9CA77212f42A4c56DB95Fd0d45Bb34D639E48eB3",
      "txHash": "0x392cef17d321d4ccaac1ba8b1a4f275a11da1e9cbd5185efda1780a68c36ca8b",
      "kind": "transparent"
    },
    {
      "address": "0xF9C7c000d4D806Cdd58D6b16d8A87633C8d9993f",
      "txHash": "0xa4298a4172c2954ba548bc49e8418ce8d4e72ee3736a518dd10aff805d4b7424",
      "kind": "transparent"
    },
    {
      "address": "0x65fe255609632C392a189464f2a9048D86dd58Ef",
      "txHash": "0x2599797dbf866bffc50d1585b0233a8ce7d8c64743633572bbf70f27947d08e0",
      "kind": "transparent"
    },
    {
      "address": "0x1dD44091FD321A2050de974adc88C1c3AB1B967E",
      "txHash": "0x1745149f5ce90be928d6c1d755609559d7c68c3a247f4198cb1fd1c4d142444f",
      "kind": "transparent"
    },
    {
      "address": "0x54aa220e2a1Eb5E2dD73cA805E3eB76bAEaD3A0E",
      "txHash": "0xdb7c863e516456ef02887a6bcfd4b810af633f88b981065600dce38c388aa9f1",
      "kind": "transparent"
    },
    {
      "address": "0xe33ED0DB060af473f42590abb186D0b8c7BdAc34",
      "txHash": "0xdba14884d2ccdc71615688a6424ef3b37f2c22b5162edc20c79736a0c0b198d1",
      "kind": "transparent"
    },
    {
      "address": "0x2f19BD06F790C9aDc11AE57D10236A60BC3C48Be",
      "txHash": "0xde43a4f7d660eeee5b9118b818254480d9c7923f0d6122efb9f4b00a9ed40ed8",
      "kind": "transparent"
    },
    {
      "address": "0x7B20970Ba262cAACddb5A47f7028D25611B685d4",
      "txHash": "0xd4072452b7a9135a9d9106c8cf3fb2a900c550084b05899281e8033973a98b5e",
      "kind": "transparent"
    },
    {
      "address": "0x3217DAaA17095F3594d93ABAc8dF03F97DfE3C3B",
      "txHash": "0x9763f9ab8f6e0ef6688833d645eb0784afe28279da92930d9c041a3f4c24819f",
      "kind": "transparent"
    },
    {
      "address": "0x4C39b9421c05a6DE9F02D3984c9d1A311993f11b",
      "txHash": "0x214be5820d2b01233c4f97db28bb0c28875b844bd34ab71d439b2ce823d6f07a",
      "kind": "transparent"
    },
    {
      "address": "0x338f47250f757425F5a9Ba56FB436593cF966f0F",
      "txHash": "0xdac5370223c437fa62bda8e9e34dde4edd7ca74bbb261d6d4bd572432a824192",
      "kind": "transparent"
    },
    {
      "address": "0xCb25fDC7785dE8c397e4bbEFa4a3CF5276575805",
      "txHash": "0xb4402b75ce41d5f3fd9bc9630d3bb1b28dfa4f15e636cabcba972ac9413b2630",
      "kind": "transparent"
    },
    {
      "address": "0x92A38388606888d006c21804d2C7F8164D830584",
      "txHash": "0xd0393c7d5ed5bd756fbe972a0cf5749fedc6d17d48977acdafc80d294c2c4666",
      "kind": "transparent"
    },
    {
      "address": "0x774E1F822782e36209c392c0394EdB6181D46EEb",
      "txHash": "0xcc8c619c3ae8e79535c5b1d05386cb9c44b75ca81ed586533df17d4803890204",
      "kind": "transparent"
    },
    {
      "address": "0x0fDef043f99B8A6FcB6a89761D2aF1fc4b94Ed10",
      "txHash": "0x0fd850009081f34759285dcf0fa04e8892c20dfd5cbd505ec4b56aeeaf5c138e",
      "kind": "transparent"
    },
    {
      "address": "0xa427616589424e6FcB157fBDcFB0BDfAc1D7cEC6",
      "txHash": "0xf62f8bf1ebe1851c2893cb2dfa88fcdf8579ec1d5a6f032e72474c89c8fba00e",
      "kind": "transparent"
    },
    {
      "address": "0x6555e64Ddfe41C8B4702b5107b6843D7610F7aDE",
      "txHash": "0xa8b6f2be92748a2d4d22a3390e2ccb353a463a767eb273f52506724c9621a682",
      "kind": "transparent"
    },
    {
      "address": "0x9bf14BC1C9A5c4A7550f935F7846E0bb29a981Fd",
      "txHash": "0x454b658a5ba6182b85004a3b44d442af6051013d2b2721cd681a508dbff0d836",
      "kind": "transparent"
    },
    {
      "address": "0xa3fdbE1CDd78EFd02a47623039A685c7c95F7070",
      "txHash": "0xa27d89192771011ac2cd2a84b9c1d9630c607e1325828a4358fd468ebd2c4ef6",
      "kind": "transparent"
    },
    {
      "address": "0x6348Be78d5829426Cb494Aa253d686a67997E370",
      "txHash": "0xa1fcd166341c9bc86b1f5654dccdf9fa175696dbc412f5da3013dcd922d3e94f",
      "kind": "transparent"
    },
    {
      "address": "0x61344A0846EeE819Bb8BaAebf0A3Dc14b881BdaA",
      "txHash": "0xf9a5fd2ea5065c68dc66c8e879f6a067426b0ad2a17b0422f5e5f932efa54b51",
      "kind": "transparent"
    },
    {
      "address": "0x2a27ce8Cad643AbC85097e773Fd67ED3113E8D47",
      "txHash": "0xa0acb18127dab00927fc039b7fc691a676abaa130c8cae9907d0fa101636422a",
      "kind": "transparent"
    },
    {
      "address": "0x83Ab130f1515c2E330F291d26b07cD2f02fcb572",
      "txHash": "0x11693d50d4e6b10ca51045fca6a0005c38d510b3e3017f65a51152dd45175a67",
      "kind": "transparent"
    },
    {
      "address": "0x2096A373b6a04CbA095C943251cB8C07c863f6F1",
      "txHash": "0x000d57322e80e41a5bc3c6e1886a674e7a3eec31223143cc722cf4e8df40fcc8",
      "kind": "transparent"
    },
    {
      "address": "0x13A61eb5C8042276A7f62c361552981c9208Cc13",
      "txHash": "0xa95a5bfd0ce79af5f6e347dbbd105d997f4378726f05c5ea2a7c805e5456056d",
      "kind": "transparent"
    },
    {
      "address": "0x0fE632101600513359156112289508a7800E1e04",
      "txHash": "0xcef4207f64eb63b9a8c15632994f3aa48c2b8b99fd2c6d47e8fe0daebfce8f3e",
      "kind": "transparent"
    },
    {
      "address": "0x0e6A1fB3168019a1964149409Da07C838bcfb355",
      "txHash": "0x323bd0e84dcf1efb7a52f2d4832f7ee30dc01f2fa20026d8054b9a6ad315c659",
      "kind": "transparent"
    },
    {
      "address": "0x2057d903933Ec94166E42F9bC096110a0B54b923",
      "txHash": "0xafed0d778d7385bfba2731f87675d89cab97912157f25f56d5756e1d6f2edbc6",
      "kind": "transparent"
    },
    {
      "address": "0xa9CBD726FF904A9dBc2CC00f3C25b532BE290D8A",
      "txHash": "0x5c3d11f3effa7d08c4cbbb90e329aa702f36a65547a012e337918aa50f52d5b2",
      "kind": "transparent"
    },
    {
      "address": "0x1557DC1e2328c440170Ea7f761B5b87a1BE45eE9",
      "txHash": "0x5c17b28cb479720f4037feec947989fb570e53380fca6be448ef99a61e37f724",
      "kind": "transparent"
    },
    {
      "address": "0xF475CaDE2516ca3D4798Ab3f762F1eA6E22C85Fe",
      "txHash": "0x549955d3004a5bb06060335580e192d44148fb7b4e38ad0639b3963db54d45e1",
      "kind": "transparent"
    },
    {
      "address": "0x4E7B60cb86bcD894614F88F9651aFDfA209E814B",
      "txHash": "0x0a058d4e0df7919d7aa418e3efc314e6715da780e5171aea07f831a906a83f2f",
      "kind": "transparent"
    },
    {
      "address": "0xC508472978cd14A874A3407181cF6D43E77e2d1f",
      "txHash": "0xfc55beba9686d50215fb1d1cf0bbff4b62ed1a1bc506d5d7b6b6c554725d5a0f",
      "kind": "transparent"
    },
    {
      "address": "0x968AB802B74faF20b35F66E55eD65681f9afb78E",
      "txHash": "0xf8d2ef69076c0c4be4ef3cd6ffe46ee399affaa89c46d1ca8a8f64b1ac11ae0f",
      "kind": "transparent"
    },
    {
      "address": "0x9bBe212DB32CD614326dcd658ea24B7f493B1209",
      "txHash": "0xf190f227dbfa8fa6fe0b6046f5b2331a47155cca6cfe860bf9dd659a7b372800",
      "kind": "transparent"
    },
    {
      "address": "0x4D1E7F1e39328B5dbfC7337De3A6A283099207aE",
      "txHash": "0x399ba82727f04ec36743f20027d4e4a70fbd5cd9019ad8a241bdc0ae0598246f",
      "kind": "transparent"
    },
    {
      "address": "0x7B8A2708418F50A9840f700aB17fa533b8629fb9",
      "txHash": "0x1bdda36fa9dce47a3c9a9597af05c6fcf8a3b056c0655a28f324efa96b0abdb0",
      "kind": "transparent"
    },
    {
      "address": "0x394bFf5CA5F31d384c026d39306ED294B5d2F454",
      "txHash": "0xef23063115e09bbac61427440852aff8d2c4493b066b91b97da42d2510fa80f9",
      "kind": "transparent"
    },
    {
      "address": "0xc27574388Fe3Cc841e8F8Fd26C699c10Eab1E42A",
      "txHash": "0x3c67879b1ac7e11280c917f07d1d1cf9493fbd4c997886ab0955b9521174602f",
      "kind": "transparent"
    },
    {
      "address": "0x996B371185a635510B1c2ec66662B15c2e3Fd0F1",
      "txHash": "0xdbd1c5b2276d86dda0bf7f507acd922044826793a71997b1691656e842c63101",
      "kind": "transparent"
    },
    {
      "address": "0x0C2B76A8c894C8cF2c49dbFc3d2792B839368c31",
      "txHash": "0x20a89bb1e49babb754bee2820b16e2718c6899c4f61c0ac88e670876746fe8b5",
      "kind": "transparent"
    },
    {
      "address": "0x7a52a4338Df274b78688094fbf8D4a9B2C0B684C",
      "txHash": "0x0fcbeb8a2cb822b363680cb5ad1d653cb8bd36f2d1f7f30262499bb986374435",
      "kind": "transparent"
    },
    {
      "address": "0x8DfA26392131BFc2b3D36D9B4FF8C8A478Df846B",
      "txHash": "0xb75f6140ee13d71cdd1ef438e0602ab41d8c2db445e40dd7a835f5b08756e8e9",
      "kind": "transparent"
    },
    {
      "address": "0x4B079F3DBB83eB4322aA6d4a5f71acb2FD147eb3",
      "txHash": "0x8efc39af884f241f3940530569abb875b95a686c702e43c31f3480775d058953",
      "kind": "transparent"
    },
    {
      "address": "0x1367aAFaF868cACbDc979701C0270003516e094A",
      "txHash": "0xb0f360c6f27a0c95712713704df98be6bbffdc340ce3142c1766701e35d70b11",
      "kind": "transparent"
    },
    {
      "address": "0x1f2bbd19eb27Da7DfeBA5764E57E923E926FcbD0",
      "txHash": "0x93a4994847781a30dac0f68019ecd48a51bda49dab220def5a25ff9a16ff677b",
      "kind": "transparent"
    },
    {
      "address": "0x8FBe0a4dd5648633CBca4034152928234F06d490",
      "txHash": "0x1af9ce86043d1dcb468bc658460e2bdf085d767a82166dd3093642e343f71cb0",
      "kind": "transparent"
    },
    {
      "address": "0x82a7B70685BC4264d0E09B51bD0b88a03923Ac2C",
      "txHash": "0xd7087c582e53ae30719d7c1c77fe165632c14e61bb0b403739dd56889ab9fff2",
      "kind": "transparent"
    },
    {
      "address": "0x9979301c873505D7Dff354f63A4997Fb013ef831",
      "txHash": "0x643852890678829c5c3a08c31ba4dd28fd73e05fc6b350ae026c033eba1d3b44",
      "kind": "transparent"
    },
    {
      "address": "0x20D986D159038Ef343c0cCcED235ff5794F75c63",
      "txHash": "0x2f73c8362fe1307f8b5f415187dc9fe037ec6fc1b2c84482ea10ca7418fbc142",
      "kind": "transparent"
    },
    {
      "address": "0x511f00db3543Ea72068b35B5c19B3faA46DBdAc4",
      "txHash": "0xb6005a01187a6bab431c733ba164f52111acc48fe0bd9577cefa1299ed4e9f68",
      "kind": "transparent"
    },
    {
      "address": "0x402620459E13500e329163C91c436B33687F9bF9",
      "txHash": "0x21f9e1373b94421abd3b2d7eca5a2fb992ed8bcf639eea5006d9a8e29b86e1c7",
      "kind": "transparent"
    },
    {
      "address": "0x4a2A955973d82Bacf5104ffe8126C8c6D3455224",
      "txHash": "0xcfe9afc8400c22fec8e3db29338bfb4efff1b4c374d78ac9365723027ac095ed",
      "kind": "transparent"
    },
    {
      "address": "0xb5C04B4e45DA801B4EbA766781A7924814dF1Fb3",
      "txHash": "0x45bfafb90d466107f7e3ca749573cdcb2bea878873995697a0c4485e0d02422d",
      "kind": "transparent"
    },
    {
      "address": "0x5568C23c0078263cCcf99873B72Df4595c4d1946",
      "txHash": "0x0200e0ef3afc14f7f4035fa0fedb7052ef2c49f6c14cf21322e2e1e34f6c666d",
      "kind": "transparent"
    },
    {
      "address": "0xd04E72F8fA92b0fd81EA8d11d1F73906813011d2",
      "txHash": "0x19c75092b92149bcf06bd3c3d6d1e85c98ba1549048cf5f645211a8a7b6bc071",
      "kind": "transparent"
    },
    {
      "address": "0x396dA426c40226aa5084A07808eC908D7e2F0dDd",
      "txHash": "0x527906c25eea28d6329f3826627d1123cd9546ef0b688263235df49f2eaac59f",
      "kind": "transparent"
    },
    {
      "address": "0x2e1540aBb0a762014B33C2d992ABE808e73e75e8",
      "txHash": "0x5b55cade53e2f43b126390e0f4e294ae6c772a7f330662f49a1cb79688992cba",
      "kind": "transparent"
    },
    {
      "address": "0x9a9a0B26248ac85C2119871e01Ae65d0C1b09fDf",
      "txHash": "0xcbdf93cad7e8248a39a97669096d0a7ae51d27cb52ff344bb5f805a71eb83302",
      "kind": "transparent"
    },
    {
      "address": "0xcc83B8ee0537D6F60Df4DD00a14840211ec09206",
      "txHash": "0x7f2d111cd795310fda64f6be3d45b441911cd4fc66da455ab4fc4b8a31f4b3c3",
      "kind": "transparent"
    },
    {
      "address": "0xC6E0dB8c2c7b167B5D6F120E96B0d9df6FB9fD15",
      "txHash": "0x710b15ba68c95d25041512c5901d3771cb884b75afd9eae9b4f32651784647d6",
      "kind": "transparent"
    },
    {
      "address": "0x61B4E3683E17480d102c5a180e50930803851bA3",
      "txHash": "0x83c7ce57ba74eb30457ee7d1364ee09e75e7b1e42edf64685eeb042c9909f88d",
      "kind": "transparent"
    },
    {
      "address": "0x9278823BD218573dBcdb065bf517943418d36591",
      "txHash": "0xaae50cf15993a06bbe7453a682cc17365b750f9b1f46d7b02ff4394d84806e40",
      "kind": "transparent"
    },
    {
      "address": "0x61C6BBaf8f00633095996c95f45Eb8e4D7Db34c7",
      "txHash": "0xf48d5e89c3b0ae7dd5a59972c0acb296921f839ebcc2fa9fc0a92661f7f937da",
      "kind": "transparent"
    },
    {
      "address": "0xB4327249054D234dBEe942B835a06042E3B0FF07",
      "txHash": "0xcf941fbc95dbbd874374dae807fef15b3cac563be96b38e8fe4f4bbea4b37185",
      "kind": "transparent"
    },
    {
      "address": "0x55Ab03a7175aBF24532Bc7CC8b1Acc4E4feD441e",
      "txHash": "0xa4062d7b372acc17034e9a2aa2f68f9a188152ac6f024fa91c98e6b2f308dda3",
      "kind": "transparent"
    },
    {
      "address": "0x0588e15BD161EA8376C427aeB56DB1ECA625e220",
      "txHash": "0x981eaf05fc12671f5976506310ee6b36c5016e2e6479a2856285c355a7c24d25",
      "kind": "transparent"
    },
    {
      "address": "0x8c4e921eDfDFD3c0A46E87831F013a2A3343A8b3",
      "txHash": "0x4f2ca7b6801a16daf6c58fa9c66a28efbd300a1e4e4c3e7556b220701dd50e9d",
      "kind": "transparent"
    },
    {
      "address": "0x12Cc74eB17c068a063db72F5D9e51564dD74c041",
      "txHash": "0x36d6ef8a6ac19eec0725e111502a55893a8f529a6c9509d032d0d11cc05a4fbe",
      "kind": "transparent"
    },
    {
      "address": "0x58f101b8bA5055618fC54283fF44452FC045c608",
      "txHash": "0x8dde03af9ce9e1c2d993f20ab551b29668321c8fea547a4ccc2686cbf94e2fa4",
      "kind": "transparent"
    },
    {
      "address": "0x2D471Ee6e4c70123017FF6c772cFa388e4E2DC97",
      "txHash": "0x0d961da4b5b80cb44e61c80cddcda0a61440b3f367ddb292829c6ff5d2d7e600",
      "kind": "transparent"
    },
    {
      "address": "0x17e369Bd340a23E40C26e3622710860054629373",
      "txHash": "0x092b853bfc9023ebe28b06836cc76c692741510b593d87fc5d6dc9a73b568406",
      "kind": "transparent"
    },
    {
      "address": "0x24C5BFa713791E16BA2316509dd230F038f75B7C",
      "txHash": "0xa8e24312b30e6236d6a3b60e85b3c8a8fbffbee96349b247c1a93128796692d0",
      "kind": "transparent"
    },
    {
      "address": "0xc1DdC9Cb3E9c7685ADC5C36aCc9583EcA8331A7c",
      "txHash": "0x68eb53e57576dec0e0a6389b5d0f4e1ce3b1c84733b7e4e0e0518f0e27fd8688",
      "kind": "transparent"
    },
    {
      "address": "0xBdA16c1A8B79482769cD91d23C89AAd3cd41B88C",
      "txHash": "0x2635f6e1c1d3f1b6304371ed40ac434fd0aa748fa562d31c72926496c580b9cc",
      "kind": "transparent"
    },
    {
      "address": "0xECFFD0F01716418eA6e10A6BcC084e85B1025C44",
      "txHash": "0xe0e1f59e06aacfa66cbbe005b1319a8403e03fc643581da166ac7163a313eb03",
      "kind": "transparent"
    },
    {
      "address": "0xB35435225C1D2F328e674f4325c4D9585C775890",
      "txHash": "0xb3da2ef3c435ab5eac0fb8fa47faec02767a7a48f956f41a8822792eeb24eba8",
      "kind": "transparent"
    },
    {
      "address": "0x0214FA7bA220BbE4BC0FFE2995E0B4171e34Af14",
      "txHash": "0x66ed6d6f4948e885ff0bd3ccb35b114fff4e03c852c4a3cfe030b9edbb1f8b78",
      "kind": "transparent"
    },
    {
      "address": "0x26f391e3726C4B27D5fc53BEB63a7E1281026ae4",
      "txHash": "0xc9abf07e2ca5b983b78f9a08f0828ed7f72832c3d84578db550bcd1e239196c6",
      "kind": "transparent"
    },
    {
      "address": "0x7ce18eca39928381bEE65e540405a9B30a68864F",
      "txHash": "0xfe70bed9eeba36b9ffa7d417ae2caa5a8be40a45814a5f9ced55e954ba600b47",
      "kind": "transparent"
    },
    {
      "address": "0x0c25C747cD8f4Ea51f79Cb3a2F57e73De16886ca",
      "txHash": "0xfb6265b8c28afd337613489be0b3ef507ca57606fd682063c9df75d73bdbfb9c",
      "kind": "transparent"
    },
    {
      "address": "0x198cd2f6900cd4706795d3Bb0dd660f6A83d71E7",
      "txHash": "0x561ffb594c96384eb91158af0861103a38c9dc98c5266ff7c33e7a4b11ba69f4",
      "kind": "transparent"
    },
    {
      "address": "0x0117C8ADC465abCdc6851B0fbE2cebbe02546bDF",
      "txHash": "0x55cb557b89125cd8fc767450d84ee688de8d1d6779845fef9bad4de147c24d36",
      "kind": "transparent"
    },
    {
      "address": "0x01a5D3a535Ec3fa96Ff2e80242cD1CC976A25c8F",
      "txHash": "0xd31dce18ffde51e23165258528c005083bed96b4818ab5a39f79407c74461c93",
      "kind": "transparent"
    },
    {
      "address": "0xeC07db7605dc89b83be0cc65B5E9D2B76bC50f26",
      "txHash": "0xa16794d0f5155738323fcffbdedc190c0224420bf9a46c934722ac7927e461cf",
      "kind": "transparent"
    },
    {
      "address": "0x4228E7663742bB7677727c25398B67d0cf9a5b7b",
      "txHash": "0x447b023c8c1812fa6d35f40de4a553165d79c2bdc05ae6b73673fffcf8af1c7c",
      "kind": "transparent"
    },
    {
      "address": "0xEe278a3ac7a9DF47aB8d38d9c842Db6653e015c0",
      "txHash": "0x87c6cde804b9141b2e98294c14e2facf9dd3a5ffb552c632af58a8ac28d27e90",
      "kind": "transparent"
    },
    {
      "address": "0x589D77BaF281910F4D980195f5a7C56E5152344C",
      "txHash": "0xbec61c16faf0cc3ef0b4af582fbbe8f0945407209ec95cd1407c88f760f6f309",
      "kind": "transparent"
    },
    {
      "address": "0xB4CBFec9A54050E5699De3a44f7B44A3C9b3f6eF",
      "txHash": "0x9cc609962e7ece8aba82d49fb2c42e29959b4eed6d807d18b598480f4a1fed27",
      "kind": "transparent"
    },
    {
      "address": "0xFC284062Ea64F08f72c6731D25e02d3EFb0ba613",
      "txHash": "0x8fd39b33af4c25a17f2be1c3c51ef007af3a487115d8c8972cdb1465c2fdeee2",
      "kind": "transparent"
    },
    {
      "address": "0x85F6DBb0a5e9Dce9f45f9B95e7e0D29DA531b166",
      "txHash": "0x9650a6bbfd22ef3aa9239d03e139dd482bd846f2ff4618a1708d9f00acc1c21e",
      "kind": "transparent"
    },
    {
      "address": "0x823b0dd961A1C06d8D6545b5cfcCC7063D138E88",
      "txHash": "0x10df6b2ddab2d4c3863979143c0ce7e633d987a10ed0d8e14d18b9effb74eb76",
      "kind": "transparent"
    },
    {
      "address": "0x0FaE5df5d60D29535742C518a01258F4bBaEafE4",
      "txHash": "0xed14b8bd7469019463967fa15751759f3a3e14e7a08e5e5b0bdfa18b982b1073",
      "kind": "transparent"
    },
    {
      "address": "0x9135E775a7b76fd0fC4f7Ae59e22B5EA4da84cd9",
      "txHash": "0x03f55641fe547245fa815bb8551241b7ad5a06a9f4ca377a31e54d37ece69fc9",
      "kind": "transparent"
    },
    {
      "address": "0xc6C5e4d1195433DDD6b4527042a95aCD6DCD7917",
      "txHash": "0xdddc8ac351ddb77918d88a7b523a9b735f938627ab8fac6f624c5db2a32a9287",
      "kind": "transparent"
    },
    {
      "address": "0xBF24355E3052Be932d9F927542A6De66aD3bC30d",
      "txHash": "0xdf30c85ca630a1bcd3addc3b65ea7fb478af38944a5d435ed95c64e2e9e2256e",
      "kind": "transparent"
    },
    {
      "address": "0xA67a358CCfCA57eeE0cD9002C49B104CA020769A",
      "txHash": "0xfed96d2a9af2d342a7ebaa4d09c0cbc3c28285b71d51c08712534c91240717be",
      "kind": "transparent"
    },
    {
      "address": "0x2aD0e3b038d8a97E51473Cc13A99c0ca80d28049",
      "txHash": "0xf2559abb21fd6a0ba6b783cf2a561be9d7bd8b0b31ccd44f90cf07c5254257bd",
      "kind": "transparent"
    },
    {
      "address": "0x6d7330fB60c169cF8eb34c8b7aC8F0b20227BDc3",
      "txHash": "0xed9846f5ff7c30c0a4f9784933ff6df03a1f4d8fedae492775d2db1f9073cea5",
      "kind": "transparent"
    },
    {
      "address": "0x587C4e012a98DE41966f49E17401252E10aa9bCA",
      "txHash": "0xaedb4f2674f73262170b07c3bf5ab05389a9ae2fc05ae12e6dd024ff6ee64aa3",
      "kind": "transparent"
    },
    {
      "address": "0x981389bb067bc98a957Ef649c002a2AdEf46CBcf",
      "txHash": "0x02fd91f1f50f1fb82df8fcd0b03a92f4634253540ae20806bd8cf7fef699307d",
      "kind": "transparent"
    },
    {
      "address": "0x7763bbF845C9879e2Ad0410512cB67263Cc0EA60",
      "txHash": "0xf41e25e69bacac46bb2e106943159fa448bb0246a71990d8076c16fb39c20cd5",
      "kind": "transparent"
    },
    {
      "address": "0x83af5383d4F4A80Ff9864523F558e145942D20b3",
      "txHash": "0x0be9e6c22569bf87b33cb65195dcd7d2c55245ffc8ac0a3ceeea27a4cd5becb5",
      "kind": "transparent"
    },
    {
      "address": "0x4D4D3AF69B3cB3111f2b30c11E70dF2B444E135A",
      "txHash": "0x5c41523692f4ea5d905d9c155806cf12ffd5226c6e05546e5b45a2d2296bd95d",
      "kind": "transparent"
    },
    {
      "address": "0x731Ae873FC34845E5Dda00CdEdeB853a5B24308F",
      "txHash": "0xd8d2111a12859b42a712647e46be40140e6af0733e4acd42bb610badb48bead4",
      "kind": "transparent"
    },
    {
      "address": "0xDad9e5Bed94cE988CaD291Dc5c67dC77003063f9",
      "txHash": "0x8b7bfd51e295cf536df81ac287b10e08730f18b19f2d5ef61547b15eac550008",
      "kind": "transparent"
    },
    {
      "address": "0xc0d8322b33ef1faA69c3BA71cF582941316300Da",
      "txHash": "0xe1487d814af0fe85c9ee70a1c9a102056bf818493877bafa371398000da9eab6",
      "kind": "transparent"
    },
    {
      "address": "0xeEED7706C4A9c0AFEE9F869bc4A31352747E25B6",
      "txHash": "0x299f3823aaabbfa7347bc71ecf5bb9cbf0b3fc868a9a24fae51b03beacd7549b",
      "kind": "transparent"
    },
    {
      "address": "0xcBE1bc1Ee0A83251524CcDa167Ed386454C20789",
      "txHash": "0x8b3b3300d8f14892c6e0d5142bc002db2543bbd662fdf5dc63658f4a63e6087d",
      "kind": "transparent"
    },
    {
      "address": "0xaf2f5B24E3410Ec7Ade3AE34d4895a3802e56D5C",
      "txHash": "0xee6c6b79039b32cc3198cddfcfef650255246b1c6d8011a6d9a6bd747fb3f32d",
      "kind": "transparent"
    },
    {
      "address": "0xa1907c629044D757B6ABDf244FDe44FaC76E2CC5",
      "txHash": "0x76f88bb5062b2f40bd2ae9976556a81a43c8d038efe4f29364f62a4900d92464",
      "kind": "transparent"
    },
    {
      "address": "0x759000105DEDF0435D63ffD52872e293FB1f6CF8",
      "txHash": "0xd4adfeb3daad64f6a3aa5a000be3b78c2665435a87b1813adb27bdbc398ada78",
      "kind": "transparent"
    },
    {
      "address": "0x107b0Ed567d5161F1605076667eDFd0e32cD9798",
      "txHash": "0x1777217eba6787558f72b5a099a83777fc00a80156af641506a3352602cde537",
      "kind": "transparent"
    },
    {
      "address": "0x352BAc618cc4F9EcFc77B2b103bc120aAF4F1F0d",
      "txHash": "0xd12414211496761f28d5e2bfbae7a1c8181ff82462e4764966ca9ba6ae67738e",
      "kind": "transparent"
    },
    {
      "address": "0x32B3D3f76BC5D0543138Bffd59D9eFFd96A7e1Df",
      "txHash": "0x8b2049eed22022f828c7c7de3c95aa46069da871f74c2896474e6f78deb7b2ff",
      "kind": "transparent"
    },
    {
      "address": "0x979164D9C7B7a6C55eCa55240b85a7705904E808",
      "txHash": "0x58f5354f30c5a404712400879289d5625f114249d8bd746162fd95ebedbbdbee",
      "kind": "transparent"
    },
    {
      "address": "0x6bd6bc94168DeC4e0fcc066174157dFe1604d1E6",
      "txHash": "0xb72e68c9087d9584b97b54e6fbefbd90467428ad7e2ed3abc2543d750e09f2d9",
      "kind": "transparent"
    },
    {
      "address": "0xBC53AC1f8b5664d7491AC8c1d4e1dF827399f4F6",
      "txHash": "0x8a5bc3097dd9ec4e9d83b6b69bdcb03c828fef361530e6466bb00ffc2d51b157",
      "kind": "transparent"
    },
    {
      "address": "0x41EA86A704A970B6Ba645EDda38A6E0567ADc694",
      "txHash": "0xaaf47556fca8413fa9d70b5ae19387bd69742d44fec2f18ff2b9951b0edacec3",
      "kind": "transparent"
    },
    {
      "address": "0x093c17F826115d3a54Fd2d79b6ECDF3aa8B84559",
      "txHash": "0x4ceeab3951ff6a056ce991200dd56ffd24b5a04bbd92652c65d5db2db071badd",
      "kind": "transparent"
    },
    {
      "address": "0x9CdA187697be7314d2Be8ee07D45013832EA9139",
      "txHash": "0xd76cad9659c1a573ead701f727e9793fe3e1b58a6d2d3c54560b62484d25d284",
      "kind": "transparent"
    },
    {
      "address": "0x94555ba274607d32Db37f9A71D076ae41cb9fC16",
      "txHash": "0x93072a97dd084ffaba81d5b10fd934eac8f788fd627ad86ee7a4db794229e795",
      "kind": "transparent"
    },
    {
      "address": "0x37Fb180703591A731EC7990e4d30A1d044216237",
      "txHash": "0x95d1ba635c039b647bffb9fb4fa92d0cc70eb082e45371907869f501a026fc0c",
      "kind": "transparent"
    },
    {
      "address": "0xa8FF9537D73ac56a62f1828948bDCE372a37147d",
      "txHash": "0xce37f5e24ba354f3d69aa441b2467c5f95fb60b93201f3c3fce6976da03dabcc",
      "kind": "transparent"
    },
    {
      "address": "0xE4e30A325a2A34913FB4217381b8F6001e3BaAC1",
      "txHash": "0x3d26cb366d24a16f90d6ff5df0afbfe38d7344341b4232d60b586b1904ff0994",
      "kind": "transparent"
    },
    {
      "address": "0xd1BdCE8427903d9b8aC9Dbe69D0eBD1622eFdDCA",
      "txHash": "0xcbeae083d5f0c60ba20d9ae76f29c65aa3f0a72f172c6342e74c16010ab5b43c",
      "kind": "transparent"
    },
    {
      "address": "0xA37f42aDC221B0Be78f62822CcF3762958305243",
      "txHash": "0x18d2765bf9ba4fecb825cd6de2bd66a2dc6db1f4a56f6ef43e5248787d7e817a",
      "kind": "transparent"
    },
    {
      "address": "0xA0e325647767d38f022625034C046458E3fB0F91",
      "txHash": "0x8141988b9124681ebbf846bebf79d4e695d26464ede4848ad65c633334484a67",
      "kind": "transparent"
    },
    {
      "address": "0x078c4e3E94a1A5b1FBbE6a94CE6f1D49b9De826b",
      "txHash": "0x04d7ff10c4343787f558a89599a645d78f3564c8917880bcf5b7ba949db5b855",
      "kind": "transparent"
    },
    {
      "address": "0xCaDd998C7Fb713bBa479541B0f01Aa63B86B3878",
      "txHash": "0x16a058442ec485bd480618dc22cd00717c4610b1b5fb1edc7c34237e61446478",
      "kind": "transparent"
    },
    {
      "address": "0x05AbfcD0434Ab37C5745b05B60ac1FF856678d21",
      "txHash": "0x8ee95923fba660d1bb03e93c6eafa7db236dbe660d665e89a20e44de74f67343",
      "kind": "transparent"
    },
    {
      "address": "0xb3a32efC21d99813B60E27859eE10AC5AcF41E30",
      "txHash": "0x955ac043367e06e9980845a6ec1c5dcf506f8dd5744149712b7634257f5188b3",
      "kind": "transparent"
    },
    {
      "address": "0xcc7bc242517626F624482601563ab8BC49aBA7D3",
      "txHash": "0x2af171dc3fced69282d497248f6431e8ec11871d86b97760a1ab65f9d9a33494",
      "kind": "transparent"
    },
    {
      "address": "0xF871Ca81a936BA9ceE8c14dB79c318d76B1cFF41",
      "txHash": "0xe4790260204f77a2d76133e0230e781137e394cab6982b8f4f1d850c3c61ca01",
      "kind": "transparent"
    },
    {
      "address": "0x5aBfaBD155F16A9834841A9b9a90f84d6A9B808A",
      "txHash": "0x525ae99a6bffec6b6e6ec31a6b41123ee789398c39637033f1bfe9eee3b5dadb",
      "kind": "transparent"
    },
    {
      "address": "0x2791E7E6F32FE8f78B0e05408f885Aeb70f04350",
      "txHash": "0x63470f35dd44e559d24e2ebde4e6ff9ae1b937fca076f739c3992b6f03cd11f0",
      "kind": "transparent"
    },
    {
      "address": "0xE0E9c5A4C807492a23754CF35ba100A2f5954376",
      "txHash": "0x10b28d86e5ccf85c61a01d572c291e17cec6afd6f6dd5afc4652d8bf677fdd79",
      "kind": "transparent"
    },
    {
      "address": "0x391CC50337Fde3747ABf1B9F95DB0D8eCF005a3C",
      "txHash": "0x2e75529fcf254e534cb4f4c1fbc3c493fcfa8d55f77077a6b6c6097df3c0755d",
      "kind": "transparent"
    },
    {
      "address": "0x7C305c7Ccf3E721Fc85b7b559172166105A52680",
      "txHash": "0xb035325a73874a5ec2984cbce53e0d5af1952da42a1cd3b9469ef157c817c377",
      "kind": "transparent"
    },
    {
      "address": "0xf461977d1BDC780A5017C767e43B8C6523890883",
      "txHash": "0x231ca166fb1e8f436cd76dee5c03ef5cfd8aaa273593ce61990f13131b45a5c8",
      "kind": "transparent"
    },
    {
      "address": "0xec60cC51C4DDc01914C6973a5bd8Bb3282ec2703",
      "txHash": "0x1bfe35dabd56eddee63885b4be76762e4df466423fb4fd1ef137e9f8c25668d5",
      "kind": "transparent"
    },
    {
      "address": "0x9e40F3bb83c51d896c3832E81E611Dd5Db8733e6",
      "txHash": "0xe31e4ec1eb635acc7d4199effcf08e3e0ac99cbf9f4cce7f2a1bdfb9229c7376",
      "kind": "transparent"
    },
    {
      "address": "0x4Ef3F826aCEAC1EC0798a56834AC6424E5b1D114",
      "txHash": "0xf399c288f1f890a4b816dbd576b5a128b4b30373a1f34171440ba3c8dc992b25",
      "kind": "transparent"
    },
    {
      "address": "0x25eeBa28053AdaCd30e0306a90F66A9de2AdDA82",
      "txHash": "0xe967f1f66e37fac668476db09090bcee3f7989965b4d74e361889ab786dc8d9b",
      "kind": "transparent"
    },
    {
      "address": "0x0E93088e26feA356B773E1913F17F3cC58357845",
      "txHash": "0x0ca62c370d17d96cd572fc4f4761b892ebb306bcac15d74a9a021e251caecf1f",
      "kind": "transparent"
    },
    {
      "address": "0x11021B4371dddF04251BcBA529a5fb38d258A0d4",
      "txHash": "0x27bcb309b0c9cfadb642b37d48dee8d637192c026e03471b683866736958991c",
      "kind": "transparent"
    },
    {
      "address": "0xB3611c3B173755a183388C40E6dcea98fAebb482",
      "txHash": "0x88362062f90ecf0f2139f9d6c1426bbd02f29d9d46cbd81c14ac2d0b431688f1",
      "kind": "transparent"
    },
    {
      "address": "0xcbD4Cd92D1eA5bD03C32859aee42A67fC6957601",
      "txHash": "0x634c3b8810e19189447f10a44e70cc050b387dc3db9b63015475c3fcaea850a6",
      "kind": "transparent"
    },
    {
      "address": "0x08444c0B9Ea0797Ed2454811Ee58a7FA3E914853",
      "txHash": "0x607d1d06d12ca96ec9b18ca18990f9825d2e7f575e0f8982507db35d4e43d5df",
      "kind": "transparent"
    },
    {
      "address": "0x0498544DaaeCa2a4b912a1B5D1e0b92760F0Be10",
      "txHash": "0xba4de24eb5ebe302d70c7af5506d1bc9b29cd77dbf683a4e1abd841c6ede2ee9",
      "kind": "transparent"
    },
    {
      "address": "0x3946e1Df3c316BBA21309E7497c9761Af215725f",
      "txHash": "0x3d4073f2e03aba54824a0ed4a2c1178e1a44c7a56d9579fe54fe21292ab0c4a7",
      "kind": "transparent"
    },
    {
      "address": "0x1A8a66414D94FF3000CeBc9a0d9e6e64eA270D18",
      "txHash": "0x898c0dc0d27bf561e202ace3654112b974121e152e979b1f2155c431555b70ae",
      "kind": "transparent"
    },
    {
      "address": "0x93956770Fa631FB75ac36ed38f172369d7db95a5",
      "txHash": "0xa57be5e1308016a480dc575098d36b46f4481d3571c8c46037b18c4c7e93243e",
      "kind": "transparent"
    },
    {
      "address": "0x0e2ef59e08A2e03C5C43f937E0ffe384D162124d",
      "txHash": "0xf98ef668b4e084cf39df060fbefceb74d03d7f29cce600146792417eec3374e1",
      "kind": "transparent"
    },
    {
      "address": "0x8bf46631af071c427e73DD7940D14A6A6A509d2b",
      "txHash": "0xcec9e724c8a470475ea5f6b90ba5d05d161f12b2c96eaa0615385bc361d49d92",
      "kind": "transparent"
    },
    {
      "address": "0x6db887F8566D55350D281e20C498b985Ec52D63c",
      "txHash": "0xf4c56c765e90f525532b2f0935d8d7e909b33caf86b476bc000cc279b1c890c2",
      "kind": "transparent"
    },
    {
      "address": "0x2210E91cca19B8228836c5a7eB22B40867d79C67",
      "txHash": "0xe652ddcf2143582ba1ca9f110b2c11608db67ba6ff6f56f56b7476dcbd0a9a24",
      "kind": "transparent"
    },
    {
      "address": "0xaE885b268dF322BEF13Fc763Ae6E967aF8079dc1",
      "txHash": "0x3f15089f88df7c47b843f5863bf7d2c3d17f7848a3dccd48790d5a9de78f1dd3",
      "kind": "transparent"
    },
    {
      "address": "0x7425c7985efe586D979F3860F5E4086b689d583C",
      "txHash": "0xb1b181a2d007c3e879798536efc2e746f2aa84cd84dcf30e4cdd6116b983e49b",
      "kind": "transparent"
    },
    {
      "address": "0x73a10807b2264cbA712390D57369680b7f0787eE",
      "txHash": "0x659ba8ae59ffc7c91ba4c1684d6b78b7554842b78e2df7278a92ae98de5415ad",
      "kind": "transparent"
    },
    {
      "address": "0x13766518a09f51Aa7fd8c68f29511cd27e652de7",
      "txHash": "0xa14f24bc54ba7b0a07481724b4d198a65d4b483b1f943f19d3162db2f7403f17",
      "kind": "transparent"
    },
    {
      "address": "0x08018A2d9b1b33912A0F956dD1c3A83a50BB7Aae",
      "txHash": "0xa5d8e62a5fd47be2174b015f9915dc8245e5120b4df0e3180a95470d1330ea95",
      "kind": "transparent"
    },
    {
      "address": "0xE2433982e9683f70F3B52012f0b87aC16191FC52",
      "txHash": "0x17555890e39966d27073db17ad263ada4fe35c676dca27014894fa2992520ab3",
      "kind": "transparent"
    },
    {
      "address": "0x37c3920dbfa946b9AA85FAA69349e2370A54A6fa",
      "txHash": "0x01850dee6322da7465035aaff7898e8b5480b994d8fc88dfebd424d4849df7d0",
      "kind": "transparent"
    },
    {
      "address": "0xF55dea5Ca30aF6D0ba656af11081C934c22C5390",
      "txHash": "0xe1cce95cc802f5a0780e70471e091fa1ab1b8aa485555535ad32b4fe01df5d9d",
      "kind": "transparent"
    },
    {
      "address": "0x39Cc90Ae898E16B62a8081A8182574ACcA984a69",
      "txHash": "0xbefd23cc14c4c48cfd2defd3054a6bf1deaac621427e786369cc1900c8fc6e6c",
      "kind": "transparent"
    },
    {
      "address": "0x9f280F42fc83C3B937F8c057Cb232b2FD335C03d",
      "txHash": "0x80c3e9b5017fb486536b5360464a22194defea14024ad7cf8b5c674a3bba399c",
      "kind": "transparent"
    },
    {
      "address": "0xe1054F1F0A2A6D7A3DcB4eaF01E52eEDF8E313A7",
      "txHash": "0xbc97efc4328818b65a31873c11585b431af47368909fa9cdb4c0f956b76dc6da",
      "kind": "transparent"
    },
    {
      "address": "0x724173F8F131aB24F34a80a0d1558626A8825A0f",
      "txHash": "0x1c550ad28df7973d93f08d2cf233c375329d0827867065ff1cc2a074448a1f23",
      "kind": "transparent"
    },
    {
      "address": "0xE37740926636d4b4ba8D9EBdaA5E0081a985425A",
      "txHash": "0xe1f32e71588d129641ca5c5430c75c7fd5e9dbe25eb28bd7d12e0a336b65994e",
      "kind": "transparent"
    },
    {
      "address": "0x1d9D7231143B9F09e5452DaC80b02C555Ec50f62",
      "txHash": "0x52d4571bf53f00a6a0df37818c303364e208c54a2d4db5959d49a6b03f32bcbd",
      "kind": "transparent"
    },
    {
      "address": "0x505353304F680D8D5dCdeEb20eDdc4e3439735F0",
      "txHash": "0xeed99dfae8dea4af9313cd625e758e1bddc1d29582c18a96f06705da28f7c146",
      "kind": "transparent"
    },
    {
      "address": "0xd42668552fED549F6A7973Ef07A81c0E78df5f1b",
      "txHash": "0x1e049d56acbb098c23eb25bbd36acb75ab775232d8bae11a4fa6ab66d71bdc7d",
      "kind": "transparent"
    },
    {
      "address": "0x4E2fE70A567129B035c0dF86d57C6131752D257b",
      "txHash": "0x4990878253c2b3f6fa1cf8fbfc0db92dd88903b70e64d51a1b2713db761afa87",
      "kind": "transparent"
    },
    {
      "address": "0x9676Dd4385150EfdA45bC7d1E34DAf08987a5f1F",
      "txHash": "0x004191e476c554e0017d50501ed99141f61d18ff2f0f261b720a50749682b5ee",
      "kind": "transparent"
    },
    {
      "address": "0xD43ECdA9678EE04889C27068de7DF2DF154E2367",
      "txHash": "0x31a367df53d282916ddc4edbad4274d11bb9e3378554c02dffe27b81b99cecbd",
      "kind": "transparent"
    },
    {
      "address": "0xEE5935B04EA299f90848D7C64611976d603af703",
      "txHash": "0xc2d121f219bd0f4bb7984bc1c200e65ba84022779dfc14bbc1c2986206bce9c8",
      "kind": "transparent"
    },
    {
      "address": "0xae7C0e0e3EEF0F032B5D4437F815D97d08f7D38e",
      "txHash": "0xb686c5de052313e86ac82ff6231c3698831a0f9d8bc288cd2b1fd7f34fb84124",
      "kind": "transparent"
    },
    {
      "address": "0x4fDD77dBdf9A4357EE8cD1a8dCA7646bd649dB67",
      "txHash": "0xe44ad281116deb57a4547316a4bf35edc74273d4de4ccafe5cfbe9c4fd3811c8",
      "kind": "transparent"
    },
    {
      "address": "0x196df4b6F73d4cf088C67f9D55b228760f8b5DA4",
      "txHash": "0xf012a7a21552bfedfc27962875364bb003cedb390ff4cd373993179ca7e10bc2",
      "kind": "transparent"
    },
    {
      "address": "0x7D2cdEfD431FfEE9f640fb7C799260f7D016206F",
      "txHash": "0xab708b96021d6a11e0e7498c188b77f65b43280a00625a1a74b03d3aef53c86e",
      "kind": "transparent"
    },
    {
      "address": "0x93526041b33c283c70c8aaA0a1d36DF2f6973775",
      "txHash": "0xefb08c022efd20a9dd3895e742978573be11fa97f18c721171b6ef207e04110c",
      "kind": "transparent"
    },
    {
      "address": "0x461e3873e8eC4627B0fD3E5c471a7C4A19180052",
      "txHash": "0x8f302b863b035e0e796b7f4b866e6a544ed9f1c3187a82841eefcb6fe254b4e3",
      "kind": "transparent"
    },
    {
      "address": "0x7124f259d179401f03175C69079De65d4b4CA803",
      "txHash": "0xf4a1a06e5a72d5da484674a3319ed00274da45c5b92119d29777939bf35275df",
      "kind": "transparent"
    },
    {
      "address": "0xBc27F0b32De7Db3D4749BB7Bac1c09e0152A3506",
      "txHash": "0x58c472363b21b2168203cb45ae88538ef3226b4de19f5bdc6638475f6f3bd67e",
      "kind": "transparent"
    },
    {
      "address": "0xFc5641bc98f43642754cB7d0e113f8b747628B73",
      "txHash": "0x0a3d9d2e4efa9b5086b4ddb4dd70c3260f4fd14f1f02d2ebb12d1232932c2995",
      "kind": "transparent"
    },
    {
      "address": "0xDf01BdAbe7B5AAC6217dBA50B5D12ae4AC1b82F0",
      "txHash": "0xd52993d0ded81c7ebc941be7b22b5a4c646186e473a31858fe0ab30ea481af73",
      "kind": "transparent"
    },
    {
      "address": "0xA5c422cA54AC3AB7930291E222C9Af4b286dd924",
      "kind": "transparent"
    },
    {
      "address": "0x7f22122bD326D466ac11F48C200BEaf6899f9a1e",
      "txHash": "0x9c85f152728e7ebe61091e0cf051981ea7c91d448934190169b2da6f8914ea9d",
      "kind": "transparent"
    },
    {
      "address": "0x80A80e168ce39FE96d5f72907185ebDeB253283A",
      "txHash": "0x28f255e2f6582cae17c8cfa0f1824ab86c8a419cf5f86cfab558804b06beb833",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a6ac2ed9f02f80e444bcabc5a4d8be1ccd7d670747b3b3401742e24afdf2791a": {
      "address": "0x150a7Bc74056A09E860eDf76d64844D7Cdb08932",
      "txHash": "0x9ed3a532b732d9b1de9959bf24adcac2fd8f963ecfff8ffd47ff9e4cfc1c99cc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "RTOEscrow",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)1212",
            "src": "../project:/contracts/RTOEscrow.sol:12"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)1212": {
            "label": "contract ERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c6b8bafb36429f2520e9cc168dde8d6def9ac7b085aefc89b1714a55922a93f": {
      "address": "0xBc8B4bF50ae85172e04814D9d21193A41fc5253D",
      "txHash": "0x14cc988ef0aa1c3d10475d82ce1c67c9be9802ffff92176f5b90e5bb9517d599",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)10103_storage))",
            "src": "../project:/contracts/Vaults.sol:9"
          },
          {
            "contract": "Vaults",
            "label": "escrowTokenAddress",
            "type": "t_contract(IEscrow)9898",
            "src": "../project:/contracts/Vaults.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)10103_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)10103_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)10103_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)9898": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b56c2ea546d0a0b68100a3df711e11e8f4ffac53ed8fd801c6758d082703ff00": {
      "address": "0xF301fB28CDE3b41c6A7EDc36cEf7b907A42F4B6E",
      "txHash": "0x8297616c088fb50260437f1e8e7d280cdedc43295cfaf29ba01ace372b43bd87",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrmanager",
            "type": "t_struct(AddrManager)2325_storage",
            "src": "../project:/contracts/ContractRegistry.sol:22"
          },
          {
            "contract": "ContractRegistry",
            "label": "DECIMALS",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:24"
          },
          {
            "contract": "ContractRegistry",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:25"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:26"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralInterestChange",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:27"
          },
          {
            "contract": "ContractRegistry",
            "label": "delayedInstalmentsCount",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:28"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrStatus",
            "type": "t_bool",
            "src": "../project:/contracts/ContractRegistry.sol:29"
          }
        ],
        "types": {
          "t_struct(AddrManager)2325_storage": {
            "label": "struct ContractRegistry.AddrManager",
            "members": [
              {
                "label": "coinContractaddr",
                "type": "t_contract(ERC20Upgradeable)1212"
              },
              {
                "label": "escrowContractAddr",
                "type": "t_contract(IEscrow)9898"
              },
              {
                "label": "vaultContractAddr",
                "type": "t_contract(Vaults)9818"
              },
              {
                "label": "proposalContractAddr",
                "type": "t_contract(ProposalRequestRegistry)8725"
              },
              {
                "label": "paymentContractAddr",
                "type": "t_contract(PaymentRegistry)4454"
              },
              {
                "label": "adminUserAddr",
                "type": "t_address"
              }
            ]
          },
          "t_contract(ERC20Upgradeable)1212": {
            "label": "contract ERC20Upgradeable"
          },
          "t_contract(IEscrow)9898": {
            "label": "contract IEscrow"
          },
          "t_contract(Vaults)9818": {
            "label": "contract Vaults"
          },
          "t_contract(ProposalRequestRegistry)8725": {
            "label": "contract ProposalRequestRegistry"
          },
          "t_contract(PaymentRegistry)4454": {
            "label": "contract PaymentRegistry"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7e046089ae4bb0bd633f6123ca725653b0060c94367d0de16af3b92d6fb08bdd": {
      "address": "0xa97170c7473c074C1f4c93ca5e5E25058068a54B",
      "txHash": "0x5979f9eaf9e23a6be02cb12cc64a64b6903c3b19dc1598776c03919e98db763f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)17651_storage)",
            "src": "../project:/contracts/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)4868",
            "src": "../project:/contracts/ProposalRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)17582_storage)",
            "src": "../project:/contracts/ProposalRegistry.sol:16"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/ProposalRegistry.sol:17"
          },
          {
            "contract": "ProposalRequestRegistry",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)11478",
            "src": "../project:/contracts/ProposalRequestRegistry.sol:17"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)11478": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)4868": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)17582_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)17582_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)17592_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)17614_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)17587_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)17541"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)17602_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)17537_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)17592_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)17614_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)17551"
              }
            ]
          },
          "t_struct(DirectInfo)17587_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)17541": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)17602_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)17545"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)17537_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)17551": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "INPROGRESS",
              "REQUESTED",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)17545": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)17651_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)17651_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "applicationId",
                "type": "t_uint256"
              },
              {
                "label": "borrowRequests",
                "type": "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)17659_storage)dyn_storage)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "requestedProposals",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)17659_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IUser.BorrowRequestStruct[])"
          },
          "t_array(t_struct(BorrowRequestStruct)17659_storage)dyn_storage": {
            "label": "struct IUser.BorrowRequestStruct[]"
          },
          "t_struct(BorrowRequestStruct)17659_storage": {
            "label": "struct IUser.BorrowRequestStruct",
            "members": [
              {
                "label": "requestedUser",
                "type": "t_address"
              },
              {
                "label": "requestedDate",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(BorrowRequestState)17664"
              }
            ]
          },
          "t_enum(BorrowRequestState)17664": {
            "label": "enum IUser.BorrowRequestState",
            "members": [
              "AWAITING",
              "REJECTED",
              "ACCEPTED",
              "DELETED"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      },
      "allAddresses": [
        "0xa97170c7473c074C1f4c93ca5e5E25058068a54B",
        "0x02fD83525f936eC6Db80ef0045715CA3058Cf1Ef"
      ]
    },
    "49c531e23f320bbe84079ad288ee2142f012941721acefb350061f96ce833fa6": {
      "address": "0x399c066125635231d67913E5B0f97940630aFDA9",
      "txHash": "0xae457ca34ca66982066f030a28d5ddf15abd8e0ce21a353638bc6a757f057df5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistry",
            "label": "stableCoin",
            "type": "t_contract(IERC20)9877",
            "src": "../project:/contracts/PaymentRegistry.sol:19"
          },
          {
            "contract": "PaymentRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)2588",
            "src": "../project:/contracts/PaymentRegistry.sol:20"
          },
          {
            "contract": "PaymentRegistry",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)7159",
            "src": "../project:/contracts/PaymentRegistry.sol:21"
          },
          {
            "contract": "PaymentRegistry",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)9924_storage)dyn_storage)",
            "src": "../project:/contracts/PaymentRegistry.sol:23"
          },
          {
            "contract": "PaymentRegistry",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)9939_storage)",
            "src": "../project:/contracts/PaymentRegistry.sol:24"
          }
        ],
        "types": {
          "t_contract(IERC20)9877": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)2588": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)7159": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)9924_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)9924_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)9924_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)9909"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)9904"
              }
            ]
          },
          "t_enum(InstalmentType)9909": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)9904": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)9939_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)9939_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "da17a42bc04bcd575102a3b5a60224adc58d98b03780d4ed0b5252849d326647": {
      "address": "0x29E83ecaC0266D8f15cd56b66D402836EA706afA",
      "txHash": "0x22810a7e53674b20b4f06e906b382c5fef4353ce5299672d0cedfc0112815401",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4c72a2d29ad06dc970d9d28e9dc708292cbc3f5e83ad4de35d2026f009ee2966": {
      "address": "0x4947eED9B29cf11a166BF1aAea9973Ec87fe5093",
      "txHash": "0xc197fb963b69b57d4ac6ff6e54f2fe15ee3504ec32e190db7a6db93f3111266a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactory",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:9"
          },
          {
            "contract": "CreatorFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactory.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "77dd081a5a9977333eadd77d99dbb5bfce1ea52269b2069945c477f36cd6436f": {
      "address": "0x5699CAC6E940A15B1886244808D396825a271D31",
      "txHash": "0x7c16389b85121e32b46c93b671013aaca60f8ddd41e097075fb7f4d9e14feded",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "CreatorFactoryNormal",
            "label": "DeployerInstance",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountCreatorFactoryNormal.sol:9"
          },
          {
            "contract": "CreatorFactoryNormal",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountCreatorFactoryNormal.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d8c5728a980d85baaabb5c43167917abdc81afd3bb3aa059f936a479faab0181": {
      "address": "0x007aA21890826ae95d15c562e561AbF26B4ac650",
      "txHash": "0x4b44da464433031fdaa5de716eb3ed1ea66755eb4a7805fb686162dae86ec817",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "JointAccountFactory",
            "label": "jointAccountBeacon",
            "type": "t_contract(JointAccountBeacon)6112",
            "src": "../project:/contracts/JointAccountFactory.sol:12"
          },
          {
            "contract": "JointAccountFactory",
            "label": "accounts",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/JointAccountFactory.sol:14"
          },
          {
            "contract": "JointAccountFactory",
            "label": "isDeployer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/JointAccountFactory.sol:15"
          }
        ],
        "types": {
          "t_contract(JointAccountBeacon)6112": {
            "label": "contract JointAccountBeacon"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "01dc220035870030287cf1875641e18f448e9f8fd864b116ceba9081f630e4f9": {
      "address": "0x76Fdff862Fa3e06C71a91E913AE79b9d5e13f12B",
      "txHash": "0x43c7184676fa2fc8fa0e7caab38d0a62920b74dd176aa9f520ac0ec4c5ac0ebb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)22189_storage)",
            "src": "../project:/contracts/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)4868",
            "src": "../project:/contracts/ProposalRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)22120_storage)",
            "src": "../project:/contracts/ProposalRegistry.sol:16"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/ProposalRegistry.sol:17"
          },
          {
            "contract": "ProposalRequestRegistryV2",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)11478",
            "src": "../project:/contracts/ProposalRequestRegistryV2.sol:17"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)11478": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)4868": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)22120_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)22120_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)22130_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)22152_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)22125_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)22079"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)22140_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)22075_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)22130_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)22152_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)22089"
              }
            ]
          },
          "t_struct(DirectInfo)22125_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)22079": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)22140_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)22083"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)22075_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)22089": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "INPROGRESS",
              "REQUESTED",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)22083": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)22189_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)22189_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "applicationId",
                "type": "t_uint256"
              },
              {
                "label": "borrowRequests",
                "type": "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)22197_storage)dyn_storage)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "requestedProposals",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)22197_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IUser.BorrowRequestStruct[])"
          },
          "t_array(t_struct(BorrowRequestStruct)22197_storage)dyn_storage": {
            "label": "struct IUser.BorrowRequestStruct[]"
          },
          "t_struct(BorrowRequestStruct)22197_storage": {
            "label": "struct IUser.BorrowRequestStruct",
            "members": [
              {
                "label": "requestedUser",
                "type": "t_address"
              },
              {
                "label": "requestedDate",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(BorrowRequestState)22202"
              }
            ]
          },
          "t_enum(BorrowRequestState)22202": {
            "label": "enum IUser.BorrowRequestState",
            "members": [
              "AWAITING",
              "REJECTED",
              "ACCEPTED",
              "DELETED"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1c07b95297bf22f1e54f2b95e7dc3e947e0bcb4c2388bc449530141698eef31d": {
      "address": "0x032BeC2caD07D9EfCe8852D1546E8aE4e35c56FC",
      "txHash": "0xe45e31da5bc20148dbf4a68a4f6b9a8f7a5fa6676dc40001cebabebf24ce16ee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "contract": "WrappedToken",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../project:/contracts/WrappedToken.sol:17"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "5d5483b70242b22e98a9d4592d9ebaae4cc83e015ecaa7f8edcb6d128ce440b4": {
      "address": "0xdBAe10e73b25364FE53710F830Ab1a19beeA4D2e",
      "txHash": "0x3769a6123931df759e4838bcb21fe40347dd894f04ec6f2f32a7086e5efecb76",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrmanager",
            "type": "t_struct(AddrManager)4605_storage",
            "src": "../project:/contracts/ContractRegistry.sol:22"
          },
          {
            "contract": "ContractRegistry",
            "label": "DECIMALS",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:24"
          },
          {
            "contract": "ContractRegistry",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:25"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:26"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralInterestChange",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:27"
          },
          {
            "contract": "ContractRegistry",
            "label": "delayedInstalmentsCount",
            "type": "t_uint256",
            "src": "../project:/contracts/ContractRegistry.sol:28"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrStatus",
            "type": "t_bool",
            "src": "../project:/contracts/ContractRegistry.sol:29"
          }
        ],
        "types": {
          "t_struct(AddrManager)4605_storage": {
            "label": "struct ContractRegistry.AddrManager",
            "members": [
              {
                "label": "coinContractaddr",
                "type": "t_contract(ERC20Upgradeable)1493"
              },
              {
                "label": "escrowContractAddr",
                "type": "t_contract(IEscrow)20446"
              },
              {
                "label": "vaultContractAddr",
                "type": "t_contract(Vaults)20243"
              },
              {
                "label": "proposalContractAddr",
                "type": "t_contract(ProposalRequestRegistry)14446"
              },
              {
                "label": "paymentContractAddr",
                "type": "t_contract(PaymentRegistry)8250"
              },
              {
                "label": "adminUserAddr",
                "type": "t_address"
              }
            ]
          },
          "t_contract(ERC20Upgradeable)1493": {
            "label": "contract ERC20Upgradeable"
          },
          "t_contract(IEscrow)20446": {
            "label": "contract IEscrow"
          },
          "t_contract(Vaults)20243": {
            "label": "contract Vaults"
          },
          "t_contract(ProposalRequestRegistry)14446": {
            "label": "contract ProposalRequestRegistry"
          },
          "t_contract(PaymentRegistry)8250": {
            "label": "contract PaymentRegistry"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9ea4f028778a7e1452fe9f04ce20e0fb3e0d2f34455dcfdc00552d3f4250ff25": {
      "address": "0x894b807D0C7c325D89a9D2dfeCd01fBF157C5E83",
      "txHash": "0x60c074944a56be1e39bcb0e205d23288c595b42786b783dc96c618b46578f5f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)27341_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistryV2",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)8683",
            "src": "../project:/contracts/lending/ProposalRegistryV2.sol:15"
          },
          {
            "contract": "ProposalRegistryV2",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)27272_storage)",
            "src": "../project:/contracts/lending/ProposalRegistryV2.sol:16"
          },
          {
            "contract": "ProposalRegistryV2",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistryV2.sol:17"
          },
          {
            "contract": "ProposalRequestRegistryV5",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistryV2)15179",
            "src": "../project:/contracts/lending/ProposalRequestRegistryV5.sol:17"
          }
        ],
        "types": {
          "t_contract(ProposalRegistryV2)15179": {
            "label": "contract ProposalRegistryV2"
          },
          "t_contract(ContractRegistry)8683": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)27272_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)27272_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)27282_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)27304_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)27277_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)27231"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)27292_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)27227_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)27282_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)27304_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)27241"
              }
            ]
          },
          "t_struct(DirectInfo)27277_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)27231": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)27292_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)27235"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)27227_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)27241": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "INPROGRESS",
              "REQUESTED",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)27235": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)27341_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)27341_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "applicationId",
                "type": "t_uint256"
              },
              {
                "label": "borrowRequests",
                "type": "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)27349_storage)dyn_storage)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "requestedProposals",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)27349_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IUser.BorrowRequestStruct[])"
          },
          "t_array(t_struct(BorrowRequestStruct)27349_storage)dyn_storage": {
            "label": "struct IUser.BorrowRequestStruct[]"
          },
          "t_struct(BorrowRequestStruct)27349_storage": {
            "label": "struct IUser.BorrowRequestStruct",
            "members": [
              {
                "label": "requestedUser",
                "type": "t_address"
              },
              {
                "label": "requestedDate",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(BorrowRequestState)27354"
              }
            ]
          },
          "t_enum(BorrowRequestState)27354": {
            "label": "enum IUser.BorrowRequestState",
            "members": [
              "AWAITING",
              "REJECTED",
              "ACCEPTED",
              "DELETED"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6124f76155a391481da3ad55acfeab259ef5a7f15f8c02b35ff358fbe7de33ea": {
      "address": "0x4Bb4Ba92D40A667e4d79aa7A72de714d7e544e87",
      "txHash": "0x7882f0a8a458f09fcc975cf3d874d705876dee8e8970702c552943d50c0d7156",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)30324_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistryV3",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)8683",
            "src": "../project:/contracts/lending/ProposalRegistryV3.sol:15"
          },
          {
            "contract": "ProposalRegistryV3",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)30255_storage)",
            "src": "../project:/contracts/lending/ProposalRegistryV3.sol:16"
          },
          {
            "contract": "ProposalRegistryV3",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistryV3.sol:17"
          },
          {
            "contract": "ProposalRequestRegistryV6",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistryV3)16587",
            "src": "../project:/contracts/lending/ProposalRequestRegistryV6.sol:17"
          }
        ],
        "types": {
          "t_contract(ProposalRegistryV3)16587": {
            "label": "contract ProposalRegistryV3"
          },
          "t_contract(ContractRegistry)8683": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)30255_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)30255_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)30265_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)30287_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)30260_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)30214"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)30275_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)30210_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)30265_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)30287_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)30224"
              }
            ]
          },
          "t_struct(DirectInfo)30260_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)30214": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)30275_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)30218"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)30210_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)30224": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "INPROGRESS",
              "REQUESTED",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)30218": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)30324_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)30324_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "applicationId",
                "type": "t_uint256"
              },
              {
                "label": "borrowRequests",
                "type": "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)30332_storage)dyn_storage)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "requestedProposals",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)30332_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IUser.BorrowRequestStruct[])"
          },
          "t_array(t_struct(BorrowRequestStruct)30332_storage)dyn_storage": {
            "label": "struct IUser.BorrowRequestStruct[]"
          },
          "t_struct(BorrowRequestStruct)30332_storage": {
            "label": "struct IUser.BorrowRequestStruct",
            "members": [
              {
                "label": "requestedUser",
                "type": "t_address"
              },
              {
                "label": "requestedDate",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(BorrowRequestState)30337"
              }
            ]
          },
          "t_enum(BorrowRequestState)30337": {
            "label": "enum IUser.BorrowRequestState",
            "members": [
              "AWAITING",
              "REJECTED",
              "ACCEPTED",
              "DELETED"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7a0a3f57fc58ee9ba6ed2a05696490ccfe20ae49e3ebcba8c83ac3703b267266": {
      "address": "0x39b003395cCa60D70Ea64fF0130B735142D58124",
      "txHash": "0x8a45029cd1b3dbf3c242fae0fe4dda9444879fade63634dd2bc286500424640d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)33301_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistryV4",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)8683",
            "src": "../project:/contracts/lending/ProposalRegistryV4.sol:15"
          },
          {
            "contract": "ProposalRegistryV4",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)33232_storage)",
            "src": "../project:/contracts/lending/ProposalRegistryV4.sol:16"
          },
          {
            "contract": "ProposalRegistryV4",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistryV4.sol:17"
          },
          {
            "contract": "ProposalRequestRegistryV7",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistryV4)18002",
            "src": "../project:/contracts/lending/ProposalRequestRegistryV7.sol:17"
          }
        ],
        "types": {
          "t_contract(ProposalRegistryV4)18002": {
            "label": "contract ProposalRegistryV4"
          },
          "t_contract(ContractRegistry)8683": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)33232_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)33232_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)33242_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)33264_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)33237_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)33191"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)33252_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)33187_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)33242_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)33264_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)33201"
              }
            ]
          },
          "t_struct(DirectInfo)33237_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)33191": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)33252_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)33195"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)33187_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)33201": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "INPROGRESS",
              "REQUESTED",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)33195": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)33301_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)33301_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "applicationId",
                "type": "t_uint256"
              },
              {
                "label": "borrowRequests",
                "type": "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)33309_storage)dyn_storage)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "requestedProposals",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)33309_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IUser.BorrowRequestStruct[])"
          },
          "t_array(t_struct(BorrowRequestStruct)33309_storage)dyn_storage": {
            "label": "struct IUser.BorrowRequestStruct[]"
          },
          "t_struct(BorrowRequestStruct)33309_storage": {
            "label": "struct IUser.BorrowRequestStruct",
            "members": [
              {
                "label": "requestedUser",
                "type": "t_address"
              },
              {
                "label": "requestedDate",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(BorrowRequestState)33314"
              }
            ]
          },
          "t_enum(BorrowRequestState)33314": {
            "label": "enum IUser.BorrowRequestState",
            "members": [
              "AWAITING",
              "REJECTED",
              "ACCEPTED",
              "DELETED"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3edb71e2fec1128c68773ae4d7ec3b1ce9fb480334c16cbc652348ed96243620": {
      "address": "0xe02d7b29703Faa177490696d4EA1A0Ed06b0096E",
      "txHash": "0xb42454bb5d66fcaf439636dc81f184ebee1148e85176e0ed0e685dc52c014c7e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)33301_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistryV5",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)8683",
            "src": "../project:/contracts/lending/ProposalRegistryV5.sol:15"
          },
          {
            "contract": "ProposalRegistryV5",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)33232_storage)",
            "src": "../project:/contracts/lending/ProposalRegistryV5.sol:16"
          },
          {
            "contract": "ProposalRegistryV5",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistryV5.sol:17"
          },
          {
            "contract": "ProposalRequestRegistryV8",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistryV5)19411",
            "src": "../project:/contracts/lending/ProposalRequestRegistryV8.sol:17"
          }
        ],
        "types": {
          "t_contract(ProposalRegistryV5)19411": {
            "label": "contract ProposalRegistryV5"
          },
          "t_contract(ContractRegistry)8683": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)33232_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)33232_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)33242_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)33264_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)33237_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)33191"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)33252_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)33187_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)33242_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)33264_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)33201"
              }
            ]
          },
          "t_struct(DirectInfo)33237_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)33191": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)33252_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)33195"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)33187_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)33201": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "INPROGRESS",
              "REQUESTED",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)33195": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)33301_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)33301_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "applicationId",
                "type": "t_uint256"
              },
              {
                "label": "borrowRequests",
                "type": "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)33309_storage)dyn_storage)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "requestedProposals",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(BorrowRequestStruct)33309_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IUser.BorrowRequestStruct[])"
          },
          "t_array(t_struct(BorrowRequestStruct)33309_storage)dyn_storage": {
            "label": "struct IUser.BorrowRequestStruct[]"
          },
          "t_struct(BorrowRequestStruct)33309_storage": {
            "label": "struct IUser.BorrowRequestStruct",
            "members": [
              {
                "label": "requestedUser",
                "type": "t_address"
              },
              {
                "label": "requestedDate",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(BorrowRequestState)33314"
              }
            ]
          },
          "t_enum(BorrowRequestState)33314": {
            "label": "enum IUser.BorrowRequestState",
            "members": [
              "AWAITING",
              "REJECTED",
              "ACCEPTED",
              "DELETED"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "53b7c2c03ddcde86de8a72a45898e8939f9da7c221d0e9afb153f361fec63c60": {
      "address": "0x34BCC7662Eae0a2c19D6f57b284916E8CA51d865",
      "txHash": "0xf9d290df8978f9f19d4b3d775a5ec52d60718fb69f889393820705ed21487587",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "Swapper",
            "label": "marketRate",
            "type": "t_contract(MarketRateOracle)33560",
            "src": "../project:/contracts/swapping/Swapper.sol:15"
          },
          {
            "contract": "Swapper",
            "label": "swapFeePct",
            "type": "t_uint256",
            "src": "../project:/contracts/swapping/Swapper.sol:16"
          },
          {
            "contract": "Swapper",
            "label": "priceList",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/swapping/Swapper.sol:26"
          },
          {
            "contract": "Swapper",
            "label": "contractAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:27"
          },
          {
            "contract": "Swapper",
            "label": "adminAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/Swapper.sol:28"
          },
          {
            "contract": "Swapper",
            "label": "swapRequests",
            "type": "t_mapping(t_uint256,t_struct(SwapData)33651_storage)",
            "src": "../project:/contracts/swapping/Swapper.sol:44"
          }
        ],
        "types": {
          "t_contract(MarketRateOracle)33560": {
            "label": "contract MarketRateOracle"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(SwapData)33651_storage)": {
            "label": "mapping(uint256 => struct Swapper.SwapData)"
          },
          "t_struct(SwapData)33651_storage": {
            "label": "struct Swapper.SwapData",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "from",
                "type": "t_address"
              },
              {
                "label": "tokenFrom",
                "type": "t_address"
              },
              {
                "label": "tokenTo",
                "type": "t_address"
              },
              {
                "label": "fromAmount",
                "type": "t_uint256"
              },
              {
                "label": "toAmount",
                "type": "t_uint256"
              },
              {
                "label": "expirationTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "fromTokenUnitPrice",
                "type": "t_uint256"
              },
              {
                "label": "toTokenUnitPrice",
                "type": "t_uint256"
              },
              {
                "label": "adminFee",
                "type": "t_uint256"
              },
              {
                "label": "claim",
                "type": "t_enum(SwapState)33662"
              }
            ]
          },
          "t_enum(SwapState)33662": {
            "label": "enum Swapper.SwapState",
            "members": [
              "INVALID",
              "OPEN",
              "CLOSED",
              "EXPIRED",
              "FAILED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "84e34eef3bfeaf8ecec006fdc7447379b0e40bc70e6f9e3d5fc85636a6491638": {
      "address": "0x6EE0352355A7724040be79CDF717b5401425c704",
      "txHash": "0x2c311e55d4f48101d50146e89c9595091d17440d7095e49da4ec09fa03a5cfee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "contract": "WrappedToken",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../project:/contracts/bridging/WrappedToken.sol:17"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "ecea1cf2897333827f90565cd2dcd43cb7103c9f18b58465da4af9b64ae9ecc0": {
      "address": "0x8B278117e4c36D412a8f27A5BbC48c69F0C8fdd4",
      "txHash": "0xff86db5357ed3f609de3786ff9c14162483c2f54c79d898766c3e43e009ebbbb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "RTOEscrow",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)3669",
            "src": "../project:/contracts/lending/RTOEscrow.sol:12"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)3669": {
            "label": "contract ERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)2355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a77e9818446d3fbf0e8be74b592c4cb26f7cbbb1d06cb2f622bd4bbd7cb0de9a": {
      "address": "0x263dA06f54D7a72a67a009bE8C4A443E295d8673",
      "txHash": "0x5ea626b92b8226fcc9fc9cb8f74c6e0482206f678e8ae6487ad6f55eb3f094aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15469_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:9"
          },
          {
            "contract": "Vaults",
            "label": "escrowTokenAddress",
            "type": "t_contract(IEscrow)15271",
            "src": "../project:/contracts/lending/Vaults.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15469_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15469_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15469_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)15271": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ab9461b88eabf2a7c4ccc9be13761f615e12efec211e3f1b05527b52873c144e": {
      "address": "0xA2F96AEaa591828A9686ED2255004eAC8eA5504f",
      "txHash": "0x140ed4531d15451377e0587ed38b6b6c03fa10ebefb05848108799a053e52f10",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:13"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)15451_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)9916",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)15391_storage)",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:16"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:17"
          },
          {
            "contract": "ProposalRequestRegistry",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)13274",
            "src": "../project:/contracts/lending/ProposalRequestRegistry.sol:17"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)13274": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)9916": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)15391_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)15391_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)15401_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)15423_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)15396_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)15349"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)15411_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)15345_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)15401_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)15423_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)15358"
              }
            ]
          },
          "t_struct(DirectInfo)15396_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)15349": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)15411_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)15353"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)15345_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)15358": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)15353": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)15451_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)15451_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a2bfc906519ebf431142a625c40b86c19fb9fee90f8b7c2724a149f4e9602aeb": {
      "address": "0xa693B4101E9F17dCEe71D53b859d38FbB11392B5",
      "txHash": "0xbfb9a76fa31848ebb02d6f18eae1549c8074614680ad652e93956137c8b2ad07",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistry",
            "label": "stableCoin",
            "type": "t_contract(IERC20)15247",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:20"
          },
          {
            "contract": "PaymentRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)9916",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:21"
          },
          {
            "contract": "PaymentRegistry",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)13274",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:22"
          },
          {
            "contract": "PaymentRegistry",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15298_storage)dyn_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:24"
          },
          {
            "contract": "PaymentRegistry",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)15313_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:25"
          }
        ],
        "types": {
          "t_contract(IERC20)15247": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)9916": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)13274": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15298_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)15298_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)15298_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)15283"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)15278"
              }
            ]
          },
          "t_enum(InstalmentType)15283": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)15278": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)15313_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)15313_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "61aa74ef30813fa6a715032952c5c01ca5a123a549dbb70b4cadf8ef93e3f3fb": {
      "address": "0x8E40eeEB03D48d2db16143C8C80510cC5b18396d",
      "txHash": "0xa9775875ccca97e2547940e959d71adcae20e190c9cd330d2c644ad2fcc30e7a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "RTOEscrow",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)3728",
            "src": "../project:/contracts/lending/RTOEscrow.sol:19"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)3728": {
            "label": "contract ERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)2355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b9cdbabed0be997d6c4258f2d913565012faecef5a64ffa45b53fd904b8a3eee": {
      "address": "0x4409b7B31E67Ff15F7A84c29af3f67D3D912736c",
      "txHash": "0x02d0ffe9404666f58c36236ca9756a6546ef013788e3d2e00f57e15bab8db167",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15517_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:16"
          },
          {
            "contract": "Vaults",
            "label": "escrowTokenAddress",
            "type": "t_contract(IEscrow)15319",
            "src": "../project:/contracts/lending/Vaults.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15517_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15517_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15517_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)15319": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6c26090f31ebc27a0fcd5dd7be645d393a340284165f3b8be7e90a98277e8012": {
      "address": "0xB1e9e98780dbc0A3F258f8118a936c7c68cd84C0",
      "txHash": "0x871bafed3759a8f552972399f11bbcbdb72784d1786561a1d7804b9515f01873",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:16"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)17568_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:17"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10064",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:24"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)17508_storage)",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:25"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:26"
          },
          {
            "contract": "ProposalRequestRegistry",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)13241",
            "src": "../project:/contracts/lending/ProposalRequestRegistry.sol:21"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)13241": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)10064": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)17508_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)17508_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)17518_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)17540_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)17513_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)17466"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)17528_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)17462_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)17518_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)17540_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)17475"
              }
            ]
          },
          "t_struct(DirectInfo)17513_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)17466": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)17528_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)17470"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)17462_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)17475": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)17470": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)17568_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)17568_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2bb000ada4d5217aca49ef84f7773a9703535d8df232641e6a5b963cce6da56e": {
      "address": "0xc655bA93F8f2276ad8E386004A2E506CeDc1dEd3",
      "txHash": "0x9b94fa0e0e62347a723504d2fe96ff003a3b5def43abc2466f9698acc9c32bb4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistry",
            "label": "stableCoin",
            "type": "t_contract(IERC20)15295",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:24"
          },
          {
            "contract": "PaymentRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10064",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:25"
          },
          {
            "contract": "PaymentRegistry",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)13241",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:26"
          },
          {
            "contract": "PaymentRegistry",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15346_storage)dyn_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:28"
          },
          {
            "contract": "PaymentRegistry",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)15361_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:30"
          }
        ],
        "types": {
          "t_contract(IERC20)15295": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)10064": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)13241": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15346_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)15346_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)15346_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)15331"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)15326"
              }
            ]
          },
          "t_enum(InstalmentType)15331": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)15326": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)15361_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)15361_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8563c0425171d8eb098d31abe59895ebadd148fdfb743085cb0203ff0d5e8782": {
      "address": "0xd45DbDFE8161C7D0F3ec527EE69B208cFC0bA162",
      "txHash": "0x0d4be90e97bb8c30730539980cd68f3692d94761cac66cc306b434b81f2252c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:16"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)19700_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:17"
          },
          {
            "contract": "ProposalRegistryV2",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10064",
            "src": "../project:/contracts/lending/ProposalRegistryV2.sol:24"
          },
          {
            "contract": "ProposalRegistryV2",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)19640_storage)",
            "src": "../project:/contracts/lending/ProposalRegistryV2.sol:25"
          },
          {
            "contract": "ProposalRegistryV2",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistryV2.sol:26"
          },
          {
            "contract": "ProposalRequestRegistryV2",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistryV2)14452",
            "src": "../project:/contracts/lending/ProposalRequestRegistryV2.sol:26"
          }
        ],
        "types": {
          "t_contract(ProposalRegistryV2)14452": {
            "label": "contract ProposalRegistryV2"
          },
          "t_contract(ContractRegistry)10064": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)19640_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)19640_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)19650_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)19672_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)19645_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)19598"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)19660_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)19594_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)19650_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)19672_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)19607"
              }
            ]
          },
          "t_struct(DirectInfo)19645_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)19598": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)19660_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)19602"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)19594_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)19607": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)19602": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)19700_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)19700_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "68e7a7dd1e5036114d9bedeb5f8a03ac98c3459cca91fe1ba3270e9567f2b9bc": {
      "address": "0xE8F307dC6d1A477C03D40c2ed4Eb43f0044773D6",
      "txHash": "0xde5fc22444cbd1dfc47cbcca9f3fd2e331d1e3d8200c00ca4f5b5803ebd84b64",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:16"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)21835_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:17"
          },
          {
            "contract": "ProposalRegistryV3",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10064",
            "src": "../project:/contracts/lending/ProposalRegistryV3.sol:24"
          },
          {
            "contract": "ProposalRegistryV3",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)21775_storage)",
            "src": "../project:/contracts/lending/ProposalRegistryV3.sol:25"
          },
          {
            "contract": "ProposalRegistryV3",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistryV3.sol:26"
          },
          {
            "contract": "ProposalRequestRegistryV3",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistryV3)15726",
            "src": "../project:/contracts/lending/ProposalRequestRegistryV3.sol:26"
          }
        ],
        "types": {
          "t_contract(ProposalRegistryV3)15726": {
            "label": "contract ProposalRegistryV3"
          },
          "t_contract(ContractRegistry)10064": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)21775_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)21775_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)21785_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)21807_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)21780_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)21733"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)21795_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)21729_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)21785_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)21807_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)21742"
              }
            ]
          },
          "t_struct(DirectInfo)21780_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)21733": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)21795_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)21737"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)21729_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)21742": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)21737": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)21835_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)21835_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "15958c65fb8c8161a66c68081f0dabc1864cd9738f023490842da7635cb784eb": {
      "address": "0xaff7EbAa41b181Cce741FD34e1f0806fCcE9cff3",
      "txHash": "0x77c791e377ca9f99fce5082f24d7eb300c24b2ec11d0bca49129c40596b2e6af",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "RTOEscrow",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)3728",
            "src": "../project:/contracts/lending/RTOEscrow.sol:15"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)3728": {
            "label": "contract ERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)2355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "81967fd9c5c8c8615cb5e9510bb64119c1a90d91597b6f2e7c641b068c852623": {
      "address": "0xd14A78A3518e129Ee8c1b287F6F60fAC190dF477",
      "txHash": "0xa8adeead5110430a268a22a809a68b98e0ea0850270ea554309ff8498ba611a4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "RTOEscrow",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)3669",
            "src": "../project:/contracts/lending/RTOEscrow.sol:14"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)3669": {
            "label": "contract ERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)2355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e1aea30dad7ddfeb9f71fc0f12569fbd88ab095f5b43a96e2b6a8f4c7285f6bb": {
      "address": "0xe3370C1feE8984f74734359b5F90B9061c334fa1",
      "txHash": "0x749c6bcdd5516c670d90ad8ad8f42164ec2e81560b34f5182d18155a9d75fd6e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:16"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)15350_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:17"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)9984",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:18"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)15290_storage)",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:19"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:20"
          },
          {
            "contract": "ProposalRequestRegistry",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)13143",
            "src": "../project:/contracts/lending/ProposalRequestRegistry.sol:20"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)13143": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)9984": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)15290_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)15290_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)15300_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)15322_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)15295_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)15248"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)15310_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)15244_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)15300_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)15322_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)15257"
              }
            ]
          },
          "t_struct(DirectInfo)15295_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)15248": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)15310_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)15252"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)15244_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)15257": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)15252": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)15350_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)15350_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "42a3f04fcc4c0d1aed1fa30cd8b652940bb55151bcf1945881f75c260feeab01": {
      "address": "0xBA301f6A2667fE28Da75EB8Fe5bB52D12DB1Dffa",
      "txHash": "0x034874353ede03b0f6e957c4b5fbbceeafb00a47b6aaa986d8971957f57bda4e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistry",
            "label": "stableCoin",
            "type": "t_contract(IERC20)15146",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:23"
          },
          {
            "contract": "PaymentRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)9984",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:24"
          },
          {
            "contract": "PaymentRegistry",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)13143",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:25"
          },
          {
            "contract": "PaymentRegistry",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15197_storage)dyn_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:27"
          },
          {
            "contract": "PaymentRegistry",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)15212_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:28"
          }
        ],
        "types": {
          "t_contract(IERC20)15146": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)9984": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)13143": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15197_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)15197_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)15197_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)15182"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)15177"
              }
            ]
          },
          "t_enum(InstalmentType)15182": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)15177": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)15212_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)15212_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "09ec2aaede2f162925e06486151b6558ad8f9f94f7017d5227da6fd1b2685752": {
      "address": "0x935fF85B414B9a9B9C0C63070B7743Fbf0Fb34FE",
      "txHash": "0x6e5e6bac8c3c891491269347563862bbc9579ca31152cec73c153a76ac1dc7b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "RTOEscrow",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)3669",
            "src": "../project:/contracts/lending/RTOEscrow.sol:14"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)3669": {
            "label": "contract ERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)2355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "66c9acc70b8f69b8885645bf6f034b0e23d459cf1ac0aa858cf236e96382c2e9": {
      "address": "0xcB89475649272805ed252a659269454fAB23BF02",
      "txHash": "0xc813bed438b9a9cb16c0703da57939c0c942ff24c90b83729a3d48c96d047559",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15434_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:16"
          },
          {
            "contract": "Vaults",
            "label": "escrowTokenAddress",
            "type": "t_contract(IEscrow)15236",
            "src": "../project:/contracts/lending/Vaults.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15434_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15434_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15434_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)15236": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "39f8b9ae90e353b0ea4979fbbbd203f7409115b8ee4d832d08014ed7d736119a": {
      "address": "0x5563F6B65d58ACe7244a21F6d3815230e0D2aaC9",
      "txHash": "0x29deac1d4337f56db9d879e2a9b732a5706d5d566a7db8b7622890973a2a3cc5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "RTOEscrow",
            "label": "stableCoin",
            "type": "t_contract(ERC20Upgradeable)3728",
            "src": "../project:/contracts/lending/RTOEscrow.sol:15"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)3728": {
            "label": "contract ERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)2355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "67474eb83b89f79c632e1a6d486d1eeaf4a579b5d2b85559b4faeb30f5f64a76": {
      "address": "0x00B9cFf452c4F05a9FA1b3BaB1bB5D12EE0FC342",
      "txHash": "0xbdef5ada7fb2d671bd65385cccb5fd7d0c659a119652698eaae87c452bb2f444",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Vaults",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15361_storage))",
            "src": "../project:/contracts/lending/Vaults.sol:16"
          },
          {
            "contract": "Vaults",
            "label": "escrow",
            "type": "t_contract(IEscrow)15163",
            "src": "../project:/contracts/lending/Vaults.sol:43"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vault)15361_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IVault.Vault))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Vault)15361_storage)": {
            "label": "mapping(address => struct IVault.Vault)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Vault)15361_storage": {
            "label": "struct IVault.Vault",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "collateralType",
                "type": "t_address"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IEscrow)15163": {
            "label": "contract IEscrow"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c892ae836349d0239237d6249e0a51cde8372f1649dc4315e38f29460fda418d": {
      "address": "0x2BAD968cfe0e053ECB8b430b05C35920ff9232f1",
      "txHash": "0x2ad58c45ebf01aaa80eca4d6ecfe8ee3bafd4382e3681d653f975bc9303c88c8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrmanager",
            "type": "t_struct(AddrManager)9767_storage",
            "src": "../project:/contracts/lending/ContractRegistry.sol:27"
          },
          {
            "contract": "ContractRegistry",
            "label": "DECIMALS",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:29"
          },
          {
            "contract": "ContractRegistry",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:30"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:31"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralInterestChange",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:32"
          },
          {
            "contract": "ContractRegistry",
            "label": "delayedInstalmentsCount",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:33"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrStatus",
            "type": "t_bool",
            "src": "../project:/contracts/lending/ContractRegistry.sol:34"
          }
        ],
        "types": {
          "t_struct(AddrManager)9767_storage": {
            "label": "struct ContractRegistry.AddrManager",
            "members": [
              {
                "label": "coinContractaddr",
                "type": "t_contract(ERC20Upgradeable)3728"
              },
              {
                "label": "escrowContractAddr",
                "type": "t_contract(IEscrow)21692"
              },
              {
                "label": "vaultContractAddr",
                "type": "t_contract(Vaults)21573"
              },
              {
                "label": "proposalContractAddr",
                "type": "t_contract(ProposalRequestRegistry)18050"
              },
              {
                "label": "paymentContractAddr",
                "type": "t_contract(PaymentRegistry)12272"
              },
              {
                "label": "adminUserAddr",
                "type": "t_address"
              }
            ]
          },
          "t_contract(ERC20Upgradeable)3728": {
            "label": "contract ERC20Upgradeable"
          },
          "t_contract(IEscrow)21692": {
            "label": "contract IEscrow"
          },
          "t_contract(Vaults)21573": {
            "label": "contract Vaults"
          },
          "t_contract(ProposalRequestRegistry)18050": {
            "label": "contract ProposalRequestRegistry"
          },
          "t_contract(PaymentRegistry)12272": {
            "label": "contract PaymentRegistry"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c862d4c8ba174b5cca9dc44461f254fb416ef2ca6546b79750e35da90cdcf187": {
      "address": "0x36423041BB5bE21ef783aD7C41Aa4baD6c76E01a",
      "txHash": "0x9af84091e15c29a06a65257f693cacd2c12e8928698c742382c7fb7f1cae2a7e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)15343_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:17"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)15283_storage)",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:18"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:19"
          },
          {
            "contract": "ProposalRequestRegistry",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)13163",
            "src": "../project:/contracts/lending/ProposalRequestRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)13163": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)15283_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)15283_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)15293_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)15315_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)15288_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)15241"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)15303_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)15237_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)15293_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)15315_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)15250"
              }
            ]
          },
          "t_struct(DirectInfo)15288_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)15241": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)15303_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)15245"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)15237_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)15250": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)15245": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)15343_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)15343_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e00df9134a4e935566b8778e5e03e8c76993d3657033995116e1e435a18fa81d": {
      "address": "0x3a42B7857a160190a02Fd9d07B8b3C3577865967",
      "txHash": "0x3c475cb27296da4cf70913336ea6a1224e983967222643c9192a3de821fba5fe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistry",
            "label": "stableCoin",
            "type": "t_contract(IERC20)15139",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:24"
          },
          {
            "contract": "PaymentRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:25"
          },
          {
            "contract": "PaymentRegistry",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)13163",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:26"
          },
          {
            "contract": "PaymentRegistry",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15190_storage)dyn_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:28"
          },
          {
            "contract": "PaymentRegistry",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)15205_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)15139": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)13163": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15190_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)15190_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)15190_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)15175"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)15170"
              }
            ]
          },
          "t_enum(InstalmentType)15175": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)15170": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)15205_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)15205_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "485b17b52d9a4a969744a4d574c4e94e66394414e029124aeb76f4c82163af25": {
      "address": "0xB34a88f1Df62029f3c7DfF573b679Af6c9FF5cA3",
      "txHash": "0xdc60f25da4c3b005f1c160e838a8d558a056deb57abf5686f3c08b2c5fd7eeb6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistry",
            "label": "stableCoin",
            "type": "t_contract(IERC20)15142",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:24"
          },
          {
            "contract": "PaymentRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:25"
          },
          {
            "contract": "PaymentRegistry",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)13166",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:26"
          },
          {
            "contract": "PaymentRegistry",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15193_storage)dyn_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:28"
          },
          {
            "contract": "PaymentRegistry",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)15208_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)15142": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)13166": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15193_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)15193_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)15193_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)15178"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)15173"
              }
            ]
          },
          "t_enum(InstalmentType)15178": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)15173": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)15208_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)15208_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d8296a2378ddbb388589aeb180650cd07f31753cad8f3a53b9054dd423a637b4": {
      "address": "0x7717906Db97F1739cFa6f61b6F22684AC178D206",
      "txHash": "0x60fa6266472f371916224a1c277ba5b0b67b5fc059a3c2bf56c65c31d7c8a0ef",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistry",
            "label": "stableCoin",
            "type": "t_contract(IERC20)16515",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:24"
          },
          {
            "contract": "PaymentRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:25"
          },
          {
            "contract": "PaymentRegistry",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)14541",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:26"
          },
          {
            "contract": "PaymentRegistry",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)16566_storage)dyn_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:28"
          },
          {
            "contract": "PaymentRegistry",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)16581_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)16515": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)14541": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)16566_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)16566_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)16566_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)16551"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)16546"
              }
            ]
          },
          "t_enum(InstalmentType)16551": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)16546": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)16581_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)16581_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "93e8d60c4e1f5078e012f37fcb5ddd1e88e31fb5b009a1da611dfed1ee4e84c3": {
      "address": "0x9CDeaf24a1517a48DF1BdA502bA86a6B5282321a",
      "txHash": "0xa69e0e116b9a3351b12099a8850d4069344299d376e4b115ed3141f610fe42dd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)15342_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:17"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)15282_storage)",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:18"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:19"
          },
          {
            "contract": "ProposalRequestRegistry",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)13164",
            "src": "../project:/contracts/lending/ProposalRequestRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)13164": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)15282_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)15282_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)15292_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)15314_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)15287_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)15240"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)15302_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)15236_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)15292_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)15314_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)15249"
              }
            ]
          },
          "t_struct(DirectInfo)15287_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)15240": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)15302_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)15244"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)15236_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)15249": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)15244": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)15342_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)15342_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "71ce621075b386080c40e5dbb4c1c98287b1898f4020457ce9935b31415cdfc0": {
      "address": "0x1a5ac4B0301364d4eA2eaBc91bCcEBeB1d2CDfEf",
      "txHash": "0xe20346ae3a6b8363ba7633fa7dd544a448a06b279d480e627a7b8f18a4b4f809",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)15342_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:17"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)15282_storage)",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:18"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:19"
          },
          {
            "contract": "ProposalRequestRegistry",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)13164",
            "src": "../project:/contracts/lending/ProposalRequestRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)13164": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)15282_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)15282_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)15292_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)15314_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)15287_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)15240"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)15302_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)15236_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)15292_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)15314_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)15249"
              }
            ]
          },
          "t_struct(DirectInfo)15287_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)15240": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)15302_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)15244"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)15236_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)15249": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)15244": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)15342_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)15342_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e1b6f7eb7a6a328c8653a92be4e949aed2cfd46101d1f05424ec0384229bbe4b": {
      "address": "0x331E3E1420e7D87015E6D47D36B590C332a9166b",
      "txHash": "0x4409b12a09386c9ed450c94446d3f0c710860997dbb78aef1766c5606f5542fc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistryV2",
            "label": "stableCoin",
            "type": "t_contract(IERC20)16515",
            "src": "../project:/contracts/lending/PaymentRegistryV2.sol:24"
          },
          {
            "contract": "PaymentRegistryV2",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/PaymentRegistryV2.sol:25"
          },
          {
            "contract": "PaymentRegistryV2",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)14541",
            "src": "../project:/contracts/lending/PaymentRegistryV2.sol:26"
          },
          {
            "contract": "PaymentRegistryV2",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)16566_storage)dyn_storage)",
            "src": "../project:/contracts/lending/PaymentRegistryV2.sol:28"
          },
          {
            "contract": "PaymentRegistryV2",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)16581_storage)",
            "src": "../project:/contracts/lending/PaymentRegistryV2.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)16515": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)14541": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)16566_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)16566_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)16566_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)16551"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)16546"
              }
            ]
          },
          "t_enum(InstalmentType)16551": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)16546": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)16581_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)16581_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5694279cc9803cd2a413a4f2980563712973a815060882cbf9c2e47f788ef990": {
      "address": "0x5772460B3106634f5260BAf0a4f5561A8Db9d230",
      "txHash": "0x9ceb4843fe3026d258dd073fa3277a6fa82e6716d1fcdb97484532ea77664d54",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ContractRegistryV2",
            "label": "addrmanager",
            "type": "t_struct(AddrManager)10068_storage",
            "src": "../project:/contracts/lending/ContractRegistryV2.sol:27"
          },
          {
            "contract": "ContractRegistryV2",
            "label": "DECIMALS",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistryV2.sol:29"
          },
          {
            "contract": "ContractRegistryV2",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistryV2.sol:30"
          },
          {
            "contract": "ContractRegistryV2",
            "label": "collateralPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistryV2.sol:31"
          },
          {
            "contract": "ContractRegistryV2",
            "label": "collateralInterestChange",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistryV2.sol:32"
          },
          {
            "contract": "ContractRegistryV2",
            "label": "delayedInstalmentsCount",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistryV2.sol:33"
          },
          {
            "contract": "ContractRegistryV2",
            "label": "addrStatus",
            "type": "t_bool",
            "src": "../project:/contracts/lending/ContractRegistryV2.sol:34"
          }
        ],
        "types": {
          "t_struct(AddrManager)10068_storage": {
            "label": "struct ContractRegistryV2.AddrManager",
            "members": [
              {
                "label": "coinContractaddr",
                "type": "t_contract(ERC20Upgradeable)3728"
              },
              {
                "label": "escrowContractAddr",
                "type": "t_contract(IEscrow)21692"
              },
              {
                "label": "vaultContractAddr",
                "type": "t_contract(Vaults)21573"
              },
              {
                "label": "proposalContractAddr",
                "type": "t_contract(ProposalRequestRegistry)18050"
              },
              {
                "label": "paymentContractAddr",
                "type": "t_contract(PaymentRegistry)12272"
              },
              {
                "label": "adminUserAddr",
                "type": "t_address"
              }
            ]
          },
          "t_contract(ERC20Upgradeable)3728": {
            "label": "contract ERC20Upgradeable"
          },
          "t_contract(IEscrow)21692": {
            "label": "contract IEscrow"
          },
          "t_contract(Vaults)21573": {
            "label": "contract Vaults"
          },
          "t_contract(ProposalRequestRegistry)18050": {
            "label": "contract ProposalRequestRegistry"
          },
          "t_contract(PaymentRegistry)12272": {
            "label": "contract PaymentRegistry"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "82fea1cfd7d13527069656f2884378fcaa2b4d04e2ec4ddfe861198f2092ce46": {
      "address": "0x7222581B358c0276E13464779AC0827A13881C24",
      "txHash": "0xb0aaef15f9060682530a5b10cf04d4bfabab228b38a79dc333253085c8e4b812",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)19031_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistryV2",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10038",
            "src": "../project:/contracts/lending/ProposalRegistryV2.sol:22"
          },
          {
            "contract": "ProposalRegistryV2",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)18971_storage)",
            "src": "../project:/contracts/lending/ProposalRegistryV2.sol:23"
          },
          {
            "contract": "ProposalRegistryV2",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistryV2.sol:24"
          },
          {
            "contract": "ProposalRequestRegistryV2",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistryV2)16031",
            "src": "../project:/contracts/lending/ProposalRequestRegistryV2.sol:23"
          }
        ],
        "types": {
          "t_contract(ProposalRegistryV2)16031": {
            "label": "contract ProposalRegistryV2"
          },
          "t_contract(ContractRegistry)10038": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)18971_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)18971_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)18981_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)19003_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)18976_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)18929"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)18991_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)18925_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)18981_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)19003_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)18938"
              }
            ]
          },
          "t_struct(DirectInfo)18976_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)18929": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_struct(BorrowerStruct)18991_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)18933"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)18925_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)18938": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)18933": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)19031_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)19031_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3aed1cc1d3f615fdb823fe07449942ecb635bc5fcf5622d4cc667be022263e44": {
      "address": "0xB46fF91f019CB03CDC8Ad0DD395AbFD1b63a81F2",
      "txHash": "0x8746bc344c14dcd10b241cb1290ee4d5bf5e2406fbd183f5e4906105432132a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrmanager",
            "type": "t_struct(AddrManager)9770_storage",
            "src": "../project:/contracts/lending/ContractRegistry.sol:27"
          },
          {
            "contract": "ContractRegistry",
            "label": "DECIMALS",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:29"
          },
          {
            "contract": "ContractRegistry",
            "label": "adminShare",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:30"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:31"
          },
          {
            "contract": "ContractRegistry",
            "label": "collateralInterestChange",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:32"
          },
          {
            "contract": "ContractRegistry",
            "label": "delayedInstalmentsCount",
            "type": "t_uint256",
            "src": "../project:/contracts/lending/ContractRegistry.sol:33"
          },
          {
            "contract": "ContractRegistry",
            "label": "addrStatus",
            "type": "t_bool",
            "src": "../project:/contracts/lending/ContractRegistry.sol:34"
          }
        ],
        "types": {
          "t_struct(AddrManager)9770_storage": {
            "label": "struct ContractRegistry.AddrManager",
            "members": [
              {
                "label": "coinContractaddr",
                "type": "t_contract(ERC20Upgradeable)3728"
              },
              {
                "label": "escrowContractAddr",
                "type": "t_contract(IEscrow)15192"
              },
              {
                "label": "vaultContractAddr",
                "type": "t_contract(Vaults)15073"
              },
              {
                "label": "proposalContractAddr",
                "type": "t_contract(ProposalRequestRegistry)14016"
              },
              {
                "label": "paymentContractAddr",
                "type": "t_contract(PaymentRegistry)11997"
              },
              {
                "label": "adminUserAddr",
                "type": "t_address"
              }
            ]
          },
          "t_contract(ERC20Upgradeable)3728": {
            "label": "contract ERC20Upgradeable"
          },
          "t_contract(IEscrow)15192": {
            "label": "contract IEscrow"
          },
          "t_contract(Vaults)15073": {
            "label": "contract Vaults"
          },
          "t_contract(ProposalRequestRegistry)14016": {
            "label": "contract ProposalRequestRegistry"
          },
          "t_contract(PaymentRegistry)11997": {
            "label": "contract PaymentRegistry"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "157d8e2f0a0950b7057b237ba1fcea11a299bd808d3f6514f64b3856f3e87eda": {
      "address": "0x79208fa66CcEe888F39F984e1836E3d6A56A36CE",
      "txHash": "0xb3bf0065d8758dd4975849504f14a9e986c8a1c00cbe39353443d2464e7f4e43",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "UserRegistry",
            "label": "userList",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/lending/UserRegistry.sol:14"
          },
          {
            "contract": "UserRegistry",
            "label": "userStructs",
            "type": "t_mapping(t_address,t_struct(UserStruct)15373_storage)",
            "src": "../project:/contracts/lending/UserRegistry.sol:15"
          },
          {
            "contract": "ProposalRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10041",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:22"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalStructs",
            "type": "t_mapping(t_uint256,t_struct(ProposalStruct)15313_storage)",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:23"
          },
          {
            "contract": "ProposalRegistry",
            "label": "proposalList",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/lending/ProposalRegistry.sol:24"
          },
          {
            "contract": "ProposalRequestRegistry",
            "label": "proposalRegistry",
            "type": "t_contract(ProposalRegistry)13194",
            "src": "../project:/contracts/lending/ProposalRequestRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(ProposalRegistry)13194": {
            "label": "contract ProposalRegistry"
          },
          "t_contract(ContractRegistry)10041": {
            "label": "contract ContractRegistry"
          },
          "t_mapping(t_uint256,t_struct(ProposalStruct)15313_storage)": {
            "label": "mapping(uint256 => struct IProposal.ProposalStruct)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ProposalStruct)15313_storage": {
            "label": "struct IProposal.ProposalStruct",
            "members": [
              {
                "label": "proposalListPointer",
                "type": "t_uint256"
              },
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentMonths",
                "type": "t_uint256"
              },
              {
                "label": "datesInfo",
                "type": "t_struct(DatesInfo)15323_storage"
              },
              {
                "label": "isCollateral",
                "type": "t_bool"
              },
              {
                "label": "collateralInfo",
                "type": "t_struct(CollateralStruct)15345_storage"
              },
              {
                "label": "isDirectInfo",
                "type": "t_struct(DirectInfo)15318_storage"
              },
              {
                "label": "proposalState",
                "type": "t_enum(ProposalState)15271"
              },
              {
                "label": "borrowDetails",
                "type": "t_struct(BorrowerStruct)15333_storage"
              },
              {
                "label": "earnings",
                "type": "t_struct(EarningsStruct)15266_storage"
              },
              {
                "label": "proposalId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(DatesInfo)15323_storage": {
            "label": "struct IProposal.DatesInfo",
            "members": [
              {
                "label": "createdDate",
                "type": "t_uint256"
              },
              {
                "label": "updatedDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(CollateralStruct)15345_storage": {
            "label": "struct IProposal.CollateralStruct",
            "members": [
              {
                "label": "collateralTypeAddress",
                "type": "t_address"
              },
              {
                "label": "collateralPerPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTotalPrice",
                "type": "t_uint256"
              },
              {
                "label": "collateralTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "collateralState",
                "type": "t_enum(CollateralState)15280"
              }
            ]
          },
          "t_struct(DirectInfo)15318_storage": {
            "label": "struct IProposal.DirectInfo",
            "members": [
              {
                "label": "isDirect",
                "type": "t_bool"
              },
              {
                "label": "isDirectAddress",
                "type": "t_address"
              }
            ]
          },
          "t_enum(ProposalState)15271": {
            "label": "enum IProposal.ProposalState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED",
              "DELETED"
            ]
          },
          "t_struct(BorrowerStruct)15333_storage": {
            "label": "struct IProposal.BorrowerStruct",
            "members": [
              {
                "label": "borrowerAddress",
                "type": "t_address"
              },
              {
                "label": "borrowState",
                "type": "t_enum(BorrowState)15275"
              },
              {
                "label": "receivedAmountStatus",
                "type": "t_bool"
              },
              {
                "label": "borrowerStatus",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(EarningsStruct)15266_storage": {
            "label": "struct IProposal.EarningsStruct",
            "members": [
              {
                "label": "interestAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAdminShare",
                "type": "t_uint256"
              },
              {
                "label": "totalUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyUserShare",
                "type": "t_uint256"
              },
              {
                "label": "monthlyTotalShare",
                "type": "t_uint256"
              },
              {
                "label": "completedInstallments",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(CollateralState)15280": {
            "label": "enum IProposal.CollateralState",
            "members": [
              "INVALID",
              "PENDING",
              "RECEIVED",
              "FAILED"
            ]
          },
          "t_enum(BorrowState)15275": {
            "label": "enum IProposal.BorrowState",
            "members": [
              "INACTIVE",
              "ACTIVE",
              "CLOSED"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserStruct)15373_storage)": {
            "label": "mapping(address => struct IUser.UserStruct)"
          },
          "t_struct(UserStruct)15373_storage": {
            "label": "struct IUser.UserStruct",
            "members": [
              {
                "label": "userListPointer",
                "type": "t_uint256"
              },
              {
                "label": "proposalIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "proposalIdPointers",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "borrowings",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "pendingRequests",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "60f2677ae06357c3ce2d5d3c513db476f5f9a74ce4ca1ce9c563002fcd10f01a": {
      "address": "0x9B89bC0F220769880F28DEf0f9008165d5Cb2dA3",
      "txHash": "0x7fe16c22f7d28046222f8d7125643fc5cfd9973b1e852a80629e3bad3f8863e2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PaymentRegistry",
            "label": "stableCoin",
            "type": "t_contract(IERC20)15168",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:24"
          },
          {
            "contract": "PaymentRegistry",
            "label": "contractRegistry",
            "type": "t_contract(ContractRegistry)10041",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:25"
          },
          {
            "contract": "PaymentRegistry",
            "label": "proposalReg",
            "type": "t_contract(ProposalRegistry)13194",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:26"
          },
          {
            "contract": "PaymentRegistry",
            "label": "transactions",
            "type": "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15219_storage)dyn_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:28"
          },
          {
            "contract": "PaymentRegistry",
            "label": "instalmentInfo",
            "type": "t_mapping(t_uint256,t_struct(InstalmentStruct)15234_storage)",
            "src": "../project:/contracts/lending/PaymentRegistry.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)15168": {
            "label": "contract IERC20"
          },
          "t_contract(ContractRegistry)10041": {
            "label": "contract ContractRegistry"
          },
          "t_contract(ProposalRegistry)13194": {
            "label": "contract ProposalRegistry"
          },
          "t_mapping(t_uint256,t_array(t_struct(ProposalTransactionStruct)15219_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IInstalments.ProposalTransactionStruct[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(ProposalTransactionStruct)15219_storage)dyn_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct[]"
          },
          "t_struct(ProposalTransactionStruct)15219_storage": {
            "label": "struct IInstalments.ProposalTransactionStruct",
            "members": [
              {
                "label": "instalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "transactionDate",
                "type": "t_uint256"
              },
              {
                "label": "instalmentUserAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentAdminAmount",
                "type": "t_uint256"
              },
              {
                "label": "instalmentType",
                "type": "t_enum(InstalmentType)15204"
              },
              {
                "label": "state",
                "type": "t_enum(TransactionState)15199"
              }
            ]
          },
          "t_enum(InstalmentType)15204": {
            "label": "enum IInstalments.InstalmentType",
            "members": [
              "DIRECT",
              "COLLATERAL",
              "MULTIDIRECT",
              "MULTICOLLATERAL"
            ]
          },
          "t_enum(TransactionState)15199": {
            "label": "enum IInstalments.TransactionState",
            "members": [
              "SUCCESS",
              "FAILED",
              "PENDING"
            ]
          },
          "t_mapping(t_uint256,t_struct(InstalmentStruct)15234_storage)": {
            "label": "mapping(uint256 => struct IInstalments.InstalmentStruct)"
          },
          "t_struct(InstalmentStruct)15234_storage": {
            "label": "struct IInstalments.InstalmentStruct",
            "members": [
              {
                "label": "lastInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "collateralAsInstalment",
                "type": "t_bool"
              },
              {
                "label": "colateralInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "directInstalmentCount",
                "type": "t_uint256"
              },
              {
                "label": "closeProposal",
                "type": "t_bool"
              },
              {
                "label": "fullPaymentClose",
                "type": "t_bool"
              },
              {
                "label": "delayPaymentClose",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f7425c5b165c751b58e492c66a1881fdd4c98500d2fedaa163b124dc2d426974": {
      "address": "0x6e8D4A571410258e401267aF722eef54A54aE911",
      "txHash": "0xda557d89e2b5cab40516e345eac6f958761b0ef81b84eccb34ef72e1fd229ab2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "SwapperV2",
            "label": "marketRate",
            "type": "t_contract(MarketRateOracle)16827",
            "src": "../project:/contracts/swapping/SwapperV2.sol:15"
          },
          {
            "contract": "SwapperV2",
            "label": "swapFeePct",
            "type": "t_uint256",
            "src": "../project:/contracts/swapping/SwapperV2.sol:16"
          },
          {
            "contract": "SwapperV2",
            "label": "priceList",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/swapping/SwapperV2.sol:26"
          },
          {
            "contract": "SwapperV2",
            "label": "contractAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/SwapperV2.sol:27"
          },
          {
            "contract": "SwapperV2",
            "label": "adminAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/SwapperV2.sol:28"
          },
          {
            "contract": "SwapperV2",
            "label": "swapRequests",
            "type": "t_mapping(t_uint256,t_struct(SwapData)18518_storage)",
            "src": "../project:/contracts/swapping/SwapperV2.sol:44"
          }
        ],
        "types": {
          "t_contract(MarketRateOracle)16827": {
            "label": "contract MarketRateOracle"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(SwapData)18518_storage)": {
            "label": "mapping(uint256 => struct SwapperV2.SwapData)"
          },
          "t_struct(SwapData)18518_storage": {
            "label": "struct SwapperV2.SwapData",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "from",
                "type": "t_address"
              },
              {
                "label": "tokenFrom",
                "type": "t_address"
              },
              {
                "label": "tokenTo",
                "type": "t_address"
              },
              {
                "label": "fromAmount",
                "type": "t_uint256"
              },
              {
                "label": "toAmount",
                "type": "t_uint256"
              },
              {
                "label": "expirationTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "fromTokenUnitPrice",
                "type": "t_uint256"
              },
              {
                "label": "toTokenUnitPrice",
                "type": "t_uint256"
              },
              {
                "label": "adminFee",
                "type": "t_uint256"
              },
              {
                "label": "claim",
                "type": "t_enum(SwapState)18529"
              }
            ]
          },
          "t_enum(SwapState)18529": {
            "label": "enum SwapperV2.SwapState",
            "members": [
              "INVALID",
              "OPEN",
              "CLOSED",
              "EXPIRED",
              "FAILED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      },
      "allAddresses": [
        "0x6e8D4A571410258e401267aF722eef54A54aE911",
        "0x9D450b5b190eaa636A3255435e76942B3e52c4Fe"
      ]
    },
    "36be6d4e0a9d44845b95f318d3813513557f7f5ec240761dfb1db57bc85d5fda": {
      "address": "0x8226b3BB5D57AAEbE3C504cB673667C020d421EE",
      "txHash": "0x84ffcf55c973fd941706e9d6cbf78bfa6720ce433b3d849107f9eb787158b919",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "contract": "WrappedToken",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../project:/contracts/bridging/WrappedToken.sol:17"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "6a0eb8e6585263e9b596f97bd6fc4e50ea5c384e36a306c5ee2d33d537d1cc94": {
      "address": "0xe71F95466F5f2D91834Eb6C16Df665b7b78D2324",
      "txHash": "0x53352814f1f9e19bd0a670194d1b42328045a5ced2fa75bc01d9e1a2ae81f42a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "SwapperV5",
            "label": "marketRate",
            "type": "t_contract(MarketRateOracle)16827",
            "src": "../project:/contracts/swapping/SwapperV5.sol:15"
          },
          {
            "contract": "SwapperV5",
            "label": "swapFeePct",
            "type": "t_uint256",
            "src": "../project:/contracts/swapping/SwapperV5.sol:16"
          },
          {
            "contract": "SwapperV5",
            "label": "priceList",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/swapping/SwapperV5.sol:41"
          },
          {
            "contract": "SwapperV5",
            "label": "contractAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/SwapperV5.sol:42"
          },
          {
            "contract": "SwapperV5",
            "label": "adminAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../project:/contracts/swapping/SwapperV5.sol:43"
          },
          {
            "contract": "SwapperV5",
            "label": "swapRequests",
            "type": "t_mapping(t_uint256,t_struct(SwapData)20584_storage)",
            "src": "../project:/contracts/swapping/SwapperV5.sol:59"
          }
        ],
        "types": {
          "t_contract(MarketRateOracle)16827": {
            "label": "contract MarketRateOracle"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(SwapData)20584_storage)": {
            "label": "mapping(uint256 => struct SwapperV5.SwapData)"
          },
          "t_struct(SwapData)20584_storage": {
            "label": "struct SwapperV5.SwapData",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "from",
                "type": "t_address"
              },
              {
                "label": "tokenFrom",
                "type": "t_address"
              },
              {
                "label": "tokenTo",
                "type": "t_address"
              },
              {
                "label": "fromAmount",
                "type": "t_uint256"
              },
              {
                "label": "toAmount",
                "type": "t_uint256"
              },
              {
                "label": "expirationTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "fromTokenUnitPrice",
                "type": "t_uint256"
              },
              {
                "label": "toTokenUnitPrice",
                "type": "t_uint256"
              },
              {
                "label": "adminFee",
                "type": "t_uint256"
              },
              {
                "label": "claim",
                "type": "t_enum(SwapState)20595"
              }
            ]
          },
          "t_enum(SwapState)20595": {
            "label": "enum SwapperV5.SwapState",
            "members": [
              "INVALID",
              "OPEN",
              "CLOSED",
              "EXPIRED",
              "FAILED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
